
bin\Debug\Blinking_LED.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002e80  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00002e80  00002f14  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .fuse         00000002  00820000  00820000  00002f1c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .debug_aranges 000001a0  00000000  00000000  00002f1e  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000299  00000000  00000000  000030be  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000286b  00000000  00000000  00003357  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000011ac  00000000  00000000  00005bc2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001b71  00000000  00000000  00006d6e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000260  00000000  00000000  000088e0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000498  00000000  00000000  00008b40  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000007ce  00000000  00000000  00008fd8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  000097a6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e0 e8       	ldi	r30, 0x80	; 128
      68:	fe e2       	ldi	r31, 0x2E	; 46
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 76 11 	call	0x22ec	; 0x22ec <main>
      7a:	0c 94 3e 17 	jmp	0x2e7c	; 0x2e7c <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <gpio_InitPort>:
      82:	df 93       	push	r29
      84:	cf 93       	push	r28
      86:	00 d0       	rcall	.+0      	; 0x88 <gpio_InitPort+0x6>
      88:	00 d0       	rcall	.+0      	; 0x8a <gpio_InitPort+0x8>
      8a:	0f 92       	push	r0
      8c:	cd b7       	in	r28, 0x3d	; 61
      8e:	de b7       	in	r29, 0x3e	; 62
      90:	9b 83       	std	Y+3, r25	; 0x03
      92:	8a 83       	std	Y+2, r24	; 0x02
      94:	7d 83       	std	Y+5, r23	; 0x05
      96:	6c 83       	std	Y+4, r22	; 0x04
      98:	19 82       	std	Y+1, r1	; 0x01
      9a:	19 82       	std	Y+1, r1	; 0x01
      9c:	0b c0       	rjmp	.+22     	; 0xb4 <gpio_InitPort+0x32>
      9e:	8a 81       	ldd	r24, Y+2	; 0x02
      a0:	9b 81       	ldd	r25, Y+3	; 0x03
      a2:	2c 81       	ldd	r18, Y+4	; 0x04
      a4:	3d 81       	ldd	r19, Y+5	; 0x05
      a6:	69 81       	ldd	r22, Y+1	; 0x01
      a8:	a9 01       	movw	r20, r18
      aa:	0e 94 65 00 	call	0xca	; 0xca <gpio_InitPortPin>
      ae:	89 81       	ldd	r24, Y+1	; 0x01
      b0:	8f 5f       	subi	r24, 0xFF	; 255
      b2:	89 83       	std	Y+1, r24	; 0x01
      b4:	89 81       	ldd	r24, Y+1	; 0x01
      b6:	88 30       	cpi	r24, 0x08	; 8
      b8:	90 f3       	brcs	.-28     	; 0x9e <gpio_InitPort+0x1c>
      ba:	0f 90       	pop	r0
      bc:	0f 90       	pop	r0
      be:	0f 90       	pop	r0
      c0:	0f 90       	pop	r0
      c2:	0f 90       	pop	r0
      c4:	cf 91       	pop	r28
      c6:	df 91       	pop	r29
      c8:	08 95       	ret

000000ca <gpio_InitPortPin>:
      ca:	df 93       	push	r29
      cc:	cf 93       	push	r28
      ce:	cd b7       	in	r28, 0x3d	; 61
      d0:	de b7       	in	r29, 0x3e	; 62
      d2:	27 97       	sbiw	r28, 0x07	; 7
      d4:	0f b6       	in	r0, 0x3f	; 63
      d6:	f8 94       	cli
      d8:	de bf       	out	0x3e, r29	; 62
      da:	0f be       	out	0x3f, r0	; 63
      dc:	cd bf       	out	0x3d, r28	; 61
      de:	9a 83       	std	Y+2, r25	; 0x02
      e0:	89 83       	std	Y+1, r24	; 0x01
      e2:	6b 83       	std	Y+3, r22	; 0x03
      e4:	5d 83       	std	Y+5, r21	; 0x05
      e6:	4c 83       	std	Y+4, r20	; 0x04
      e8:	89 81       	ldd	r24, Y+1	; 0x01
      ea:	9a 81       	ldd	r25, Y+2	; 0x02
      ec:	9f 83       	std	Y+7, r25	; 0x07
      ee:	8e 83       	std	Y+6, r24	; 0x06
      f0:	8e 81       	ldd	r24, Y+6	; 0x06
      f2:	9f 81       	ldd	r25, Y+7	; 0x07
      f4:	81 30       	cpi	r24, 0x01	; 1
      f6:	91 05       	cpc	r25, r1
      f8:	99 f1       	breq	.+102    	; 0x160 <gpio_InitPortPin+0x96>
      fa:	8e 81       	ldd	r24, Y+6	; 0x06
      fc:	9f 81       	ldd	r25, Y+7	; 0x07
      fe:	81 30       	cpi	r24, 0x01	; 1
     100:	91 05       	cpc	r25, r1
     102:	68 f0       	brcs	.+26     	; 0x11e <gpio_InitPortPin+0x54>
     104:	8e 81       	ldd	r24, Y+6	; 0x06
     106:	9f 81       	ldd	r25, Y+7	; 0x07
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	91 05       	cpc	r25, r1
     10c:	09 f4       	brne	.+2      	; 0x110 <gpio_InitPortPin+0x46>
     10e:	49 c0       	rjmp	.+146    	; 0x1a2 <gpio_InitPortPin+0xd8>
     110:	8e 81       	ldd	r24, Y+6	; 0x06
     112:	9f 81       	ldd	r25, Y+7	; 0x07
     114:	83 30       	cpi	r24, 0x03	; 3
     116:	91 05       	cpc	r25, r1
     118:	09 f4       	brne	.+2      	; 0x11c <gpio_InitPortPin+0x52>
     11a:	64 c0       	rjmp	.+200    	; 0x1e4 <gpio_InitPortPin+0x11a>
     11c:	83 c0       	rjmp	.+262    	; 0x224 <gpio_InitPortPin+0x15a>
     11e:	aa e3       	ldi	r26, 0x3A	; 58
     120:	b0 e0       	ldi	r27, 0x00	; 0
     122:	ea e3       	ldi	r30, 0x3A	; 58
     124:	f0 e0       	ldi	r31, 0x00	; 0
     126:	80 81       	ld	r24, Z
     128:	48 2f       	mov	r20, r24
     12a:	8b 81       	ldd	r24, Y+3	; 0x03
     12c:	28 2f       	mov	r18, r24
     12e:	30 e0       	ldi	r19, 0x00	; 0
     130:	81 e0       	ldi	r24, 0x01	; 1
     132:	90 e0       	ldi	r25, 0x00	; 0
     134:	02 c0       	rjmp	.+4      	; 0x13a <gpio_InitPortPin+0x70>
     136:	88 0f       	add	r24, r24
     138:	99 1f       	adc	r25, r25
     13a:	2a 95       	dec	r18
     13c:	e2 f7       	brpl	.-8      	; 0x136 <gpio_InitPortPin+0x6c>
     13e:	80 95       	com	r24
     140:	84 23       	and	r24, r20
     142:	48 2f       	mov	r20, r24
     144:	8b 81       	ldd	r24, Y+3	; 0x03
     146:	28 2f       	mov	r18, r24
     148:	30 e0       	ldi	r19, 0x00	; 0
     14a:	8c 81       	ldd	r24, Y+4	; 0x04
     14c:	9d 81       	ldd	r25, Y+5	; 0x05
     14e:	02 2e       	mov	r0, r18
     150:	02 c0       	rjmp	.+4      	; 0x156 <gpio_InitPortPin+0x8c>
     152:	88 0f       	add	r24, r24
     154:	99 1f       	adc	r25, r25
     156:	0a 94       	dec	r0
     158:	e2 f7       	brpl	.-8      	; 0x152 <gpio_InitPortPin+0x88>
     15a:	84 2b       	or	r24, r20
     15c:	8c 93       	st	X, r24
     15e:	62 c0       	rjmp	.+196    	; 0x224 <gpio_InitPortPin+0x15a>
     160:	a7 e3       	ldi	r26, 0x37	; 55
     162:	b0 e0       	ldi	r27, 0x00	; 0
     164:	e7 e3       	ldi	r30, 0x37	; 55
     166:	f0 e0       	ldi	r31, 0x00	; 0
     168:	80 81       	ld	r24, Z
     16a:	48 2f       	mov	r20, r24
     16c:	8b 81       	ldd	r24, Y+3	; 0x03
     16e:	28 2f       	mov	r18, r24
     170:	30 e0       	ldi	r19, 0x00	; 0
     172:	81 e0       	ldi	r24, 0x01	; 1
     174:	90 e0       	ldi	r25, 0x00	; 0
     176:	02 c0       	rjmp	.+4      	; 0x17c <gpio_InitPortPin+0xb2>
     178:	88 0f       	add	r24, r24
     17a:	99 1f       	adc	r25, r25
     17c:	2a 95       	dec	r18
     17e:	e2 f7       	brpl	.-8      	; 0x178 <gpio_InitPortPin+0xae>
     180:	80 95       	com	r24
     182:	84 23       	and	r24, r20
     184:	48 2f       	mov	r20, r24
     186:	8b 81       	ldd	r24, Y+3	; 0x03
     188:	28 2f       	mov	r18, r24
     18a:	30 e0       	ldi	r19, 0x00	; 0
     18c:	8c 81       	ldd	r24, Y+4	; 0x04
     18e:	9d 81       	ldd	r25, Y+5	; 0x05
     190:	02 2e       	mov	r0, r18
     192:	02 c0       	rjmp	.+4      	; 0x198 <gpio_InitPortPin+0xce>
     194:	88 0f       	add	r24, r24
     196:	99 1f       	adc	r25, r25
     198:	0a 94       	dec	r0
     19a:	e2 f7       	brpl	.-8      	; 0x194 <gpio_InitPortPin+0xca>
     19c:	84 2b       	or	r24, r20
     19e:	8c 93       	st	X, r24
     1a0:	41 c0       	rjmp	.+130    	; 0x224 <gpio_InitPortPin+0x15a>
     1a2:	a4 e3       	ldi	r26, 0x34	; 52
     1a4:	b0 e0       	ldi	r27, 0x00	; 0
     1a6:	e4 e3       	ldi	r30, 0x34	; 52
     1a8:	f0 e0       	ldi	r31, 0x00	; 0
     1aa:	80 81       	ld	r24, Z
     1ac:	48 2f       	mov	r20, r24
     1ae:	8b 81       	ldd	r24, Y+3	; 0x03
     1b0:	28 2f       	mov	r18, r24
     1b2:	30 e0       	ldi	r19, 0x00	; 0
     1b4:	81 e0       	ldi	r24, 0x01	; 1
     1b6:	90 e0       	ldi	r25, 0x00	; 0
     1b8:	02 c0       	rjmp	.+4      	; 0x1be <gpio_InitPortPin+0xf4>
     1ba:	88 0f       	add	r24, r24
     1bc:	99 1f       	adc	r25, r25
     1be:	2a 95       	dec	r18
     1c0:	e2 f7       	brpl	.-8      	; 0x1ba <gpio_InitPortPin+0xf0>
     1c2:	80 95       	com	r24
     1c4:	84 23       	and	r24, r20
     1c6:	48 2f       	mov	r20, r24
     1c8:	8b 81       	ldd	r24, Y+3	; 0x03
     1ca:	28 2f       	mov	r18, r24
     1cc:	30 e0       	ldi	r19, 0x00	; 0
     1ce:	8c 81       	ldd	r24, Y+4	; 0x04
     1d0:	9d 81       	ldd	r25, Y+5	; 0x05
     1d2:	02 2e       	mov	r0, r18
     1d4:	02 c0       	rjmp	.+4      	; 0x1da <gpio_InitPortPin+0x110>
     1d6:	88 0f       	add	r24, r24
     1d8:	99 1f       	adc	r25, r25
     1da:	0a 94       	dec	r0
     1dc:	e2 f7       	brpl	.-8      	; 0x1d6 <gpio_InitPortPin+0x10c>
     1de:	84 2b       	or	r24, r20
     1e0:	8c 93       	st	X, r24
     1e2:	20 c0       	rjmp	.+64     	; 0x224 <gpio_InitPortPin+0x15a>
     1e4:	a1 e3       	ldi	r26, 0x31	; 49
     1e6:	b0 e0       	ldi	r27, 0x00	; 0
     1e8:	e1 e3       	ldi	r30, 0x31	; 49
     1ea:	f0 e0       	ldi	r31, 0x00	; 0
     1ec:	80 81       	ld	r24, Z
     1ee:	48 2f       	mov	r20, r24
     1f0:	8b 81       	ldd	r24, Y+3	; 0x03
     1f2:	28 2f       	mov	r18, r24
     1f4:	30 e0       	ldi	r19, 0x00	; 0
     1f6:	81 e0       	ldi	r24, 0x01	; 1
     1f8:	90 e0       	ldi	r25, 0x00	; 0
     1fa:	02 c0       	rjmp	.+4      	; 0x200 <gpio_InitPortPin+0x136>
     1fc:	88 0f       	add	r24, r24
     1fe:	99 1f       	adc	r25, r25
     200:	2a 95       	dec	r18
     202:	e2 f7       	brpl	.-8      	; 0x1fc <gpio_InitPortPin+0x132>
     204:	80 95       	com	r24
     206:	84 23       	and	r24, r20
     208:	48 2f       	mov	r20, r24
     20a:	8b 81       	ldd	r24, Y+3	; 0x03
     20c:	28 2f       	mov	r18, r24
     20e:	30 e0       	ldi	r19, 0x00	; 0
     210:	8c 81       	ldd	r24, Y+4	; 0x04
     212:	9d 81       	ldd	r25, Y+5	; 0x05
     214:	02 2e       	mov	r0, r18
     216:	02 c0       	rjmp	.+4      	; 0x21c <gpio_InitPortPin+0x152>
     218:	88 0f       	add	r24, r24
     21a:	99 1f       	adc	r25, r25
     21c:	0a 94       	dec	r0
     21e:	e2 f7       	brpl	.-8      	; 0x218 <gpio_InitPortPin+0x14e>
     220:	84 2b       	or	r24, r20
     222:	8c 93       	st	X, r24
     224:	27 96       	adiw	r28, 0x07	; 7
     226:	0f b6       	in	r0, 0x3f	; 63
     228:	f8 94       	cli
     22a:	de bf       	out	0x3e, r29	; 62
     22c:	0f be       	out	0x3f, r0	; 63
     22e:	cd bf       	out	0x3d, r28	; 61
     230:	cf 91       	pop	r28
     232:	df 91       	pop	r29
     234:	08 95       	ret

00000236 <gpio_update>:
     236:	df 93       	push	r29
     238:	cf 93       	push	r28
     23a:	cd b7       	in	r28, 0x3d	; 61
     23c:	de b7       	in	r29, 0x3e	; 62
     23e:	cf 91       	pop	r28
     240:	df 91       	pop	r29
     242:	08 95       	ret

00000244 <gpio_setPort>:
     244:	df 93       	push	r29
     246:	cf 93       	push	r28
     248:	00 d0       	rcall	.+0      	; 0x24a <gpio_setPort+0x6>
     24a:	00 d0       	rcall	.+0      	; 0x24c <gpio_setPort+0x8>
     24c:	cd b7       	in	r28, 0x3d	; 61
     24e:	de b7       	in	r29, 0x3e	; 62
     250:	9b 83       	std	Y+3, r25	; 0x03
     252:	8a 83       	std	Y+2, r24	; 0x02
     254:	6c 83       	std	Y+4, r22	; 0x04
     256:	19 82       	std	Y+1, r1	; 0x01
     258:	19 82       	std	Y+1, r1	; 0x01
     25a:	09 c0       	rjmp	.+18     	; 0x26e <gpio_setPort+0x2a>
     25c:	8a 81       	ldd	r24, Y+2	; 0x02
     25e:	9b 81       	ldd	r25, Y+3	; 0x03
     260:	69 81       	ldd	r22, Y+1	; 0x01
     262:	4c 81       	ldd	r20, Y+4	; 0x04
     264:	0e 94 41 01 	call	0x282	; 0x282 <gpio_setPortPin>
     268:	89 81       	ldd	r24, Y+1	; 0x01
     26a:	8f 5f       	subi	r24, 0xFF	; 255
     26c:	89 83       	std	Y+1, r24	; 0x01
     26e:	89 81       	ldd	r24, Y+1	; 0x01
     270:	88 30       	cpi	r24, 0x08	; 8
     272:	a0 f3       	brcs	.-24     	; 0x25c <gpio_setPort+0x18>
     274:	0f 90       	pop	r0
     276:	0f 90       	pop	r0
     278:	0f 90       	pop	r0
     27a:	0f 90       	pop	r0
     27c:	cf 91       	pop	r28
     27e:	df 91       	pop	r29
     280:	08 95       	ret

00000282 <gpio_setPortPin>:
     282:	df 93       	push	r29
     284:	cf 93       	push	r28
     286:	00 d0       	rcall	.+0      	; 0x288 <gpio_setPortPin+0x6>
     288:	00 d0       	rcall	.+0      	; 0x28a <gpio_setPortPin+0x8>
     28a:	00 d0       	rcall	.+0      	; 0x28c <gpio_setPortPin+0xa>
     28c:	cd b7       	in	r28, 0x3d	; 61
     28e:	de b7       	in	r29, 0x3e	; 62
     290:	9a 83       	std	Y+2, r25	; 0x02
     292:	89 83       	std	Y+1, r24	; 0x01
     294:	6b 83       	std	Y+3, r22	; 0x03
     296:	4c 83       	std	Y+4, r20	; 0x04
     298:	69 81       	ldd	r22, Y+1	; 0x01
     29a:	7a 81       	ldd	r23, Y+2	; 0x02
     29c:	7e 83       	std	Y+6, r23	; 0x06
     29e:	6d 83       	std	Y+5, r22	; 0x05
     2a0:	8d 81       	ldd	r24, Y+5	; 0x05
     2a2:	9e 81       	ldd	r25, Y+6	; 0x06
     2a4:	81 30       	cpi	r24, 0x01	; 1
     2a6:	91 05       	cpc	r25, r1
     2a8:	a1 f1       	breq	.+104    	; 0x312 <gpio_setPortPin+0x90>
     2aa:	6d 81       	ldd	r22, Y+5	; 0x05
     2ac:	7e 81       	ldd	r23, Y+6	; 0x06
     2ae:	61 30       	cpi	r22, 0x01	; 1
     2b0:	71 05       	cpc	r23, r1
     2b2:	68 f0       	brcs	.+26     	; 0x2ce <gpio_setPortPin+0x4c>
     2b4:	8d 81       	ldd	r24, Y+5	; 0x05
     2b6:	9e 81       	ldd	r25, Y+6	; 0x06
     2b8:	82 30       	cpi	r24, 0x02	; 2
     2ba:	91 05       	cpc	r25, r1
     2bc:	09 f4       	brne	.+2      	; 0x2c0 <gpio_setPortPin+0x3e>
     2be:	4b c0       	rjmp	.+150    	; 0x356 <gpio_setPortPin+0xd4>
     2c0:	6d 81       	ldd	r22, Y+5	; 0x05
     2c2:	7e 81       	ldd	r23, Y+6	; 0x06
     2c4:	63 30       	cpi	r22, 0x03	; 3
     2c6:	71 05       	cpc	r23, r1
     2c8:	09 f4       	brne	.+2      	; 0x2cc <gpio_setPortPin+0x4a>
     2ca:	67 c0       	rjmp	.+206    	; 0x39a <gpio_setPortPin+0x118>
     2cc:	87 c0       	rjmp	.+270    	; 0x3dc <gpio_setPortPin+0x15a>
     2ce:	ab e3       	ldi	r26, 0x3B	; 59
     2d0:	b0 e0       	ldi	r27, 0x00	; 0
     2d2:	eb e3       	ldi	r30, 0x3B	; 59
     2d4:	f0 e0       	ldi	r31, 0x00	; 0
     2d6:	80 81       	ld	r24, Z
     2d8:	48 2f       	mov	r20, r24
     2da:	8b 81       	ldd	r24, Y+3	; 0x03
     2dc:	28 2f       	mov	r18, r24
     2de:	30 e0       	ldi	r19, 0x00	; 0
     2e0:	81 e0       	ldi	r24, 0x01	; 1
     2e2:	90 e0       	ldi	r25, 0x00	; 0
     2e4:	02 c0       	rjmp	.+4      	; 0x2ea <gpio_setPortPin+0x68>
     2e6:	88 0f       	add	r24, r24
     2e8:	99 1f       	adc	r25, r25
     2ea:	2a 95       	dec	r18
     2ec:	e2 f7       	brpl	.-8      	; 0x2e6 <gpio_setPortPin+0x64>
     2ee:	80 95       	com	r24
     2f0:	48 23       	and	r20, r24
     2f2:	8c 81       	ldd	r24, Y+4	; 0x04
     2f4:	28 2f       	mov	r18, r24
     2f6:	30 e0       	ldi	r19, 0x00	; 0
     2f8:	8b 81       	ldd	r24, Y+3	; 0x03
     2fa:	88 2f       	mov	r24, r24
     2fc:	90 e0       	ldi	r25, 0x00	; 0
     2fe:	b9 01       	movw	r22, r18
     300:	02 c0       	rjmp	.+4      	; 0x306 <gpio_setPortPin+0x84>
     302:	66 0f       	add	r22, r22
     304:	77 1f       	adc	r23, r23
     306:	8a 95       	dec	r24
     308:	e2 f7       	brpl	.-8      	; 0x302 <gpio_setPortPin+0x80>
     30a:	cb 01       	movw	r24, r22
     30c:	84 2b       	or	r24, r20
     30e:	8c 93       	st	X, r24
     310:	65 c0       	rjmp	.+202    	; 0x3dc <gpio_setPortPin+0x15a>
     312:	a8 e3       	ldi	r26, 0x38	; 56
     314:	b0 e0       	ldi	r27, 0x00	; 0
     316:	e8 e3       	ldi	r30, 0x38	; 56
     318:	f0 e0       	ldi	r31, 0x00	; 0
     31a:	80 81       	ld	r24, Z
     31c:	48 2f       	mov	r20, r24
     31e:	8b 81       	ldd	r24, Y+3	; 0x03
     320:	28 2f       	mov	r18, r24
     322:	30 e0       	ldi	r19, 0x00	; 0
     324:	81 e0       	ldi	r24, 0x01	; 1
     326:	90 e0       	ldi	r25, 0x00	; 0
     328:	02 c0       	rjmp	.+4      	; 0x32e <gpio_setPortPin+0xac>
     32a:	88 0f       	add	r24, r24
     32c:	99 1f       	adc	r25, r25
     32e:	2a 95       	dec	r18
     330:	e2 f7       	brpl	.-8      	; 0x32a <gpio_setPortPin+0xa8>
     332:	80 95       	com	r24
     334:	48 23       	and	r20, r24
     336:	8c 81       	ldd	r24, Y+4	; 0x04
     338:	28 2f       	mov	r18, r24
     33a:	30 e0       	ldi	r19, 0x00	; 0
     33c:	8b 81       	ldd	r24, Y+3	; 0x03
     33e:	88 2f       	mov	r24, r24
     340:	90 e0       	ldi	r25, 0x00	; 0
     342:	b9 01       	movw	r22, r18
     344:	02 c0       	rjmp	.+4      	; 0x34a <gpio_setPortPin+0xc8>
     346:	66 0f       	add	r22, r22
     348:	77 1f       	adc	r23, r23
     34a:	8a 95       	dec	r24
     34c:	e2 f7       	brpl	.-8      	; 0x346 <gpio_setPortPin+0xc4>
     34e:	cb 01       	movw	r24, r22
     350:	84 2b       	or	r24, r20
     352:	8c 93       	st	X, r24
     354:	43 c0       	rjmp	.+134    	; 0x3dc <gpio_setPortPin+0x15a>
     356:	a5 e3       	ldi	r26, 0x35	; 53
     358:	b0 e0       	ldi	r27, 0x00	; 0
     35a:	e5 e3       	ldi	r30, 0x35	; 53
     35c:	f0 e0       	ldi	r31, 0x00	; 0
     35e:	80 81       	ld	r24, Z
     360:	48 2f       	mov	r20, r24
     362:	8b 81       	ldd	r24, Y+3	; 0x03
     364:	28 2f       	mov	r18, r24
     366:	30 e0       	ldi	r19, 0x00	; 0
     368:	81 e0       	ldi	r24, 0x01	; 1
     36a:	90 e0       	ldi	r25, 0x00	; 0
     36c:	02 c0       	rjmp	.+4      	; 0x372 <gpio_setPortPin+0xf0>
     36e:	88 0f       	add	r24, r24
     370:	99 1f       	adc	r25, r25
     372:	2a 95       	dec	r18
     374:	e2 f7       	brpl	.-8      	; 0x36e <gpio_setPortPin+0xec>
     376:	80 95       	com	r24
     378:	48 23       	and	r20, r24
     37a:	8c 81       	ldd	r24, Y+4	; 0x04
     37c:	28 2f       	mov	r18, r24
     37e:	30 e0       	ldi	r19, 0x00	; 0
     380:	8b 81       	ldd	r24, Y+3	; 0x03
     382:	88 2f       	mov	r24, r24
     384:	90 e0       	ldi	r25, 0x00	; 0
     386:	b9 01       	movw	r22, r18
     388:	02 c0       	rjmp	.+4      	; 0x38e <gpio_setPortPin+0x10c>
     38a:	66 0f       	add	r22, r22
     38c:	77 1f       	adc	r23, r23
     38e:	8a 95       	dec	r24
     390:	e2 f7       	brpl	.-8      	; 0x38a <gpio_setPortPin+0x108>
     392:	cb 01       	movw	r24, r22
     394:	84 2b       	or	r24, r20
     396:	8c 93       	st	X, r24
     398:	21 c0       	rjmp	.+66     	; 0x3dc <gpio_setPortPin+0x15a>
     39a:	a2 e3       	ldi	r26, 0x32	; 50
     39c:	b0 e0       	ldi	r27, 0x00	; 0
     39e:	e2 e3       	ldi	r30, 0x32	; 50
     3a0:	f0 e0       	ldi	r31, 0x00	; 0
     3a2:	80 81       	ld	r24, Z
     3a4:	48 2f       	mov	r20, r24
     3a6:	8b 81       	ldd	r24, Y+3	; 0x03
     3a8:	28 2f       	mov	r18, r24
     3aa:	30 e0       	ldi	r19, 0x00	; 0
     3ac:	81 e0       	ldi	r24, 0x01	; 1
     3ae:	90 e0       	ldi	r25, 0x00	; 0
     3b0:	02 c0       	rjmp	.+4      	; 0x3b6 <gpio_setPortPin+0x134>
     3b2:	88 0f       	add	r24, r24
     3b4:	99 1f       	adc	r25, r25
     3b6:	2a 95       	dec	r18
     3b8:	e2 f7       	brpl	.-8      	; 0x3b2 <gpio_setPortPin+0x130>
     3ba:	80 95       	com	r24
     3bc:	48 23       	and	r20, r24
     3be:	8c 81       	ldd	r24, Y+4	; 0x04
     3c0:	28 2f       	mov	r18, r24
     3c2:	30 e0       	ldi	r19, 0x00	; 0
     3c4:	8b 81       	ldd	r24, Y+3	; 0x03
     3c6:	88 2f       	mov	r24, r24
     3c8:	90 e0       	ldi	r25, 0x00	; 0
     3ca:	b9 01       	movw	r22, r18
     3cc:	02 c0       	rjmp	.+4      	; 0x3d2 <gpio_setPortPin+0x150>
     3ce:	66 0f       	add	r22, r22
     3d0:	77 1f       	adc	r23, r23
     3d2:	8a 95       	dec	r24
     3d4:	e2 f7       	brpl	.-8      	; 0x3ce <gpio_setPortPin+0x14c>
     3d6:	cb 01       	movw	r24, r22
     3d8:	84 2b       	or	r24, r20
     3da:	8c 93       	st	X, r24
     3dc:	26 96       	adiw	r28, 0x06	; 6
     3de:	0f b6       	in	r0, 0x3f	; 63
     3e0:	f8 94       	cli
     3e2:	de bf       	out	0x3e, r29	; 62
     3e4:	0f be       	out	0x3f, r0	; 63
     3e6:	cd bf       	out	0x3d, r28	; 61
     3e8:	cf 91       	pop	r28
     3ea:	df 91       	pop	r29
     3ec:	08 95       	ret

000003ee <gpio_getPortPin>:
     3ee:	df 93       	push	r29
     3f0:	cf 93       	push	r28
     3f2:	00 d0       	rcall	.+0      	; 0x3f4 <gpio_getPortPin+0x6>
     3f4:	00 d0       	rcall	.+0      	; 0x3f6 <gpio_getPortPin+0x8>
     3f6:	00 d0       	rcall	.+0      	; 0x3f8 <gpio_getPortPin+0xa>
     3f8:	cd b7       	in	r28, 0x3d	; 61
     3fa:	de b7       	in	r29, 0x3e	; 62
     3fc:	9b 83       	std	Y+3, r25	; 0x03
     3fe:	8a 83       	std	Y+2, r24	; 0x02
     400:	6c 83       	std	Y+4, r22	; 0x04
     402:	19 82       	std	Y+1, r1	; 0x01
     404:	4a 81       	ldd	r20, Y+2	; 0x02
     406:	5b 81       	ldd	r21, Y+3	; 0x03
     408:	5e 83       	std	Y+6, r21	; 0x06
     40a:	4d 83       	std	Y+5, r20	; 0x05
     40c:	8d 81       	ldd	r24, Y+5	; 0x05
     40e:	9e 81       	ldd	r25, Y+6	; 0x06
     410:	81 30       	cpi	r24, 0x01	; 1
     412:	91 05       	cpc	r25, r1
     414:	81 f1       	breq	.+96     	; 0x476 <gpio_getPortPin+0x88>
     416:	4d 81       	ldd	r20, Y+5	; 0x05
     418:	5e 81       	ldd	r21, Y+6	; 0x06
     41a:	41 30       	cpi	r20, 0x01	; 1
     41c:	51 05       	cpc	r21, r1
     41e:	68 f0       	brcs	.+26     	; 0x43a <gpio_getPortPin+0x4c>
     420:	8d 81       	ldd	r24, Y+5	; 0x05
     422:	9e 81       	ldd	r25, Y+6	; 0x06
     424:	82 30       	cpi	r24, 0x02	; 2
     426:	91 05       	cpc	r25, r1
     428:	09 f4       	brne	.+2      	; 0x42c <gpio_getPortPin+0x3e>
     42a:	43 c0       	rjmp	.+134    	; 0x4b2 <gpio_getPortPin+0xc4>
     42c:	4d 81       	ldd	r20, Y+5	; 0x05
     42e:	5e 81       	ldd	r21, Y+6	; 0x06
     430:	43 30       	cpi	r20, 0x03	; 3
     432:	51 05       	cpc	r21, r1
     434:	09 f4       	brne	.+2      	; 0x438 <gpio_getPortPin+0x4a>
     436:	5b c0       	rjmp	.+182    	; 0x4ee <gpio_getPortPin+0x100>
     438:	77 c0       	rjmp	.+238    	; 0x528 <gpio_getPortPin+0x13a>
     43a:	e9 e3       	ldi	r30, 0x39	; 57
     43c:	f0 e0       	ldi	r31, 0x00	; 0
     43e:	80 81       	ld	r24, Z
     440:	48 2f       	mov	r20, r24
     442:	50 e0       	ldi	r21, 0x00	; 0
     444:	8c 81       	ldd	r24, Y+4	; 0x04
     446:	28 2f       	mov	r18, r24
     448:	30 e0       	ldi	r19, 0x00	; 0
     44a:	81 e0       	ldi	r24, 0x01	; 1
     44c:	90 e0       	ldi	r25, 0x00	; 0
     44e:	02 c0       	rjmp	.+4      	; 0x454 <gpio_getPortPin+0x66>
     450:	88 0f       	add	r24, r24
     452:	99 1f       	adc	r25, r25
     454:	2a 95       	dec	r18
     456:	e2 f7       	brpl	.-8      	; 0x450 <gpio_getPortPin+0x62>
     458:	9a 01       	movw	r18, r20
     45a:	28 23       	and	r18, r24
     45c:	39 23       	and	r19, r25
     45e:	8c 81       	ldd	r24, Y+4	; 0x04
     460:	88 2f       	mov	r24, r24
     462:	90 e0       	ldi	r25, 0x00	; 0
     464:	a9 01       	movw	r20, r18
     466:	02 c0       	rjmp	.+4      	; 0x46c <gpio_getPortPin+0x7e>
     468:	55 95       	asr	r21
     46a:	47 95       	ror	r20
     46c:	8a 95       	dec	r24
     46e:	e2 f7       	brpl	.-8      	; 0x468 <gpio_getPortPin+0x7a>
     470:	ca 01       	movw	r24, r20
     472:	89 83       	std	Y+1, r24	; 0x01
     474:	59 c0       	rjmp	.+178    	; 0x528 <gpio_getPortPin+0x13a>
     476:	e6 e3       	ldi	r30, 0x36	; 54
     478:	f0 e0       	ldi	r31, 0x00	; 0
     47a:	80 81       	ld	r24, Z
     47c:	48 2f       	mov	r20, r24
     47e:	50 e0       	ldi	r21, 0x00	; 0
     480:	8c 81       	ldd	r24, Y+4	; 0x04
     482:	28 2f       	mov	r18, r24
     484:	30 e0       	ldi	r19, 0x00	; 0
     486:	81 e0       	ldi	r24, 0x01	; 1
     488:	90 e0       	ldi	r25, 0x00	; 0
     48a:	02 c0       	rjmp	.+4      	; 0x490 <gpio_getPortPin+0xa2>
     48c:	88 0f       	add	r24, r24
     48e:	99 1f       	adc	r25, r25
     490:	2a 95       	dec	r18
     492:	e2 f7       	brpl	.-8      	; 0x48c <gpio_getPortPin+0x9e>
     494:	9a 01       	movw	r18, r20
     496:	28 23       	and	r18, r24
     498:	39 23       	and	r19, r25
     49a:	8c 81       	ldd	r24, Y+4	; 0x04
     49c:	88 2f       	mov	r24, r24
     49e:	90 e0       	ldi	r25, 0x00	; 0
     4a0:	a9 01       	movw	r20, r18
     4a2:	02 c0       	rjmp	.+4      	; 0x4a8 <gpio_getPortPin+0xba>
     4a4:	55 95       	asr	r21
     4a6:	47 95       	ror	r20
     4a8:	8a 95       	dec	r24
     4aa:	e2 f7       	brpl	.-8      	; 0x4a4 <gpio_getPortPin+0xb6>
     4ac:	ca 01       	movw	r24, r20
     4ae:	89 83       	std	Y+1, r24	; 0x01
     4b0:	3b c0       	rjmp	.+118    	; 0x528 <gpio_getPortPin+0x13a>
     4b2:	e3 e3       	ldi	r30, 0x33	; 51
     4b4:	f0 e0       	ldi	r31, 0x00	; 0
     4b6:	80 81       	ld	r24, Z
     4b8:	48 2f       	mov	r20, r24
     4ba:	50 e0       	ldi	r21, 0x00	; 0
     4bc:	8c 81       	ldd	r24, Y+4	; 0x04
     4be:	28 2f       	mov	r18, r24
     4c0:	30 e0       	ldi	r19, 0x00	; 0
     4c2:	81 e0       	ldi	r24, 0x01	; 1
     4c4:	90 e0       	ldi	r25, 0x00	; 0
     4c6:	02 c0       	rjmp	.+4      	; 0x4cc <gpio_getPortPin+0xde>
     4c8:	88 0f       	add	r24, r24
     4ca:	99 1f       	adc	r25, r25
     4cc:	2a 95       	dec	r18
     4ce:	e2 f7       	brpl	.-8      	; 0x4c8 <gpio_getPortPin+0xda>
     4d0:	9a 01       	movw	r18, r20
     4d2:	28 23       	and	r18, r24
     4d4:	39 23       	and	r19, r25
     4d6:	8c 81       	ldd	r24, Y+4	; 0x04
     4d8:	88 2f       	mov	r24, r24
     4da:	90 e0       	ldi	r25, 0x00	; 0
     4dc:	a9 01       	movw	r20, r18
     4de:	02 c0       	rjmp	.+4      	; 0x4e4 <gpio_getPortPin+0xf6>
     4e0:	55 95       	asr	r21
     4e2:	47 95       	ror	r20
     4e4:	8a 95       	dec	r24
     4e6:	e2 f7       	brpl	.-8      	; 0x4e0 <gpio_getPortPin+0xf2>
     4e8:	ca 01       	movw	r24, r20
     4ea:	89 83       	std	Y+1, r24	; 0x01
     4ec:	1d c0       	rjmp	.+58     	; 0x528 <gpio_getPortPin+0x13a>
     4ee:	e0 e3       	ldi	r30, 0x30	; 48
     4f0:	f0 e0       	ldi	r31, 0x00	; 0
     4f2:	80 81       	ld	r24, Z
     4f4:	48 2f       	mov	r20, r24
     4f6:	50 e0       	ldi	r21, 0x00	; 0
     4f8:	8c 81       	ldd	r24, Y+4	; 0x04
     4fa:	28 2f       	mov	r18, r24
     4fc:	30 e0       	ldi	r19, 0x00	; 0
     4fe:	81 e0       	ldi	r24, 0x01	; 1
     500:	90 e0       	ldi	r25, 0x00	; 0
     502:	02 c0       	rjmp	.+4      	; 0x508 <gpio_getPortPin+0x11a>
     504:	88 0f       	add	r24, r24
     506:	99 1f       	adc	r25, r25
     508:	2a 95       	dec	r18
     50a:	e2 f7       	brpl	.-8      	; 0x504 <gpio_getPortPin+0x116>
     50c:	9a 01       	movw	r18, r20
     50e:	28 23       	and	r18, r24
     510:	39 23       	and	r19, r25
     512:	8c 81       	ldd	r24, Y+4	; 0x04
     514:	88 2f       	mov	r24, r24
     516:	90 e0       	ldi	r25, 0x00	; 0
     518:	a9 01       	movw	r20, r18
     51a:	02 c0       	rjmp	.+4      	; 0x520 <gpio_getPortPin+0x132>
     51c:	55 95       	asr	r21
     51e:	47 95       	ror	r20
     520:	8a 95       	dec	r24
     522:	e2 f7       	brpl	.-8      	; 0x51c <gpio_getPortPin+0x12e>
     524:	ca 01       	movw	r24, r20
     526:	89 83       	std	Y+1, r24	; 0x01
     528:	89 81       	ldd	r24, Y+1	; 0x01
     52a:	26 96       	adiw	r28, 0x06	; 6
     52c:	0f b6       	in	r0, 0x3f	; 63
     52e:	f8 94       	cli
     530:	de bf       	out	0x3e, r29	; 62
     532:	0f be       	out	0x3f, r0	; 63
     534:	cd bf       	out	0x3d, r28	; 61
     536:	cf 91       	pop	r28
     538:	df 91       	pop	r29
     53a:	08 95       	ret

0000053c <led_Init>:
#define DELAY_DURATION (200)
void led_Toggle(tLED led);
void led_flasing(tLED led);

void led_Init(tLED led, tLED_State initial_state)
{
     53c:	df 93       	push	r29
     53e:	cf 93       	push	r28
     540:	00 d0       	rcall	.+0      	; 0x542 <led_Init+0x6>
     542:	00 d0       	rcall	.+0      	; 0x544 <led_Init+0x8>
     544:	00 d0       	rcall	.+0      	; 0x546 <led_Init+0xa>
     546:	cd b7       	in	r28, 0x3d	; 61
     548:	de b7       	in	r29, 0x3e	; 62
     54a:	9a 83       	std	Y+2, r25	; 0x02
     54c:	89 83       	std	Y+1, r24	; 0x01
     54e:	7c 83       	std	Y+4, r23	; 0x04
     550:	6b 83       	std	Y+3, r22	; 0x03
	/** Initialize Hardware **/
	switch(led)
     552:	89 81       	ldd	r24, Y+1	; 0x01
     554:	9a 81       	ldd	r25, Y+2	; 0x02
     556:	9e 83       	std	Y+6, r25	; 0x06
     558:	8d 83       	std	Y+5, r24	; 0x05
     55a:	8d 81       	ldd	r24, Y+5	; 0x05
     55c:	9e 81       	ldd	r25, Y+6	; 0x06
     55e:	83 30       	cpi	r24, 0x03	; 3
     560:	91 05       	cpc	r25, r1
     562:	09 f4       	brne	.+2      	; 0x566 <led_Init+0x2a>
     564:	3d c0       	rjmp	.+122    	; 0x5e0 <led_Init+0xa4>
     566:	8d 81       	ldd	r24, Y+5	; 0x05
     568:	9e 81       	ldd	r25, Y+6	; 0x06
     56a:	84 30       	cpi	r24, 0x04	; 4
     56c:	91 05       	cpc	r25, r1
     56e:	58 f4       	brcc	.+22     	; 0x586 <led_Init+0x4a>
     570:	8d 81       	ldd	r24, Y+5	; 0x05
     572:	9e 81       	ldd	r25, Y+6	; 0x06
     574:	81 30       	cpi	r24, 0x01	; 1
     576:	91 05       	cpc	r25, r1
     578:	19 f1       	breq	.+70     	; 0x5c0 <led_Init+0x84>
     57a:	8d 81       	ldd	r24, Y+5	; 0x05
     57c:	9e 81       	ldd	r25, Y+6	; 0x06
     57e:	82 30       	cpi	r24, 0x02	; 2
     580:	91 05       	cpc	r25, r1
     582:	30 f5       	brcc	.+76     	; 0x5d0 <led_Init+0x94>
     584:	15 c0       	rjmp	.+42     	; 0x5b0 <led_Init+0x74>
     586:	8d 81       	ldd	r24, Y+5	; 0x05
     588:	9e 81       	ldd	r25, Y+6	; 0x06
     58a:	85 30       	cpi	r24, 0x05	; 5
     58c:	91 05       	cpc	r25, r1
     58e:	c1 f1       	breq	.+112    	; 0x600 <led_Init+0xc4>
     590:	8d 81       	ldd	r24, Y+5	; 0x05
     592:	9e 81       	ldd	r25, Y+6	; 0x06
     594:	85 30       	cpi	r24, 0x05	; 5
     596:	91 05       	cpc	r25, r1
     598:	58 f1       	brcs	.+86     	; 0x5f0 <led_Init+0xb4>
     59a:	8d 81       	ldd	r24, Y+5	; 0x05
     59c:	9e 81       	ldd	r25, Y+6	; 0x06
     59e:	86 30       	cpi	r24, 0x06	; 6
     5a0:	91 05       	cpc	r25, r1
     5a2:	b1 f1       	breq	.+108    	; 0x610 <led_Init+0xd4>
     5a4:	8d 81       	ldd	r24, Y+5	; 0x05
     5a6:	9e 81       	ldd	r25, Y+6	; 0x06
     5a8:	87 30       	cpi	r24, 0x07	; 7
     5aa:	91 05       	cpc	r25, r1
     5ac:	c9 f1       	breq	.+114    	; 0x620 <led_Init+0xe4>
     5ae:	3f c0       	rjmp	.+126    	; 0x62e <led_Init+0xf2>
	{
		case LED_1 : gpio_InitPortPin(PORT_B, 0, GPIO_OUT);break;
     5b0:	81 e0       	ldi	r24, 0x01	; 1
     5b2:	90 e0       	ldi	r25, 0x00	; 0
     5b4:	60 e0       	ldi	r22, 0x00	; 0
     5b6:	41 e0       	ldi	r20, 0x01	; 1
     5b8:	50 e0       	ldi	r21, 0x00	; 0
     5ba:	0e 94 65 00 	call	0xca	; 0xca <gpio_InitPortPin>
     5be:	37 c0       	rjmp	.+110    	; 0x62e <led_Init+0xf2>
		case LED_2 : gpio_InitPortPin(PORT_B, 1, GPIO_OUT);break;
     5c0:	81 e0       	ldi	r24, 0x01	; 1
     5c2:	90 e0       	ldi	r25, 0x00	; 0
     5c4:	61 e0       	ldi	r22, 0x01	; 1
     5c6:	41 e0       	ldi	r20, 0x01	; 1
     5c8:	50 e0       	ldi	r21, 0x00	; 0
     5ca:	0e 94 65 00 	call	0xca	; 0xca <gpio_InitPortPin>
     5ce:	2f c0       	rjmp	.+94     	; 0x62e <led_Init+0xf2>
		case LED_3 : gpio_InitPortPin(PORT_B, 2, GPIO_OUT);break;
     5d0:	81 e0       	ldi	r24, 0x01	; 1
     5d2:	90 e0       	ldi	r25, 0x00	; 0
     5d4:	62 e0       	ldi	r22, 0x02	; 2
     5d6:	41 e0       	ldi	r20, 0x01	; 1
     5d8:	50 e0       	ldi	r21, 0x00	; 0
     5da:	0e 94 65 00 	call	0xca	; 0xca <gpio_InitPortPin>
     5de:	27 c0       	rjmp	.+78     	; 0x62e <led_Init+0xf2>
		case LED_4 : gpio_InitPortPin(PORT_B, 3, GPIO_OUT);break;
     5e0:	81 e0       	ldi	r24, 0x01	; 1
     5e2:	90 e0       	ldi	r25, 0x00	; 0
     5e4:	63 e0       	ldi	r22, 0x03	; 3
     5e6:	41 e0       	ldi	r20, 0x01	; 1
     5e8:	50 e0       	ldi	r21, 0x00	; 0
     5ea:	0e 94 65 00 	call	0xca	; 0xca <gpio_InitPortPin>
     5ee:	1f c0       	rjmp	.+62     	; 0x62e <led_Init+0xf2>
		case LED_5 : gpio_InitPortPin(PORT_B, 4, GPIO_OUT);break;
     5f0:	81 e0       	ldi	r24, 0x01	; 1
     5f2:	90 e0       	ldi	r25, 0x00	; 0
     5f4:	64 e0       	ldi	r22, 0x04	; 4
     5f6:	41 e0       	ldi	r20, 0x01	; 1
     5f8:	50 e0       	ldi	r21, 0x00	; 0
     5fa:	0e 94 65 00 	call	0xca	; 0xca <gpio_InitPortPin>
     5fe:	17 c0       	rjmp	.+46     	; 0x62e <led_Init+0xf2>
		case LED_6 : gpio_InitPortPin(PORT_B, 5, GPIO_OUT);break;
     600:	81 e0       	ldi	r24, 0x01	; 1
     602:	90 e0       	ldi	r25, 0x00	; 0
     604:	65 e0       	ldi	r22, 0x05	; 5
     606:	41 e0       	ldi	r20, 0x01	; 1
     608:	50 e0       	ldi	r21, 0x00	; 0
     60a:	0e 94 65 00 	call	0xca	; 0xca <gpio_InitPortPin>
     60e:	0f c0       	rjmp	.+30     	; 0x62e <led_Init+0xf2>
		case LED_7 : gpio_InitPortPin(PORT_B, 6, GPIO_OUT);break;
     610:	81 e0       	ldi	r24, 0x01	; 1
     612:	90 e0       	ldi	r25, 0x00	; 0
     614:	66 e0       	ldi	r22, 0x06	; 6
     616:	41 e0       	ldi	r20, 0x01	; 1
     618:	50 e0       	ldi	r21, 0x00	; 0
     61a:	0e 94 65 00 	call	0xca	; 0xca <gpio_InitPortPin>
     61e:	07 c0       	rjmp	.+14     	; 0x62e <led_Init+0xf2>
		case LED_8 : gpio_InitPortPin(PORT_B, 7, GPIO_OUT);break;
     620:	81 e0       	ldi	r24, 0x01	; 1
     622:	90 e0       	ldi	r25, 0x00	; 0
     624:	67 e0       	ldi	r22, 0x07	; 7
     626:	41 e0       	ldi	r20, 0x01	; 1
     628:	50 e0       	ldi	r21, 0x00	; 0
     62a:	0e 94 65 00 	call	0xca	; 0xca <gpio_InitPortPin>
		default: /** should do no thing **/ break;
	}

	/** Initialize Data **/
	led_setState(led, initial_state);
     62e:	89 81       	ldd	r24, Y+1	; 0x01
     630:	9a 81       	ldd	r25, Y+2	; 0x02
     632:	2b 81       	ldd	r18, Y+3	; 0x03
     634:	3c 81       	ldd	r19, Y+4	; 0x04
     636:	b9 01       	movw	r22, r18
     638:	0e 94 9e 0d 	call	0x1b3c	; 0x1b3c <led_setState>
}
     63c:	26 96       	adiw	r28, 0x06	; 6
     63e:	0f b6       	in	r0, 0x3f	; 63
     640:	f8 94       	cli
     642:	de bf       	out	0x3e, r29	; 62
     644:	0f be       	out	0x3f, r0	; 63
     646:	cd bf       	out	0x3d, r28	; 61
     648:	cf 91       	pop	r28
     64a:	df 91       	pop	r29
     64c:	08 95       	ret

0000064e <led_Update>:

void led_Update(void)
{
     64e:	0f 93       	push	r16
     650:	1f 93       	push	r17
     652:	df 93       	push	r29
     654:	cf 93       	push	r28
     656:	cd b7       	in	r28, 0x3d	; 61
     658:	de b7       	in	r29, 0x3e	; 62
     65a:	c0 5e       	subi	r28, 0xE0	; 224
     65c:	d0 40       	sbci	r29, 0x00	; 0
     65e:	0f b6       	in	r0, 0x3f	; 63
     660:	f8 94       	cli
     662:	de bf       	out	0x3e, r29	; 62
     664:	0f be       	out	0x3f, r0	; 63
     666:	cd bf       	out	0x3d, r28	; 61
	led_Toggle(LED_1);
     668:	80 e0       	ldi	r24, 0x00	; 0
     66a:	90 e0       	ldi	r25, 0x00	; 0
     66c:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <led_Toggle>
     670:	fe 01       	movw	r30, r28
     672:	e3 52       	subi	r30, 0x23	; 35
     674:	ff 4f       	sbci	r31, 0xFF	; 255
     676:	80 e0       	ldi	r24, 0x00	; 0
     678:	90 e0       	ldi	r25, 0x00	; 0
     67a:	a8 e4       	ldi	r26, 0x48	; 72
     67c:	b3 e4       	ldi	r27, 0x43	; 67
     67e:	80 83       	st	Z, r24
     680:	91 83       	std	Z+1, r25	; 0x01
     682:	a2 83       	std	Z+2, r26	; 0x02
     684:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     686:	8e 01       	movw	r16, r28
     688:	07 52       	subi	r16, 0x27	; 39
     68a:	1f 4f       	sbci	r17, 0xFF	; 255
     68c:	fe 01       	movw	r30, r28
     68e:	e3 52       	subi	r30, 0x23	; 35
     690:	ff 4f       	sbci	r31, 0xFF	; 255
     692:	60 81       	ld	r22, Z
     694:	71 81       	ldd	r23, Z+1	; 0x01
     696:	82 81       	ldd	r24, Z+2	; 0x02
     698:	93 81       	ldd	r25, Z+3	; 0x03
     69a:	20 e0       	ldi	r18, 0x00	; 0
     69c:	30 e0       	ldi	r19, 0x00	; 0
     69e:	4a e7       	ldi	r20, 0x7A	; 122
     6a0:	55 e4       	ldi	r21, 0x45	; 69
     6a2:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
     6a6:	dc 01       	movw	r26, r24
     6a8:	cb 01       	movw	r24, r22
     6aa:	f8 01       	movw	r30, r16
     6ac:	80 83       	st	Z, r24
     6ae:	91 83       	std	Z+1, r25	; 0x01
     6b0:	a2 83       	std	Z+2, r26	; 0x02
     6b2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     6b4:	fe 01       	movw	r30, r28
     6b6:	e7 52       	subi	r30, 0x27	; 39
     6b8:	ff 4f       	sbci	r31, 0xFF	; 255
     6ba:	60 81       	ld	r22, Z
     6bc:	71 81       	ldd	r23, Z+1	; 0x01
     6be:	82 81       	ldd	r24, Z+2	; 0x02
     6c0:	93 81       	ldd	r25, Z+3	; 0x03
     6c2:	20 e0       	ldi	r18, 0x00	; 0
     6c4:	30 e0       	ldi	r19, 0x00	; 0
     6c6:	40 e8       	ldi	r20, 0x80	; 128
     6c8:	5f e3       	ldi	r21, 0x3F	; 63
     6ca:	0e 94 dd 14 	call	0x29ba	; 0x29ba <__ltsf2>
     6ce:	88 23       	and	r24, r24
     6d0:	44 f4       	brge	.+16     	; 0x6e2 <led_Update+0x94>
		__ticks = 1;
     6d2:	fe 01       	movw	r30, r28
     6d4:	e9 52       	subi	r30, 0x29	; 41
     6d6:	ff 4f       	sbci	r31, 0xFF	; 255
     6d8:	81 e0       	ldi	r24, 0x01	; 1
     6da:	90 e0       	ldi	r25, 0x00	; 0
     6dc:	91 83       	std	Z+1, r25	; 0x01
     6de:	80 83       	st	Z, r24
     6e0:	64 c0       	rjmp	.+200    	; 0x7aa <led_Update+0x15c>
	else if (__tmp > 65535)
     6e2:	fe 01       	movw	r30, r28
     6e4:	e7 52       	subi	r30, 0x27	; 39
     6e6:	ff 4f       	sbci	r31, 0xFF	; 255
     6e8:	60 81       	ld	r22, Z
     6ea:	71 81       	ldd	r23, Z+1	; 0x01
     6ec:	82 81       	ldd	r24, Z+2	; 0x02
     6ee:	93 81       	ldd	r25, Z+3	; 0x03
     6f0:	20 e0       	ldi	r18, 0x00	; 0
     6f2:	3f ef       	ldi	r19, 0xFF	; 255
     6f4:	4f e7       	ldi	r20, 0x7F	; 127
     6f6:	57 e4       	ldi	r21, 0x47	; 71
     6f8:	0e 94 7d 14 	call	0x28fa	; 0x28fa <__gtsf2>
     6fc:	18 16       	cp	r1, r24
     6fe:	0c f0       	brlt	.+2      	; 0x702 <led_Update+0xb4>
     700:	43 c0       	rjmp	.+134    	; 0x788 <led_Update+0x13a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     702:	fe 01       	movw	r30, r28
     704:	e3 52       	subi	r30, 0x23	; 35
     706:	ff 4f       	sbci	r31, 0xFF	; 255
     708:	60 81       	ld	r22, Z
     70a:	71 81       	ldd	r23, Z+1	; 0x01
     70c:	82 81       	ldd	r24, Z+2	; 0x02
     70e:	93 81       	ldd	r25, Z+3	; 0x03
     710:	20 e0       	ldi	r18, 0x00	; 0
     712:	30 e0       	ldi	r19, 0x00	; 0
     714:	40 e2       	ldi	r20, 0x20	; 32
     716:	51 e4       	ldi	r21, 0x41	; 65
     718:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
     71c:	dc 01       	movw	r26, r24
     71e:	cb 01       	movw	r24, r22
     720:	8e 01       	movw	r16, r28
     722:	09 52       	subi	r16, 0x29	; 41
     724:	1f 4f       	sbci	r17, 0xFF	; 255
     726:	bc 01       	movw	r22, r24
     728:	cd 01       	movw	r24, r26
     72a:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
     72e:	dc 01       	movw	r26, r24
     730:	cb 01       	movw	r24, r22
     732:	f8 01       	movw	r30, r16
     734:	91 83       	std	Z+1, r25	; 0x01
     736:	80 83       	st	Z, r24
     738:	1f c0       	rjmp	.+62     	; 0x778 <led_Update+0x12a>
     73a:	fe 01       	movw	r30, r28
     73c:	eb 52       	subi	r30, 0x2B	; 43
     73e:	ff 4f       	sbci	r31, 0xFF	; 255
     740:	80 e9       	ldi	r24, 0x90	; 144
     742:	91 e0       	ldi	r25, 0x01	; 1
     744:	91 83       	std	Z+1, r25	; 0x01
     746:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     748:	fe 01       	movw	r30, r28
     74a:	eb 52       	subi	r30, 0x2B	; 43
     74c:	ff 4f       	sbci	r31, 0xFF	; 255
     74e:	80 81       	ld	r24, Z
     750:	91 81       	ldd	r25, Z+1	; 0x01
     752:	01 97       	sbiw	r24, 0x01	; 1
     754:	f1 f7       	brne	.-4      	; 0x752 <led_Update+0x104>
     756:	fe 01       	movw	r30, r28
     758:	eb 52       	subi	r30, 0x2B	; 43
     75a:	ff 4f       	sbci	r31, 0xFF	; 255
     75c:	91 83       	std	Z+1, r25	; 0x01
     75e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     760:	de 01       	movw	r26, r28
     762:	a9 52       	subi	r26, 0x29	; 41
     764:	bf 4f       	sbci	r27, 0xFF	; 255
     766:	fe 01       	movw	r30, r28
     768:	e9 52       	subi	r30, 0x29	; 41
     76a:	ff 4f       	sbci	r31, 0xFF	; 255
     76c:	80 81       	ld	r24, Z
     76e:	91 81       	ldd	r25, Z+1	; 0x01
     770:	01 97       	sbiw	r24, 0x01	; 1
     772:	11 96       	adiw	r26, 0x01	; 1
     774:	9c 93       	st	X, r25
     776:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     778:	fe 01       	movw	r30, r28
     77a:	e9 52       	subi	r30, 0x29	; 41
     77c:	ff 4f       	sbci	r31, 0xFF	; 255
     77e:	80 81       	ld	r24, Z
     780:	91 81       	ldd	r25, Z+1	; 0x01
     782:	00 97       	sbiw	r24, 0x00	; 0
     784:	d1 f6       	brne	.-76     	; 0x73a <led_Update+0xec>
     786:	27 c0       	rjmp	.+78     	; 0x7d6 <led_Update+0x188>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     788:	8e 01       	movw	r16, r28
     78a:	09 52       	subi	r16, 0x29	; 41
     78c:	1f 4f       	sbci	r17, 0xFF	; 255
     78e:	fe 01       	movw	r30, r28
     790:	e7 52       	subi	r30, 0x27	; 39
     792:	ff 4f       	sbci	r31, 0xFF	; 255
     794:	60 81       	ld	r22, Z
     796:	71 81       	ldd	r23, Z+1	; 0x01
     798:	82 81       	ldd	r24, Z+2	; 0x02
     79a:	93 81       	ldd	r25, Z+3	; 0x03
     79c:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
     7a0:	dc 01       	movw	r26, r24
     7a2:	cb 01       	movw	r24, r22
     7a4:	f8 01       	movw	r30, r16
     7a6:	91 83       	std	Z+1, r25	; 0x01
     7a8:	80 83       	st	Z, r24
     7aa:	de 01       	movw	r26, r28
     7ac:	ad 52       	subi	r26, 0x2D	; 45
     7ae:	bf 4f       	sbci	r27, 0xFF	; 255
     7b0:	fe 01       	movw	r30, r28
     7b2:	e9 52       	subi	r30, 0x29	; 41
     7b4:	ff 4f       	sbci	r31, 0xFF	; 255
     7b6:	80 81       	ld	r24, Z
     7b8:	91 81       	ldd	r25, Z+1	; 0x01
     7ba:	8d 93       	st	X+, r24
     7bc:	9c 93       	st	X, r25
     7be:	fe 01       	movw	r30, r28
     7c0:	ed 52       	subi	r30, 0x2D	; 45
     7c2:	ff 4f       	sbci	r31, 0xFF	; 255
     7c4:	80 81       	ld	r24, Z
     7c6:	91 81       	ldd	r25, Z+1	; 0x01
     7c8:	01 97       	sbiw	r24, 0x01	; 1
     7ca:	f1 f7       	brne	.-4      	; 0x7c8 <led_Update+0x17a>
     7cc:	fe 01       	movw	r30, r28
     7ce:	ed 52       	subi	r30, 0x2D	; 45
     7d0:	ff 4f       	sbci	r31, 0xFF	; 255
     7d2:	91 83       	std	Z+1, r25	; 0x01
     7d4:	80 83       	st	Z, r24
	_delay_ms(DELAY_DURATION);
	led_Toggle(LED_2);
     7d6:	81 e0       	ldi	r24, 0x01	; 1
     7d8:	90 e0       	ldi	r25, 0x00	; 0
     7da:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <led_Toggle>
     7de:	fe 01       	movw	r30, r28
     7e0:	e1 53       	subi	r30, 0x31	; 49
     7e2:	ff 4f       	sbci	r31, 0xFF	; 255
     7e4:	80 e0       	ldi	r24, 0x00	; 0
     7e6:	90 e0       	ldi	r25, 0x00	; 0
     7e8:	a8 e4       	ldi	r26, 0x48	; 72
     7ea:	b3 e4       	ldi	r27, 0x43	; 67
     7ec:	80 83       	st	Z, r24
     7ee:	91 83       	std	Z+1, r25	; 0x01
     7f0:	a2 83       	std	Z+2, r26	; 0x02
     7f2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     7f4:	8e 01       	movw	r16, r28
     7f6:	05 53       	subi	r16, 0x35	; 53
     7f8:	1f 4f       	sbci	r17, 0xFF	; 255
     7fa:	fe 01       	movw	r30, r28
     7fc:	e1 53       	subi	r30, 0x31	; 49
     7fe:	ff 4f       	sbci	r31, 0xFF	; 255
     800:	60 81       	ld	r22, Z
     802:	71 81       	ldd	r23, Z+1	; 0x01
     804:	82 81       	ldd	r24, Z+2	; 0x02
     806:	93 81       	ldd	r25, Z+3	; 0x03
     808:	20 e0       	ldi	r18, 0x00	; 0
     80a:	30 e0       	ldi	r19, 0x00	; 0
     80c:	4a e7       	ldi	r20, 0x7A	; 122
     80e:	55 e4       	ldi	r21, 0x45	; 69
     810:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
     814:	dc 01       	movw	r26, r24
     816:	cb 01       	movw	r24, r22
     818:	f8 01       	movw	r30, r16
     81a:	80 83       	st	Z, r24
     81c:	91 83       	std	Z+1, r25	; 0x01
     81e:	a2 83       	std	Z+2, r26	; 0x02
     820:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     822:	fe 01       	movw	r30, r28
     824:	e5 53       	subi	r30, 0x35	; 53
     826:	ff 4f       	sbci	r31, 0xFF	; 255
     828:	60 81       	ld	r22, Z
     82a:	71 81       	ldd	r23, Z+1	; 0x01
     82c:	82 81       	ldd	r24, Z+2	; 0x02
     82e:	93 81       	ldd	r25, Z+3	; 0x03
     830:	20 e0       	ldi	r18, 0x00	; 0
     832:	30 e0       	ldi	r19, 0x00	; 0
     834:	40 e8       	ldi	r20, 0x80	; 128
     836:	5f e3       	ldi	r21, 0x3F	; 63
     838:	0e 94 dd 14 	call	0x29ba	; 0x29ba <__ltsf2>
     83c:	88 23       	and	r24, r24
     83e:	44 f4       	brge	.+16     	; 0x850 <led_Update+0x202>
		__ticks = 1;
     840:	fe 01       	movw	r30, r28
     842:	e7 53       	subi	r30, 0x37	; 55
     844:	ff 4f       	sbci	r31, 0xFF	; 255
     846:	81 e0       	ldi	r24, 0x01	; 1
     848:	90 e0       	ldi	r25, 0x00	; 0
     84a:	91 83       	std	Z+1, r25	; 0x01
     84c:	80 83       	st	Z, r24
     84e:	64 c0       	rjmp	.+200    	; 0x918 <__stack+0xb9>
	else if (__tmp > 65535)
     850:	fe 01       	movw	r30, r28
     852:	e5 53       	subi	r30, 0x35	; 53
     854:	ff 4f       	sbci	r31, 0xFF	; 255
     856:	60 81       	ld	r22, Z
     858:	71 81       	ldd	r23, Z+1	; 0x01
     85a:	82 81       	ldd	r24, Z+2	; 0x02
     85c:	93 81       	ldd	r25, Z+3	; 0x03
     85e:	20 e0       	ldi	r18, 0x00	; 0
     860:	3f ef       	ldi	r19, 0xFF	; 255
     862:	4f e7       	ldi	r20, 0x7F	; 127
     864:	57 e4       	ldi	r21, 0x47	; 71
     866:	0e 94 7d 14 	call	0x28fa	; 0x28fa <__gtsf2>
     86a:	18 16       	cp	r1, r24
     86c:	0c f0       	brlt	.+2      	; 0x870 <__stack+0x11>
     86e:	43 c0       	rjmp	.+134    	; 0x8f6 <__stack+0x97>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     870:	fe 01       	movw	r30, r28
     872:	e1 53       	subi	r30, 0x31	; 49
     874:	ff 4f       	sbci	r31, 0xFF	; 255
     876:	60 81       	ld	r22, Z
     878:	71 81       	ldd	r23, Z+1	; 0x01
     87a:	82 81       	ldd	r24, Z+2	; 0x02
     87c:	93 81       	ldd	r25, Z+3	; 0x03
     87e:	20 e0       	ldi	r18, 0x00	; 0
     880:	30 e0       	ldi	r19, 0x00	; 0
     882:	40 e2       	ldi	r20, 0x20	; 32
     884:	51 e4       	ldi	r21, 0x41	; 65
     886:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
     88a:	dc 01       	movw	r26, r24
     88c:	cb 01       	movw	r24, r22
     88e:	8e 01       	movw	r16, r28
     890:	07 53       	subi	r16, 0x37	; 55
     892:	1f 4f       	sbci	r17, 0xFF	; 255
     894:	bc 01       	movw	r22, r24
     896:	cd 01       	movw	r24, r26
     898:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
     89c:	dc 01       	movw	r26, r24
     89e:	cb 01       	movw	r24, r22
     8a0:	f8 01       	movw	r30, r16
     8a2:	91 83       	std	Z+1, r25	; 0x01
     8a4:	80 83       	st	Z, r24
     8a6:	1f c0       	rjmp	.+62     	; 0x8e6 <__stack+0x87>
     8a8:	fe 01       	movw	r30, r28
     8aa:	e9 53       	subi	r30, 0x39	; 57
     8ac:	ff 4f       	sbci	r31, 0xFF	; 255
     8ae:	80 e9       	ldi	r24, 0x90	; 144
     8b0:	91 e0       	ldi	r25, 0x01	; 1
     8b2:	91 83       	std	Z+1, r25	; 0x01
     8b4:	80 83       	st	Z, r24
     8b6:	fe 01       	movw	r30, r28
     8b8:	e9 53       	subi	r30, 0x39	; 57
     8ba:	ff 4f       	sbci	r31, 0xFF	; 255
     8bc:	80 81       	ld	r24, Z
     8be:	91 81       	ldd	r25, Z+1	; 0x01
     8c0:	01 97       	sbiw	r24, 0x01	; 1
     8c2:	f1 f7       	brne	.-4      	; 0x8c0 <__stack+0x61>
     8c4:	fe 01       	movw	r30, r28
     8c6:	e9 53       	subi	r30, 0x39	; 57
     8c8:	ff 4f       	sbci	r31, 0xFF	; 255
     8ca:	91 83       	std	Z+1, r25	; 0x01
     8cc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     8ce:	de 01       	movw	r26, r28
     8d0:	a7 53       	subi	r26, 0x37	; 55
     8d2:	bf 4f       	sbci	r27, 0xFF	; 255
     8d4:	fe 01       	movw	r30, r28
     8d6:	e7 53       	subi	r30, 0x37	; 55
     8d8:	ff 4f       	sbci	r31, 0xFF	; 255
     8da:	80 81       	ld	r24, Z
     8dc:	91 81       	ldd	r25, Z+1	; 0x01
     8de:	01 97       	sbiw	r24, 0x01	; 1
     8e0:	11 96       	adiw	r26, 0x01	; 1
     8e2:	9c 93       	st	X, r25
     8e4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     8e6:	fe 01       	movw	r30, r28
     8e8:	e7 53       	subi	r30, 0x37	; 55
     8ea:	ff 4f       	sbci	r31, 0xFF	; 255
     8ec:	80 81       	ld	r24, Z
     8ee:	91 81       	ldd	r25, Z+1	; 0x01
     8f0:	00 97       	sbiw	r24, 0x00	; 0
     8f2:	d1 f6       	brne	.-76     	; 0x8a8 <__stack+0x49>
     8f4:	27 c0       	rjmp	.+78     	; 0x944 <__stack+0xe5>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     8f6:	8e 01       	movw	r16, r28
     8f8:	07 53       	subi	r16, 0x37	; 55
     8fa:	1f 4f       	sbci	r17, 0xFF	; 255
     8fc:	fe 01       	movw	r30, r28
     8fe:	e5 53       	subi	r30, 0x35	; 53
     900:	ff 4f       	sbci	r31, 0xFF	; 255
     902:	60 81       	ld	r22, Z
     904:	71 81       	ldd	r23, Z+1	; 0x01
     906:	82 81       	ldd	r24, Z+2	; 0x02
     908:	93 81       	ldd	r25, Z+3	; 0x03
     90a:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
     90e:	dc 01       	movw	r26, r24
     910:	cb 01       	movw	r24, r22
     912:	f8 01       	movw	r30, r16
     914:	91 83       	std	Z+1, r25	; 0x01
     916:	80 83       	st	Z, r24
     918:	de 01       	movw	r26, r28
     91a:	ab 53       	subi	r26, 0x3B	; 59
     91c:	bf 4f       	sbci	r27, 0xFF	; 255
     91e:	fe 01       	movw	r30, r28
     920:	e7 53       	subi	r30, 0x37	; 55
     922:	ff 4f       	sbci	r31, 0xFF	; 255
     924:	80 81       	ld	r24, Z
     926:	91 81       	ldd	r25, Z+1	; 0x01
     928:	8d 93       	st	X+, r24
     92a:	9c 93       	st	X, r25
     92c:	fe 01       	movw	r30, r28
     92e:	eb 53       	subi	r30, 0x3B	; 59
     930:	ff 4f       	sbci	r31, 0xFF	; 255
     932:	80 81       	ld	r24, Z
     934:	91 81       	ldd	r25, Z+1	; 0x01
     936:	01 97       	sbiw	r24, 0x01	; 1
     938:	f1 f7       	brne	.-4      	; 0x936 <__stack+0xd7>
     93a:	fe 01       	movw	r30, r28
     93c:	eb 53       	subi	r30, 0x3B	; 59
     93e:	ff 4f       	sbci	r31, 0xFF	; 255
     940:	91 83       	std	Z+1, r25	; 0x01
     942:	80 83       	st	Z, r24
	_delay_ms(DELAY_DURATION);
	led_Toggle(LED_3);
     944:	82 e0       	ldi	r24, 0x02	; 2
     946:	90 e0       	ldi	r25, 0x00	; 0
     948:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <led_Toggle>
     94c:	fe 01       	movw	r30, r28
     94e:	ef 53       	subi	r30, 0x3F	; 63
     950:	ff 4f       	sbci	r31, 0xFF	; 255
     952:	80 e0       	ldi	r24, 0x00	; 0
     954:	90 e0       	ldi	r25, 0x00	; 0
     956:	a8 e4       	ldi	r26, 0x48	; 72
     958:	b3 e4       	ldi	r27, 0x43	; 67
     95a:	80 83       	st	Z, r24
     95c:	91 83       	std	Z+1, r25	; 0x01
     95e:	a2 83       	std	Z+2, r26	; 0x02
     960:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     962:	8e 01       	movw	r16, r28
     964:	03 54       	subi	r16, 0x43	; 67
     966:	1f 4f       	sbci	r17, 0xFF	; 255
     968:	fe 01       	movw	r30, r28
     96a:	ef 53       	subi	r30, 0x3F	; 63
     96c:	ff 4f       	sbci	r31, 0xFF	; 255
     96e:	60 81       	ld	r22, Z
     970:	71 81       	ldd	r23, Z+1	; 0x01
     972:	82 81       	ldd	r24, Z+2	; 0x02
     974:	93 81       	ldd	r25, Z+3	; 0x03
     976:	20 e0       	ldi	r18, 0x00	; 0
     978:	30 e0       	ldi	r19, 0x00	; 0
     97a:	4a e7       	ldi	r20, 0x7A	; 122
     97c:	55 e4       	ldi	r21, 0x45	; 69
     97e:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
     982:	dc 01       	movw	r26, r24
     984:	cb 01       	movw	r24, r22
     986:	f8 01       	movw	r30, r16
     988:	80 83       	st	Z, r24
     98a:	91 83       	std	Z+1, r25	; 0x01
     98c:	a2 83       	std	Z+2, r26	; 0x02
     98e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     990:	fe 01       	movw	r30, r28
     992:	e3 54       	subi	r30, 0x43	; 67
     994:	ff 4f       	sbci	r31, 0xFF	; 255
     996:	60 81       	ld	r22, Z
     998:	71 81       	ldd	r23, Z+1	; 0x01
     99a:	82 81       	ldd	r24, Z+2	; 0x02
     99c:	93 81       	ldd	r25, Z+3	; 0x03
     99e:	20 e0       	ldi	r18, 0x00	; 0
     9a0:	30 e0       	ldi	r19, 0x00	; 0
     9a2:	40 e8       	ldi	r20, 0x80	; 128
     9a4:	5f e3       	ldi	r21, 0x3F	; 63
     9a6:	0e 94 dd 14 	call	0x29ba	; 0x29ba <__ltsf2>
     9aa:	88 23       	and	r24, r24
     9ac:	44 f4       	brge	.+16     	; 0x9be <__stack+0x15f>
		__ticks = 1;
     9ae:	fe 01       	movw	r30, r28
     9b0:	e5 54       	subi	r30, 0x45	; 69
     9b2:	ff 4f       	sbci	r31, 0xFF	; 255
     9b4:	81 e0       	ldi	r24, 0x01	; 1
     9b6:	90 e0       	ldi	r25, 0x00	; 0
     9b8:	91 83       	std	Z+1, r25	; 0x01
     9ba:	80 83       	st	Z, r24
     9bc:	64 c0       	rjmp	.+200    	; 0xa86 <__stack+0x227>
	else if (__tmp > 65535)
     9be:	fe 01       	movw	r30, r28
     9c0:	e3 54       	subi	r30, 0x43	; 67
     9c2:	ff 4f       	sbci	r31, 0xFF	; 255
     9c4:	60 81       	ld	r22, Z
     9c6:	71 81       	ldd	r23, Z+1	; 0x01
     9c8:	82 81       	ldd	r24, Z+2	; 0x02
     9ca:	93 81       	ldd	r25, Z+3	; 0x03
     9cc:	20 e0       	ldi	r18, 0x00	; 0
     9ce:	3f ef       	ldi	r19, 0xFF	; 255
     9d0:	4f e7       	ldi	r20, 0x7F	; 127
     9d2:	57 e4       	ldi	r21, 0x47	; 71
     9d4:	0e 94 7d 14 	call	0x28fa	; 0x28fa <__gtsf2>
     9d8:	18 16       	cp	r1, r24
     9da:	0c f0       	brlt	.+2      	; 0x9de <__stack+0x17f>
     9dc:	43 c0       	rjmp	.+134    	; 0xa64 <__stack+0x205>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     9de:	fe 01       	movw	r30, r28
     9e0:	ef 53       	subi	r30, 0x3F	; 63
     9e2:	ff 4f       	sbci	r31, 0xFF	; 255
     9e4:	60 81       	ld	r22, Z
     9e6:	71 81       	ldd	r23, Z+1	; 0x01
     9e8:	82 81       	ldd	r24, Z+2	; 0x02
     9ea:	93 81       	ldd	r25, Z+3	; 0x03
     9ec:	20 e0       	ldi	r18, 0x00	; 0
     9ee:	30 e0       	ldi	r19, 0x00	; 0
     9f0:	40 e2       	ldi	r20, 0x20	; 32
     9f2:	51 e4       	ldi	r21, 0x41	; 65
     9f4:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
     9f8:	dc 01       	movw	r26, r24
     9fa:	cb 01       	movw	r24, r22
     9fc:	8e 01       	movw	r16, r28
     9fe:	05 54       	subi	r16, 0x45	; 69
     a00:	1f 4f       	sbci	r17, 0xFF	; 255
     a02:	bc 01       	movw	r22, r24
     a04:	cd 01       	movw	r24, r26
     a06:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
     a0a:	dc 01       	movw	r26, r24
     a0c:	cb 01       	movw	r24, r22
     a0e:	f8 01       	movw	r30, r16
     a10:	91 83       	std	Z+1, r25	; 0x01
     a12:	80 83       	st	Z, r24
     a14:	1f c0       	rjmp	.+62     	; 0xa54 <__stack+0x1f5>
     a16:	fe 01       	movw	r30, r28
     a18:	e7 54       	subi	r30, 0x47	; 71
     a1a:	ff 4f       	sbci	r31, 0xFF	; 255
     a1c:	80 e9       	ldi	r24, 0x90	; 144
     a1e:	91 e0       	ldi	r25, 0x01	; 1
     a20:	91 83       	std	Z+1, r25	; 0x01
     a22:	80 83       	st	Z, r24
     a24:	fe 01       	movw	r30, r28
     a26:	e7 54       	subi	r30, 0x47	; 71
     a28:	ff 4f       	sbci	r31, 0xFF	; 255
     a2a:	80 81       	ld	r24, Z
     a2c:	91 81       	ldd	r25, Z+1	; 0x01
     a2e:	01 97       	sbiw	r24, 0x01	; 1
     a30:	f1 f7       	brne	.-4      	; 0xa2e <__stack+0x1cf>
     a32:	fe 01       	movw	r30, r28
     a34:	e7 54       	subi	r30, 0x47	; 71
     a36:	ff 4f       	sbci	r31, 0xFF	; 255
     a38:	91 83       	std	Z+1, r25	; 0x01
     a3a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     a3c:	de 01       	movw	r26, r28
     a3e:	a5 54       	subi	r26, 0x45	; 69
     a40:	bf 4f       	sbci	r27, 0xFF	; 255
     a42:	fe 01       	movw	r30, r28
     a44:	e5 54       	subi	r30, 0x45	; 69
     a46:	ff 4f       	sbci	r31, 0xFF	; 255
     a48:	80 81       	ld	r24, Z
     a4a:	91 81       	ldd	r25, Z+1	; 0x01
     a4c:	01 97       	sbiw	r24, 0x01	; 1
     a4e:	11 96       	adiw	r26, 0x01	; 1
     a50:	9c 93       	st	X, r25
     a52:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     a54:	fe 01       	movw	r30, r28
     a56:	e5 54       	subi	r30, 0x45	; 69
     a58:	ff 4f       	sbci	r31, 0xFF	; 255
     a5a:	80 81       	ld	r24, Z
     a5c:	91 81       	ldd	r25, Z+1	; 0x01
     a5e:	00 97       	sbiw	r24, 0x00	; 0
     a60:	d1 f6       	brne	.-76     	; 0xa16 <__stack+0x1b7>
     a62:	27 c0       	rjmp	.+78     	; 0xab2 <__stack+0x253>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     a64:	8e 01       	movw	r16, r28
     a66:	05 54       	subi	r16, 0x45	; 69
     a68:	1f 4f       	sbci	r17, 0xFF	; 255
     a6a:	fe 01       	movw	r30, r28
     a6c:	e3 54       	subi	r30, 0x43	; 67
     a6e:	ff 4f       	sbci	r31, 0xFF	; 255
     a70:	60 81       	ld	r22, Z
     a72:	71 81       	ldd	r23, Z+1	; 0x01
     a74:	82 81       	ldd	r24, Z+2	; 0x02
     a76:	93 81       	ldd	r25, Z+3	; 0x03
     a78:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
     a7c:	dc 01       	movw	r26, r24
     a7e:	cb 01       	movw	r24, r22
     a80:	f8 01       	movw	r30, r16
     a82:	91 83       	std	Z+1, r25	; 0x01
     a84:	80 83       	st	Z, r24
     a86:	de 01       	movw	r26, r28
     a88:	a9 54       	subi	r26, 0x49	; 73
     a8a:	bf 4f       	sbci	r27, 0xFF	; 255
     a8c:	fe 01       	movw	r30, r28
     a8e:	e5 54       	subi	r30, 0x45	; 69
     a90:	ff 4f       	sbci	r31, 0xFF	; 255
     a92:	80 81       	ld	r24, Z
     a94:	91 81       	ldd	r25, Z+1	; 0x01
     a96:	8d 93       	st	X+, r24
     a98:	9c 93       	st	X, r25
     a9a:	fe 01       	movw	r30, r28
     a9c:	e9 54       	subi	r30, 0x49	; 73
     a9e:	ff 4f       	sbci	r31, 0xFF	; 255
     aa0:	80 81       	ld	r24, Z
     aa2:	91 81       	ldd	r25, Z+1	; 0x01
     aa4:	01 97       	sbiw	r24, 0x01	; 1
     aa6:	f1 f7       	brne	.-4      	; 0xaa4 <__stack+0x245>
     aa8:	fe 01       	movw	r30, r28
     aaa:	e9 54       	subi	r30, 0x49	; 73
     aac:	ff 4f       	sbci	r31, 0xFF	; 255
     aae:	91 83       	std	Z+1, r25	; 0x01
     ab0:	80 83       	st	Z, r24
	_delay_ms(DELAY_DURATION);
	led_Toggle(LED_4);
     ab2:	83 e0       	ldi	r24, 0x03	; 3
     ab4:	90 e0       	ldi	r25, 0x00	; 0
     ab6:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <led_Toggle>
     aba:	fe 01       	movw	r30, r28
     abc:	ed 54       	subi	r30, 0x4D	; 77
     abe:	ff 4f       	sbci	r31, 0xFF	; 255
     ac0:	80 e0       	ldi	r24, 0x00	; 0
     ac2:	90 e0       	ldi	r25, 0x00	; 0
     ac4:	a8 e4       	ldi	r26, 0x48	; 72
     ac6:	b3 e4       	ldi	r27, 0x43	; 67
     ac8:	80 83       	st	Z, r24
     aca:	91 83       	std	Z+1, r25	; 0x01
     acc:	a2 83       	std	Z+2, r26	; 0x02
     ace:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     ad0:	8e 01       	movw	r16, r28
     ad2:	01 55       	subi	r16, 0x51	; 81
     ad4:	1f 4f       	sbci	r17, 0xFF	; 255
     ad6:	fe 01       	movw	r30, r28
     ad8:	ed 54       	subi	r30, 0x4D	; 77
     ada:	ff 4f       	sbci	r31, 0xFF	; 255
     adc:	60 81       	ld	r22, Z
     ade:	71 81       	ldd	r23, Z+1	; 0x01
     ae0:	82 81       	ldd	r24, Z+2	; 0x02
     ae2:	93 81       	ldd	r25, Z+3	; 0x03
     ae4:	20 e0       	ldi	r18, 0x00	; 0
     ae6:	30 e0       	ldi	r19, 0x00	; 0
     ae8:	4a e7       	ldi	r20, 0x7A	; 122
     aea:	55 e4       	ldi	r21, 0x45	; 69
     aec:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
     af0:	dc 01       	movw	r26, r24
     af2:	cb 01       	movw	r24, r22
     af4:	f8 01       	movw	r30, r16
     af6:	80 83       	st	Z, r24
     af8:	91 83       	std	Z+1, r25	; 0x01
     afa:	a2 83       	std	Z+2, r26	; 0x02
     afc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     afe:	fe 01       	movw	r30, r28
     b00:	e1 55       	subi	r30, 0x51	; 81
     b02:	ff 4f       	sbci	r31, 0xFF	; 255
     b04:	60 81       	ld	r22, Z
     b06:	71 81       	ldd	r23, Z+1	; 0x01
     b08:	82 81       	ldd	r24, Z+2	; 0x02
     b0a:	93 81       	ldd	r25, Z+3	; 0x03
     b0c:	20 e0       	ldi	r18, 0x00	; 0
     b0e:	30 e0       	ldi	r19, 0x00	; 0
     b10:	40 e8       	ldi	r20, 0x80	; 128
     b12:	5f e3       	ldi	r21, 0x3F	; 63
     b14:	0e 94 dd 14 	call	0x29ba	; 0x29ba <__ltsf2>
     b18:	88 23       	and	r24, r24
     b1a:	44 f4       	brge	.+16     	; 0xb2c <__stack+0x2cd>
		__ticks = 1;
     b1c:	fe 01       	movw	r30, r28
     b1e:	e3 55       	subi	r30, 0x53	; 83
     b20:	ff 4f       	sbci	r31, 0xFF	; 255
     b22:	81 e0       	ldi	r24, 0x01	; 1
     b24:	90 e0       	ldi	r25, 0x00	; 0
     b26:	91 83       	std	Z+1, r25	; 0x01
     b28:	80 83       	st	Z, r24
     b2a:	64 c0       	rjmp	.+200    	; 0xbf4 <__stack+0x395>
	else if (__tmp > 65535)
     b2c:	fe 01       	movw	r30, r28
     b2e:	e1 55       	subi	r30, 0x51	; 81
     b30:	ff 4f       	sbci	r31, 0xFF	; 255
     b32:	60 81       	ld	r22, Z
     b34:	71 81       	ldd	r23, Z+1	; 0x01
     b36:	82 81       	ldd	r24, Z+2	; 0x02
     b38:	93 81       	ldd	r25, Z+3	; 0x03
     b3a:	20 e0       	ldi	r18, 0x00	; 0
     b3c:	3f ef       	ldi	r19, 0xFF	; 255
     b3e:	4f e7       	ldi	r20, 0x7F	; 127
     b40:	57 e4       	ldi	r21, 0x47	; 71
     b42:	0e 94 7d 14 	call	0x28fa	; 0x28fa <__gtsf2>
     b46:	18 16       	cp	r1, r24
     b48:	0c f0       	brlt	.+2      	; 0xb4c <__stack+0x2ed>
     b4a:	43 c0       	rjmp	.+134    	; 0xbd2 <__stack+0x373>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     b4c:	fe 01       	movw	r30, r28
     b4e:	ed 54       	subi	r30, 0x4D	; 77
     b50:	ff 4f       	sbci	r31, 0xFF	; 255
     b52:	60 81       	ld	r22, Z
     b54:	71 81       	ldd	r23, Z+1	; 0x01
     b56:	82 81       	ldd	r24, Z+2	; 0x02
     b58:	93 81       	ldd	r25, Z+3	; 0x03
     b5a:	20 e0       	ldi	r18, 0x00	; 0
     b5c:	30 e0       	ldi	r19, 0x00	; 0
     b5e:	40 e2       	ldi	r20, 0x20	; 32
     b60:	51 e4       	ldi	r21, 0x41	; 65
     b62:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
     b66:	dc 01       	movw	r26, r24
     b68:	cb 01       	movw	r24, r22
     b6a:	8e 01       	movw	r16, r28
     b6c:	03 55       	subi	r16, 0x53	; 83
     b6e:	1f 4f       	sbci	r17, 0xFF	; 255
     b70:	bc 01       	movw	r22, r24
     b72:	cd 01       	movw	r24, r26
     b74:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
     b78:	dc 01       	movw	r26, r24
     b7a:	cb 01       	movw	r24, r22
     b7c:	f8 01       	movw	r30, r16
     b7e:	91 83       	std	Z+1, r25	; 0x01
     b80:	80 83       	st	Z, r24
     b82:	1f c0       	rjmp	.+62     	; 0xbc2 <__stack+0x363>
     b84:	fe 01       	movw	r30, r28
     b86:	e5 55       	subi	r30, 0x55	; 85
     b88:	ff 4f       	sbci	r31, 0xFF	; 255
     b8a:	80 e9       	ldi	r24, 0x90	; 144
     b8c:	91 e0       	ldi	r25, 0x01	; 1
     b8e:	91 83       	std	Z+1, r25	; 0x01
     b90:	80 83       	st	Z, r24
     b92:	fe 01       	movw	r30, r28
     b94:	e5 55       	subi	r30, 0x55	; 85
     b96:	ff 4f       	sbci	r31, 0xFF	; 255
     b98:	80 81       	ld	r24, Z
     b9a:	91 81       	ldd	r25, Z+1	; 0x01
     b9c:	01 97       	sbiw	r24, 0x01	; 1
     b9e:	f1 f7       	brne	.-4      	; 0xb9c <__stack+0x33d>
     ba0:	fe 01       	movw	r30, r28
     ba2:	e5 55       	subi	r30, 0x55	; 85
     ba4:	ff 4f       	sbci	r31, 0xFF	; 255
     ba6:	91 83       	std	Z+1, r25	; 0x01
     ba8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     baa:	de 01       	movw	r26, r28
     bac:	a3 55       	subi	r26, 0x53	; 83
     bae:	bf 4f       	sbci	r27, 0xFF	; 255
     bb0:	fe 01       	movw	r30, r28
     bb2:	e3 55       	subi	r30, 0x53	; 83
     bb4:	ff 4f       	sbci	r31, 0xFF	; 255
     bb6:	80 81       	ld	r24, Z
     bb8:	91 81       	ldd	r25, Z+1	; 0x01
     bba:	01 97       	sbiw	r24, 0x01	; 1
     bbc:	11 96       	adiw	r26, 0x01	; 1
     bbe:	9c 93       	st	X, r25
     bc0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     bc2:	fe 01       	movw	r30, r28
     bc4:	e3 55       	subi	r30, 0x53	; 83
     bc6:	ff 4f       	sbci	r31, 0xFF	; 255
     bc8:	80 81       	ld	r24, Z
     bca:	91 81       	ldd	r25, Z+1	; 0x01
     bcc:	00 97       	sbiw	r24, 0x00	; 0
     bce:	d1 f6       	brne	.-76     	; 0xb84 <__stack+0x325>
     bd0:	27 c0       	rjmp	.+78     	; 0xc20 <__stack+0x3c1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     bd2:	8e 01       	movw	r16, r28
     bd4:	03 55       	subi	r16, 0x53	; 83
     bd6:	1f 4f       	sbci	r17, 0xFF	; 255
     bd8:	fe 01       	movw	r30, r28
     bda:	e1 55       	subi	r30, 0x51	; 81
     bdc:	ff 4f       	sbci	r31, 0xFF	; 255
     bde:	60 81       	ld	r22, Z
     be0:	71 81       	ldd	r23, Z+1	; 0x01
     be2:	82 81       	ldd	r24, Z+2	; 0x02
     be4:	93 81       	ldd	r25, Z+3	; 0x03
     be6:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
     bea:	dc 01       	movw	r26, r24
     bec:	cb 01       	movw	r24, r22
     bee:	f8 01       	movw	r30, r16
     bf0:	91 83       	std	Z+1, r25	; 0x01
     bf2:	80 83       	st	Z, r24
     bf4:	de 01       	movw	r26, r28
     bf6:	a7 55       	subi	r26, 0x57	; 87
     bf8:	bf 4f       	sbci	r27, 0xFF	; 255
     bfa:	fe 01       	movw	r30, r28
     bfc:	e3 55       	subi	r30, 0x53	; 83
     bfe:	ff 4f       	sbci	r31, 0xFF	; 255
     c00:	80 81       	ld	r24, Z
     c02:	91 81       	ldd	r25, Z+1	; 0x01
     c04:	8d 93       	st	X+, r24
     c06:	9c 93       	st	X, r25
     c08:	fe 01       	movw	r30, r28
     c0a:	e7 55       	subi	r30, 0x57	; 87
     c0c:	ff 4f       	sbci	r31, 0xFF	; 255
     c0e:	80 81       	ld	r24, Z
     c10:	91 81       	ldd	r25, Z+1	; 0x01
     c12:	01 97       	sbiw	r24, 0x01	; 1
     c14:	f1 f7       	brne	.-4      	; 0xc12 <__stack+0x3b3>
     c16:	fe 01       	movw	r30, r28
     c18:	e7 55       	subi	r30, 0x57	; 87
     c1a:	ff 4f       	sbci	r31, 0xFF	; 255
     c1c:	91 83       	std	Z+1, r25	; 0x01
     c1e:	80 83       	st	Z, r24
	_delay_ms(DELAY_DURATION);
	led_Toggle(LED_5);
     c20:	84 e0       	ldi	r24, 0x04	; 4
     c22:	90 e0       	ldi	r25, 0x00	; 0
     c24:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <led_Toggle>
     c28:	fe 01       	movw	r30, r28
     c2a:	eb 55       	subi	r30, 0x5B	; 91
     c2c:	ff 4f       	sbci	r31, 0xFF	; 255
     c2e:	80 e0       	ldi	r24, 0x00	; 0
     c30:	90 e0       	ldi	r25, 0x00	; 0
     c32:	a8 e4       	ldi	r26, 0x48	; 72
     c34:	b3 e4       	ldi	r27, 0x43	; 67
     c36:	80 83       	st	Z, r24
     c38:	91 83       	std	Z+1, r25	; 0x01
     c3a:	a2 83       	std	Z+2, r26	; 0x02
     c3c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     c3e:	8e 01       	movw	r16, r28
     c40:	0f 55       	subi	r16, 0x5F	; 95
     c42:	1f 4f       	sbci	r17, 0xFF	; 255
     c44:	fe 01       	movw	r30, r28
     c46:	eb 55       	subi	r30, 0x5B	; 91
     c48:	ff 4f       	sbci	r31, 0xFF	; 255
     c4a:	60 81       	ld	r22, Z
     c4c:	71 81       	ldd	r23, Z+1	; 0x01
     c4e:	82 81       	ldd	r24, Z+2	; 0x02
     c50:	93 81       	ldd	r25, Z+3	; 0x03
     c52:	20 e0       	ldi	r18, 0x00	; 0
     c54:	30 e0       	ldi	r19, 0x00	; 0
     c56:	4a e7       	ldi	r20, 0x7A	; 122
     c58:	55 e4       	ldi	r21, 0x45	; 69
     c5a:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
     c5e:	dc 01       	movw	r26, r24
     c60:	cb 01       	movw	r24, r22
     c62:	f8 01       	movw	r30, r16
     c64:	80 83       	st	Z, r24
     c66:	91 83       	std	Z+1, r25	; 0x01
     c68:	a2 83       	std	Z+2, r26	; 0x02
     c6a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     c6c:	fe 01       	movw	r30, r28
     c6e:	ef 55       	subi	r30, 0x5F	; 95
     c70:	ff 4f       	sbci	r31, 0xFF	; 255
     c72:	60 81       	ld	r22, Z
     c74:	71 81       	ldd	r23, Z+1	; 0x01
     c76:	82 81       	ldd	r24, Z+2	; 0x02
     c78:	93 81       	ldd	r25, Z+3	; 0x03
     c7a:	20 e0       	ldi	r18, 0x00	; 0
     c7c:	30 e0       	ldi	r19, 0x00	; 0
     c7e:	40 e8       	ldi	r20, 0x80	; 128
     c80:	5f e3       	ldi	r21, 0x3F	; 63
     c82:	0e 94 dd 14 	call	0x29ba	; 0x29ba <__ltsf2>
     c86:	88 23       	and	r24, r24
     c88:	44 f4       	brge	.+16     	; 0xc9a <__stack+0x43b>
		__ticks = 1;
     c8a:	fe 01       	movw	r30, r28
     c8c:	e1 56       	subi	r30, 0x61	; 97
     c8e:	ff 4f       	sbci	r31, 0xFF	; 255
     c90:	81 e0       	ldi	r24, 0x01	; 1
     c92:	90 e0       	ldi	r25, 0x00	; 0
     c94:	91 83       	std	Z+1, r25	; 0x01
     c96:	80 83       	st	Z, r24
     c98:	64 c0       	rjmp	.+200    	; 0xd62 <__stack+0x503>
	else if (__tmp > 65535)
     c9a:	fe 01       	movw	r30, r28
     c9c:	ef 55       	subi	r30, 0x5F	; 95
     c9e:	ff 4f       	sbci	r31, 0xFF	; 255
     ca0:	60 81       	ld	r22, Z
     ca2:	71 81       	ldd	r23, Z+1	; 0x01
     ca4:	82 81       	ldd	r24, Z+2	; 0x02
     ca6:	93 81       	ldd	r25, Z+3	; 0x03
     ca8:	20 e0       	ldi	r18, 0x00	; 0
     caa:	3f ef       	ldi	r19, 0xFF	; 255
     cac:	4f e7       	ldi	r20, 0x7F	; 127
     cae:	57 e4       	ldi	r21, 0x47	; 71
     cb0:	0e 94 7d 14 	call	0x28fa	; 0x28fa <__gtsf2>
     cb4:	18 16       	cp	r1, r24
     cb6:	0c f0       	brlt	.+2      	; 0xcba <__stack+0x45b>
     cb8:	43 c0       	rjmp	.+134    	; 0xd40 <__stack+0x4e1>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     cba:	fe 01       	movw	r30, r28
     cbc:	eb 55       	subi	r30, 0x5B	; 91
     cbe:	ff 4f       	sbci	r31, 0xFF	; 255
     cc0:	60 81       	ld	r22, Z
     cc2:	71 81       	ldd	r23, Z+1	; 0x01
     cc4:	82 81       	ldd	r24, Z+2	; 0x02
     cc6:	93 81       	ldd	r25, Z+3	; 0x03
     cc8:	20 e0       	ldi	r18, 0x00	; 0
     cca:	30 e0       	ldi	r19, 0x00	; 0
     ccc:	40 e2       	ldi	r20, 0x20	; 32
     cce:	51 e4       	ldi	r21, 0x41	; 65
     cd0:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
     cd4:	dc 01       	movw	r26, r24
     cd6:	cb 01       	movw	r24, r22
     cd8:	8e 01       	movw	r16, r28
     cda:	01 56       	subi	r16, 0x61	; 97
     cdc:	1f 4f       	sbci	r17, 0xFF	; 255
     cde:	bc 01       	movw	r22, r24
     ce0:	cd 01       	movw	r24, r26
     ce2:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
     ce6:	dc 01       	movw	r26, r24
     ce8:	cb 01       	movw	r24, r22
     cea:	f8 01       	movw	r30, r16
     cec:	91 83       	std	Z+1, r25	; 0x01
     cee:	80 83       	st	Z, r24
     cf0:	1f c0       	rjmp	.+62     	; 0xd30 <__stack+0x4d1>
     cf2:	fe 01       	movw	r30, r28
     cf4:	e3 56       	subi	r30, 0x63	; 99
     cf6:	ff 4f       	sbci	r31, 0xFF	; 255
     cf8:	80 e9       	ldi	r24, 0x90	; 144
     cfa:	91 e0       	ldi	r25, 0x01	; 1
     cfc:	91 83       	std	Z+1, r25	; 0x01
     cfe:	80 83       	st	Z, r24
     d00:	fe 01       	movw	r30, r28
     d02:	e3 56       	subi	r30, 0x63	; 99
     d04:	ff 4f       	sbci	r31, 0xFF	; 255
     d06:	80 81       	ld	r24, Z
     d08:	91 81       	ldd	r25, Z+1	; 0x01
     d0a:	01 97       	sbiw	r24, 0x01	; 1
     d0c:	f1 f7       	brne	.-4      	; 0xd0a <__stack+0x4ab>
     d0e:	fe 01       	movw	r30, r28
     d10:	e3 56       	subi	r30, 0x63	; 99
     d12:	ff 4f       	sbci	r31, 0xFF	; 255
     d14:	91 83       	std	Z+1, r25	; 0x01
     d16:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     d18:	de 01       	movw	r26, r28
     d1a:	a1 56       	subi	r26, 0x61	; 97
     d1c:	bf 4f       	sbci	r27, 0xFF	; 255
     d1e:	fe 01       	movw	r30, r28
     d20:	e1 56       	subi	r30, 0x61	; 97
     d22:	ff 4f       	sbci	r31, 0xFF	; 255
     d24:	80 81       	ld	r24, Z
     d26:	91 81       	ldd	r25, Z+1	; 0x01
     d28:	01 97       	sbiw	r24, 0x01	; 1
     d2a:	11 96       	adiw	r26, 0x01	; 1
     d2c:	9c 93       	st	X, r25
     d2e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     d30:	fe 01       	movw	r30, r28
     d32:	e1 56       	subi	r30, 0x61	; 97
     d34:	ff 4f       	sbci	r31, 0xFF	; 255
     d36:	80 81       	ld	r24, Z
     d38:	91 81       	ldd	r25, Z+1	; 0x01
     d3a:	00 97       	sbiw	r24, 0x00	; 0
     d3c:	d1 f6       	brne	.-76     	; 0xcf2 <__stack+0x493>
     d3e:	27 c0       	rjmp	.+78     	; 0xd8e <__stack+0x52f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     d40:	8e 01       	movw	r16, r28
     d42:	01 56       	subi	r16, 0x61	; 97
     d44:	1f 4f       	sbci	r17, 0xFF	; 255
     d46:	fe 01       	movw	r30, r28
     d48:	ef 55       	subi	r30, 0x5F	; 95
     d4a:	ff 4f       	sbci	r31, 0xFF	; 255
     d4c:	60 81       	ld	r22, Z
     d4e:	71 81       	ldd	r23, Z+1	; 0x01
     d50:	82 81       	ldd	r24, Z+2	; 0x02
     d52:	93 81       	ldd	r25, Z+3	; 0x03
     d54:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
     d58:	dc 01       	movw	r26, r24
     d5a:	cb 01       	movw	r24, r22
     d5c:	f8 01       	movw	r30, r16
     d5e:	91 83       	std	Z+1, r25	; 0x01
     d60:	80 83       	st	Z, r24
     d62:	de 01       	movw	r26, r28
     d64:	a5 56       	subi	r26, 0x65	; 101
     d66:	bf 4f       	sbci	r27, 0xFF	; 255
     d68:	fe 01       	movw	r30, r28
     d6a:	e1 56       	subi	r30, 0x61	; 97
     d6c:	ff 4f       	sbci	r31, 0xFF	; 255
     d6e:	80 81       	ld	r24, Z
     d70:	91 81       	ldd	r25, Z+1	; 0x01
     d72:	8d 93       	st	X+, r24
     d74:	9c 93       	st	X, r25
     d76:	fe 01       	movw	r30, r28
     d78:	e5 56       	subi	r30, 0x65	; 101
     d7a:	ff 4f       	sbci	r31, 0xFF	; 255
     d7c:	80 81       	ld	r24, Z
     d7e:	91 81       	ldd	r25, Z+1	; 0x01
     d80:	01 97       	sbiw	r24, 0x01	; 1
     d82:	f1 f7       	brne	.-4      	; 0xd80 <__stack+0x521>
     d84:	fe 01       	movw	r30, r28
     d86:	e5 56       	subi	r30, 0x65	; 101
     d88:	ff 4f       	sbci	r31, 0xFF	; 255
     d8a:	91 83       	std	Z+1, r25	; 0x01
     d8c:	80 83       	st	Z, r24
	_delay_ms(DELAY_DURATION);
	led_Toggle(LED_6);
     d8e:	85 e0       	ldi	r24, 0x05	; 5
     d90:	90 e0       	ldi	r25, 0x00	; 0
     d92:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <led_Toggle>
     d96:	fe 01       	movw	r30, r28
     d98:	e9 56       	subi	r30, 0x69	; 105
     d9a:	ff 4f       	sbci	r31, 0xFF	; 255
     d9c:	80 e0       	ldi	r24, 0x00	; 0
     d9e:	90 e0       	ldi	r25, 0x00	; 0
     da0:	a8 e4       	ldi	r26, 0x48	; 72
     da2:	b3 e4       	ldi	r27, 0x43	; 67
     da4:	80 83       	st	Z, r24
     da6:	91 83       	std	Z+1, r25	; 0x01
     da8:	a2 83       	std	Z+2, r26	; 0x02
     daa:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     dac:	8e 01       	movw	r16, r28
     dae:	0d 56       	subi	r16, 0x6D	; 109
     db0:	1f 4f       	sbci	r17, 0xFF	; 255
     db2:	fe 01       	movw	r30, r28
     db4:	e9 56       	subi	r30, 0x69	; 105
     db6:	ff 4f       	sbci	r31, 0xFF	; 255
     db8:	60 81       	ld	r22, Z
     dba:	71 81       	ldd	r23, Z+1	; 0x01
     dbc:	82 81       	ldd	r24, Z+2	; 0x02
     dbe:	93 81       	ldd	r25, Z+3	; 0x03
     dc0:	20 e0       	ldi	r18, 0x00	; 0
     dc2:	30 e0       	ldi	r19, 0x00	; 0
     dc4:	4a e7       	ldi	r20, 0x7A	; 122
     dc6:	55 e4       	ldi	r21, 0x45	; 69
     dc8:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
     dcc:	dc 01       	movw	r26, r24
     dce:	cb 01       	movw	r24, r22
     dd0:	f8 01       	movw	r30, r16
     dd2:	80 83       	st	Z, r24
     dd4:	91 83       	std	Z+1, r25	; 0x01
     dd6:	a2 83       	std	Z+2, r26	; 0x02
     dd8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     dda:	fe 01       	movw	r30, r28
     ddc:	ed 56       	subi	r30, 0x6D	; 109
     dde:	ff 4f       	sbci	r31, 0xFF	; 255
     de0:	60 81       	ld	r22, Z
     de2:	71 81       	ldd	r23, Z+1	; 0x01
     de4:	82 81       	ldd	r24, Z+2	; 0x02
     de6:	93 81       	ldd	r25, Z+3	; 0x03
     de8:	20 e0       	ldi	r18, 0x00	; 0
     dea:	30 e0       	ldi	r19, 0x00	; 0
     dec:	40 e8       	ldi	r20, 0x80	; 128
     dee:	5f e3       	ldi	r21, 0x3F	; 63
     df0:	0e 94 dd 14 	call	0x29ba	; 0x29ba <__ltsf2>
     df4:	88 23       	and	r24, r24
     df6:	44 f4       	brge	.+16     	; 0xe08 <__stack+0x5a9>
		__ticks = 1;
     df8:	fe 01       	movw	r30, r28
     dfa:	ef 56       	subi	r30, 0x6F	; 111
     dfc:	ff 4f       	sbci	r31, 0xFF	; 255
     dfe:	81 e0       	ldi	r24, 0x01	; 1
     e00:	90 e0       	ldi	r25, 0x00	; 0
     e02:	91 83       	std	Z+1, r25	; 0x01
     e04:	80 83       	st	Z, r24
     e06:	64 c0       	rjmp	.+200    	; 0xed0 <__stack+0x671>
	else if (__tmp > 65535)
     e08:	fe 01       	movw	r30, r28
     e0a:	ed 56       	subi	r30, 0x6D	; 109
     e0c:	ff 4f       	sbci	r31, 0xFF	; 255
     e0e:	60 81       	ld	r22, Z
     e10:	71 81       	ldd	r23, Z+1	; 0x01
     e12:	82 81       	ldd	r24, Z+2	; 0x02
     e14:	93 81       	ldd	r25, Z+3	; 0x03
     e16:	20 e0       	ldi	r18, 0x00	; 0
     e18:	3f ef       	ldi	r19, 0xFF	; 255
     e1a:	4f e7       	ldi	r20, 0x7F	; 127
     e1c:	57 e4       	ldi	r21, 0x47	; 71
     e1e:	0e 94 7d 14 	call	0x28fa	; 0x28fa <__gtsf2>
     e22:	18 16       	cp	r1, r24
     e24:	0c f0       	brlt	.+2      	; 0xe28 <__stack+0x5c9>
     e26:	43 c0       	rjmp	.+134    	; 0xeae <__stack+0x64f>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     e28:	fe 01       	movw	r30, r28
     e2a:	e9 56       	subi	r30, 0x69	; 105
     e2c:	ff 4f       	sbci	r31, 0xFF	; 255
     e2e:	60 81       	ld	r22, Z
     e30:	71 81       	ldd	r23, Z+1	; 0x01
     e32:	82 81       	ldd	r24, Z+2	; 0x02
     e34:	93 81       	ldd	r25, Z+3	; 0x03
     e36:	20 e0       	ldi	r18, 0x00	; 0
     e38:	30 e0       	ldi	r19, 0x00	; 0
     e3a:	40 e2       	ldi	r20, 0x20	; 32
     e3c:	51 e4       	ldi	r21, 0x41	; 65
     e3e:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
     e42:	dc 01       	movw	r26, r24
     e44:	cb 01       	movw	r24, r22
     e46:	8e 01       	movw	r16, r28
     e48:	0f 56       	subi	r16, 0x6F	; 111
     e4a:	1f 4f       	sbci	r17, 0xFF	; 255
     e4c:	bc 01       	movw	r22, r24
     e4e:	cd 01       	movw	r24, r26
     e50:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
     e54:	dc 01       	movw	r26, r24
     e56:	cb 01       	movw	r24, r22
     e58:	f8 01       	movw	r30, r16
     e5a:	91 83       	std	Z+1, r25	; 0x01
     e5c:	80 83       	st	Z, r24
     e5e:	1f c0       	rjmp	.+62     	; 0xe9e <__stack+0x63f>
     e60:	fe 01       	movw	r30, r28
     e62:	e1 57       	subi	r30, 0x71	; 113
     e64:	ff 4f       	sbci	r31, 0xFF	; 255
     e66:	80 e9       	ldi	r24, 0x90	; 144
     e68:	91 e0       	ldi	r25, 0x01	; 1
     e6a:	91 83       	std	Z+1, r25	; 0x01
     e6c:	80 83       	st	Z, r24
     e6e:	fe 01       	movw	r30, r28
     e70:	e1 57       	subi	r30, 0x71	; 113
     e72:	ff 4f       	sbci	r31, 0xFF	; 255
     e74:	80 81       	ld	r24, Z
     e76:	91 81       	ldd	r25, Z+1	; 0x01
     e78:	01 97       	sbiw	r24, 0x01	; 1
     e7a:	f1 f7       	brne	.-4      	; 0xe78 <__stack+0x619>
     e7c:	fe 01       	movw	r30, r28
     e7e:	e1 57       	subi	r30, 0x71	; 113
     e80:	ff 4f       	sbci	r31, 0xFF	; 255
     e82:	91 83       	std	Z+1, r25	; 0x01
     e84:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     e86:	de 01       	movw	r26, r28
     e88:	af 56       	subi	r26, 0x6F	; 111
     e8a:	bf 4f       	sbci	r27, 0xFF	; 255
     e8c:	fe 01       	movw	r30, r28
     e8e:	ef 56       	subi	r30, 0x6F	; 111
     e90:	ff 4f       	sbci	r31, 0xFF	; 255
     e92:	80 81       	ld	r24, Z
     e94:	91 81       	ldd	r25, Z+1	; 0x01
     e96:	01 97       	sbiw	r24, 0x01	; 1
     e98:	11 96       	adiw	r26, 0x01	; 1
     e9a:	9c 93       	st	X, r25
     e9c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     e9e:	fe 01       	movw	r30, r28
     ea0:	ef 56       	subi	r30, 0x6F	; 111
     ea2:	ff 4f       	sbci	r31, 0xFF	; 255
     ea4:	80 81       	ld	r24, Z
     ea6:	91 81       	ldd	r25, Z+1	; 0x01
     ea8:	00 97       	sbiw	r24, 0x00	; 0
     eaa:	d1 f6       	brne	.-76     	; 0xe60 <__stack+0x601>
     eac:	27 c0       	rjmp	.+78     	; 0xefc <__stack+0x69d>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     eae:	8e 01       	movw	r16, r28
     eb0:	0f 56       	subi	r16, 0x6F	; 111
     eb2:	1f 4f       	sbci	r17, 0xFF	; 255
     eb4:	fe 01       	movw	r30, r28
     eb6:	ed 56       	subi	r30, 0x6D	; 109
     eb8:	ff 4f       	sbci	r31, 0xFF	; 255
     eba:	60 81       	ld	r22, Z
     ebc:	71 81       	ldd	r23, Z+1	; 0x01
     ebe:	82 81       	ldd	r24, Z+2	; 0x02
     ec0:	93 81       	ldd	r25, Z+3	; 0x03
     ec2:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
     ec6:	dc 01       	movw	r26, r24
     ec8:	cb 01       	movw	r24, r22
     eca:	f8 01       	movw	r30, r16
     ecc:	91 83       	std	Z+1, r25	; 0x01
     ece:	80 83       	st	Z, r24
     ed0:	de 01       	movw	r26, r28
     ed2:	a3 57       	subi	r26, 0x73	; 115
     ed4:	bf 4f       	sbci	r27, 0xFF	; 255
     ed6:	fe 01       	movw	r30, r28
     ed8:	ef 56       	subi	r30, 0x6F	; 111
     eda:	ff 4f       	sbci	r31, 0xFF	; 255
     edc:	80 81       	ld	r24, Z
     ede:	91 81       	ldd	r25, Z+1	; 0x01
     ee0:	8d 93       	st	X+, r24
     ee2:	9c 93       	st	X, r25
     ee4:	fe 01       	movw	r30, r28
     ee6:	e3 57       	subi	r30, 0x73	; 115
     ee8:	ff 4f       	sbci	r31, 0xFF	; 255
     eea:	80 81       	ld	r24, Z
     eec:	91 81       	ldd	r25, Z+1	; 0x01
     eee:	01 97       	sbiw	r24, 0x01	; 1
     ef0:	f1 f7       	brne	.-4      	; 0xeee <__stack+0x68f>
     ef2:	fe 01       	movw	r30, r28
     ef4:	e3 57       	subi	r30, 0x73	; 115
     ef6:	ff 4f       	sbci	r31, 0xFF	; 255
     ef8:	91 83       	std	Z+1, r25	; 0x01
     efa:	80 83       	st	Z, r24
	_delay_ms(DELAY_DURATION);
	led_Toggle(LED_7);
     efc:	86 e0       	ldi	r24, 0x06	; 6
     efe:	90 e0       	ldi	r25, 0x00	; 0
     f00:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <led_Toggle>
     f04:	fe 01       	movw	r30, r28
     f06:	e7 57       	subi	r30, 0x77	; 119
     f08:	ff 4f       	sbci	r31, 0xFF	; 255
     f0a:	80 e0       	ldi	r24, 0x00	; 0
     f0c:	90 e0       	ldi	r25, 0x00	; 0
     f0e:	a8 e4       	ldi	r26, 0x48	; 72
     f10:	b3 e4       	ldi	r27, 0x43	; 67
     f12:	80 83       	st	Z, r24
     f14:	91 83       	std	Z+1, r25	; 0x01
     f16:	a2 83       	std	Z+2, r26	; 0x02
     f18:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     f1a:	8e 01       	movw	r16, r28
     f1c:	0b 57       	subi	r16, 0x7B	; 123
     f1e:	1f 4f       	sbci	r17, 0xFF	; 255
     f20:	fe 01       	movw	r30, r28
     f22:	e7 57       	subi	r30, 0x77	; 119
     f24:	ff 4f       	sbci	r31, 0xFF	; 255
     f26:	60 81       	ld	r22, Z
     f28:	71 81       	ldd	r23, Z+1	; 0x01
     f2a:	82 81       	ldd	r24, Z+2	; 0x02
     f2c:	93 81       	ldd	r25, Z+3	; 0x03
     f2e:	20 e0       	ldi	r18, 0x00	; 0
     f30:	30 e0       	ldi	r19, 0x00	; 0
     f32:	4a e7       	ldi	r20, 0x7A	; 122
     f34:	55 e4       	ldi	r21, 0x45	; 69
     f36:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
     f3a:	dc 01       	movw	r26, r24
     f3c:	cb 01       	movw	r24, r22
     f3e:	f8 01       	movw	r30, r16
     f40:	80 83       	st	Z, r24
     f42:	91 83       	std	Z+1, r25	; 0x01
     f44:	a2 83       	std	Z+2, r26	; 0x02
     f46:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     f48:	fe 01       	movw	r30, r28
     f4a:	eb 57       	subi	r30, 0x7B	; 123
     f4c:	ff 4f       	sbci	r31, 0xFF	; 255
     f4e:	60 81       	ld	r22, Z
     f50:	71 81       	ldd	r23, Z+1	; 0x01
     f52:	82 81       	ldd	r24, Z+2	; 0x02
     f54:	93 81       	ldd	r25, Z+3	; 0x03
     f56:	20 e0       	ldi	r18, 0x00	; 0
     f58:	30 e0       	ldi	r19, 0x00	; 0
     f5a:	40 e8       	ldi	r20, 0x80	; 128
     f5c:	5f e3       	ldi	r21, 0x3F	; 63
     f5e:	0e 94 dd 14 	call	0x29ba	; 0x29ba <__ltsf2>
     f62:	88 23       	and	r24, r24
     f64:	44 f4       	brge	.+16     	; 0xf76 <__stack+0x717>
		__ticks = 1;
     f66:	fe 01       	movw	r30, r28
     f68:	ed 57       	subi	r30, 0x7D	; 125
     f6a:	ff 4f       	sbci	r31, 0xFF	; 255
     f6c:	81 e0       	ldi	r24, 0x01	; 1
     f6e:	90 e0       	ldi	r25, 0x00	; 0
     f70:	91 83       	std	Z+1, r25	; 0x01
     f72:	80 83       	st	Z, r24
     f74:	64 c0       	rjmp	.+200    	; 0x103e <__stack+0x7df>
	else if (__tmp > 65535)
     f76:	fe 01       	movw	r30, r28
     f78:	eb 57       	subi	r30, 0x7B	; 123
     f7a:	ff 4f       	sbci	r31, 0xFF	; 255
     f7c:	60 81       	ld	r22, Z
     f7e:	71 81       	ldd	r23, Z+1	; 0x01
     f80:	82 81       	ldd	r24, Z+2	; 0x02
     f82:	93 81       	ldd	r25, Z+3	; 0x03
     f84:	20 e0       	ldi	r18, 0x00	; 0
     f86:	3f ef       	ldi	r19, 0xFF	; 255
     f88:	4f e7       	ldi	r20, 0x7F	; 127
     f8a:	57 e4       	ldi	r21, 0x47	; 71
     f8c:	0e 94 7d 14 	call	0x28fa	; 0x28fa <__gtsf2>
     f90:	18 16       	cp	r1, r24
     f92:	0c f0       	brlt	.+2      	; 0xf96 <__stack+0x737>
     f94:	43 c0       	rjmp	.+134    	; 0x101c <__stack+0x7bd>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f96:	fe 01       	movw	r30, r28
     f98:	e7 57       	subi	r30, 0x77	; 119
     f9a:	ff 4f       	sbci	r31, 0xFF	; 255
     f9c:	60 81       	ld	r22, Z
     f9e:	71 81       	ldd	r23, Z+1	; 0x01
     fa0:	82 81       	ldd	r24, Z+2	; 0x02
     fa2:	93 81       	ldd	r25, Z+3	; 0x03
     fa4:	20 e0       	ldi	r18, 0x00	; 0
     fa6:	30 e0       	ldi	r19, 0x00	; 0
     fa8:	40 e2       	ldi	r20, 0x20	; 32
     faa:	51 e4       	ldi	r21, 0x41	; 65
     fac:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
     fb0:	dc 01       	movw	r26, r24
     fb2:	cb 01       	movw	r24, r22
     fb4:	8e 01       	movw	r16, r28
     fb6:	0d 57       	subi	r16, 0x7D	; 125
     fb8:	1f 4f       	sbci	r17, 0xFF	; 255
     fba:	bc 01       	movw	r22, r24
     fbc:	cd 01       	movw	r24, r26
     fbe:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
     fc2:	dc 01       	movw	r26, r24
     fc4:	cb 01       	movw	r24, r22
     fc6:	f8 01       	movw	r30, r16
     fc8:	91 83       	std	Z+1, r25	; 0x01
     fca:	80 83       	st	Z, r24
     fcc:	1f c0       	rjmp	.+62     	; 0x100c <__stack+0x7ad>
     fce:	fe 01       	movw	r30, r28
     fd0:	ef 57       	subi	r30, 0x7F	; 127
     fd2:	ff 4f       	sbci	r31, 0xFF	; 255
     fd4:	80 e9       	ldi	r24, 0x90	; 144
     fd6:	91 e0       	ldi	r25, 0x01	; 1
     fd8:	91 83       	std	Z+1, r25	; 0x01
     fda:	80 83       	st	Z, r24
     fdc:	fe 01       	movw	r30, r28
     fde:	ef 57       	subi	r30, 0x7F	; 127
     fe0:	ff 4f       	sbci	r31, 0xFF	; 255
     fe2:	80 81       	ld	r24, Z
     fe4:	91 81       	ldd	r25, Z+1	; 0x01
     fe6:	01 97       	sbiw	r24, 0x01	; 1
     fe8:	f1 f7       	brne	.-4      	; 0xfe6 <__stack+0x787>
     fea:	fe 01       	movw	r30, r28
     fec:	ef 57       	subi	r30, 0x7F	; 127
     fee:	ff 4f       	sbci	r31, 0xFF	; 255
     ff0:	91 83       	std	Z+1, r25	; 0x01
     ff2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     ff4:	de 01       	movw	r26, r28
     ff6:	ad 57       	subi	r26, 0x7D	; 125
     ff8:	bf 4f       	sbci	r27, 0xFF	; 255
     ffa:	fe 01       	movw	r30, r28
     ffc:	ed 57       	subi	r30, 0x7D	; 125
     ffe:	ff 4f       	sbci	r31, 0xFF	; 255
    1000:	80 81       	ld	r24, Z
    1002:	91 81       	ldd	r25, Z+1	; 0x01
    1004:	01 97       	sbiw	r24, 0x01	; 1
    1006:	11 96       	adiw	r26, 0x01	; 1
    1008:	9c 93       	st	X, r25
    100a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    100c:	fe 01       	movw	r30, r28
    100e:	ed 57       	subi	r30, 0x7D	; 125
    1010:	ff 4f       	sbci	r31, 0xFF	; 255
    1012:	80 81       	ld	r24, Z
    1014:	91 81       	ldd	r25, Z+1	; 0x01
    1016:	00 97       	sbiw	r24, 0x00	; 0
    1018:	d1 f6       	brne	.-76     	; 0xfce <__stack+0x76f>
    101a:	27 c0       	rjmp	.+78     	; 0x106a <__stack+0x80b>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    101c:	8e 01       	movw	r16, r28
    101e:	0d 57       	subi	r16, 0x7D	; 125
    1020:	1f 4f       	sbci	r17, 0xFF	; 255
    1022:	fe 01       	movw	r30, r28
    1024:	eb 57       	subi	r30, 0x7B	; 123
    1026:	ff 4f       	sbci	r31, 0xFF	; 255
    1028:	60 81       	ld	r22, Z
    102a:	71 81       	ldd	r23, Z+1	; 0x01
    102c:	82 81       	ldd	r24, Z+2	; 0x02
    102e:	93 81       	ldd	r25, Z+3	; 0x03
    1030:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
    1034:	dc 01       	movw	r26, r24
    1036:	cb 01       	movw	r24, r22
    1038:	f8 01       	movw	r30, r16
    103a:	91 83       	std	Z+1, r25	; 0x01
    103c:	80 83       	st	Z, r24
    103e:	de 01       	movw	r26, r28
    1040:	a1 58       	subi	r26, 0x81	; 129
    1042:	bf 4f       	sbci	r27, 0xFF	; 255
    1044:	fe 01       	movw	r30, r28
    1046:	ed 57       	subi	r30, 0x7D	; 125
    1048:	ff 4f       	sbci	r31, 0xFF	; 255
    104a:	80 81       	ld	r24, Z
    104c:	91 81       	ldd	r25, Z+1	; 0x01
    104e:	8d 93       	st	X+, r24
    1050:	9c 93       	st	X, r25
    1052:	fe 01       	movw	r30, r28
    1054:	e1 58       	subi	r30, 0x81	; 129
    1056:	ff 4f       	sbci	r31, 0xFF	; 255
    1058:	80 81       	ld	r24, Z
    105a:	91 81       	ldd	r25, Z+1	; 0x01
    105c:	01 97       	sbiw	r24, 0x01	; 1
    105e:	f1 f7       	brne	.-4      	; 0x105c <__stack+0x7fd>
    1060:	fe 01       	movw	r30, r28
    1062:	e1 58       	subi	r30, 0x81	; 129
    1064:	ff 4f       	sbci	r31, 0xFF	; 255
    1066:	91 83       	std	Z+1, r25	; 0x01
    1068:	80 83       	st	Z, r24
	_delay_ms(DELAY_DURATION);
	led_Toggle(LED_8);
    106a:	87 e0       	ldi	r24, 0x07	; 7
    106c:	90 e0       	ldi	r25, 0x00	; 0
    106e:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <led_Toggle>
    1072:	fe 01       	movw	r30, r28
    1074:	e5 58       	subi	r30, 0x85	; 133
    1076:	ff 4f       	sbci	r31, 0xFF	; 255
    1078:	80 e0       	ldi	r24, 0x00	; 0
    107a:	90 e0       	ldi	r25, 0x00	; 0
    107c:	a8 e4       	ldi	r26, 0x48	; 72
    107e:	b3 e4       	ldi	r27, 0x43	; 67
    1080:	80 83       	st	Z, r24
    1082:	91 83       	std	Z+1, r25	; 0x01
    1084:	a2 83       	std	Z+2, r26	; 0x02
    1086:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1088:	8e 01       	movw	r16, r28
    108a:	09 58       	subi	r16, 0x89	; 137
    108c:	1f 4f       	sbci	r17, 0xFF	; 255
    108e:	fe 01       	movw	r30, r28
    1090:	e5 58       	subi	r30, 0x85	; 133
    1092:	ff 4f       	sbci	r31, 0xFF	; 255
    1094:	60 81       	ld	r22, Z
    1096:	71 81       	ldd	r23, Z+1	; 0x01
    1098:	82 81       	ldd	r24, Z+2	; 0x02
    109a:	93 81       	ldd	r25, Z+3	; 0x03
    109c:	20 e0       	ldi	r18, 0x00	; 0
    109e:	30 e0       	ldi	r19, 0x00	; 0
    10a0:	4a e7       	ldi	r20, 0x7A	; 122
    10a2:	55 e4       	ldi	r21, 0x45	; 69
    10a4:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
    10a8:	dc 01       	movw	r26, r24
    10aa:	cb 01       	movw	r24, r22
    10ac:	f8 01       	movw	r30, r16
    10ae:	80 83       	st	Z, r24
    10b0:	91 83       	std	Z+1, r25	; 0x01
    10b2:	a2 83       	std	Z+2, r26	; 0x02
    10b4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    10b6:	fe 01       	movw	r30, r28
    10b8:	e9 58       	subi	r30, 0x89	; 137
    10ba:	ff 4f       	sbci	r31, 0xFF	; 255
    10bc:	60 81       	ld	r22, Z
    10be:	71 81       	ldd	r23, Z+1	; 0x01
    10c0:	82 81       	ldd	r24, Z+2	; 0x02
    10c2:	93 81       	ldd	r25, Z+3	; 0x03
    10c4:	20 e0       	ldi	r18, 0x00	; 0
    10c6:	30 e0       	ldi	r19, 0x00	; 0
    10c8:	40 e8       	ldi	r20, 0x80	; 128
    10ca:	5f e3       	ldi	r21, 0x3F	; 63
    10cc:	0e 94 dd 14 	call	0x29ba	; 0x29ba <__ltsf2>
    10d0:	88 23       	and	r24, r24
    10d2:	44 f4       	brge	.+16     	; 0x10e4 <__stack+0x885>
		__ticks = 1;
    10d4:	fe 01       	movw	r30, r28
    10d6:	eb 58       	subi	r30, 0x8B	; 139
    10d8:	ff 4f       	sbci	r31, 0xFF	; 255
    10da:	81 e0       	ldi	r24, 0x01	; 1
    10dc:	90 e0       	ldi	r25, 0x00	; 0
    10de:	91 83       	std	Z+1, r25	; 0x01
    10e0:	80 83       	st	Z, r24
    10e2:	64 c0       	rjmp	.+200    	; 0x11ac <__stack+0x94d>
	else if (__tmp > 65535)
    10e4:	fe 01       	movw	r30, r28
    10e6:	e9 58       	subi	r30, 0x89	; 137
    10e8:	ff 4f       	sbci	r31, 0xFF	; 255
    10ea:	60 81       	ld	r22, Z
    10ec:	71 81       	ldd	r23, Z+1	; 0x01
    10ee:	82 81       	ldd	r24, Z+2	; 0x02
    10f0:	93 81       	ldd	r25, Z+3	; 0x03
    10f2:	20 e0       	ldi	r18, 0x00	; 0
    10f4:	3f ef       	ldi	r19, 0xFF	; 255
    10f6:	4f e7       	ldi	r20, 0x7F	; 127
    10f8:	57 e4       	ldi	r21, 0x47	; 71
    10fa:	0e 94 7d 14 	call	0x28fa	; 0x28fa <__gtsf2>
    10fe:	18 16       	cp	r1, r24
    1100:	0c f0       	brlt	.+2      	; 0x1104 <__stack+0x8a5>
    1102:	43 c0       	rjmp	.+134    	; 0x118a <__stack+0x92b>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1104:	fe 01       	movw	r30, r28
    1106:	e5 58       	subi	r30, 0x85	; 133
    1108:	ff 4f       	sbci	r31, 0xFF	; 255
    110a:	60 81       	ld	r22, Z
    110c:	71 81       	ldd	r23, Z+1	; 0x01
    110e:	82 81       	ldd	r24, Z+2	; 0x02
    1110:	93 81       	ldd	r25, Z+3	; 0x03
    1112:	20 e0       	ldi	r18, 0x00	; 0
    1114:	30 e0       	ldi	r19, 0x00	; 0
    1116:	40 e2       	ldi	r20, 0x20	; 32
    1118:	51 e4       	ldi	r21, 0x41	; 65
    111a:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
    111e:	dc 01       	movw	r26, r24
    1120:	cb 01       	movw	r24, r22
    1122:	8e 01       	movw	r16, r28
    1124:	0b 58       	subi	r16, 0x8B	; 139
    1126:	1f 4f       	sbci	r17, 0xFF	; 255
    1128:	bc 01       	movw	r22, r24
    112a:	cd 01       	movw	r24, r26
    112c:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
    1130:	dc 01       	movw	r26, r24
    1132:	cb 01       	movw	r24, r22
    1134:	f8 01       	movw	r30, r16
    1136:	91 83       	std	Z+1, r25	; 0x01
    1138:	80 83       	st	Z, r24
    113a:	1f c0       	rjmp	.+62     	; 0x117a <__stack+0x91b>
    113c:	fe 01       	movw	r30, r28
    113e:	ed 58       	subi	r30, 0x8D	; 141
    1140:	ff 4f       	sbci	r31, 0xFF	; 255
    1142:	80 e9       	ldi	r24, 0x90	; 144
    1144:	91 e0       	ldi	r25, 0x01	; 1
    1146:	91 83       	std	Z+1, r25	; 0x01
    1148:	80 83       	st	Z, r24
    114a:	fe 01       	movw	r30, r28
    114c:	ed 58       	subi	r30, 0x8D	; 141
    114e:	ff 4f       	sbci	r31, 0xFF	; 255
    1150:	80 81       	ld	r24, Z
    1152:	91 81       	ldd	r25, Z+1	; 0x01
    1154:	01 97       	sbiw	r24, 0x01	; 1
    1156:	f1 f7       	brne	.-4      	; 0x1154 <__stack+0x8f5>
    1158:	fe 01       	movw	r30, r28
    115a:	ed 58       	subi	r30, 0x8D	; 141
    115c:	ff 4f       	sbci	r31, 0xFF	; 255
    115e:	91 83       	std	Z+1, r25	; 0x01
    1160:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1162:	de 01       	movw	r26, r28
    1164:	ab 58       	subi	r26, 0x8B	; 139
    1166:	bf 4f       	sbci	r27, 0xFF	; 255
    1168:	fe 01       	movw	r30, r28
    116a:	eb 58       	subi	r30, 0x8B	; 139
    116c:	ff 4f       	sbci	r31, 0xFF	; 255
    116e:	80 81       	ld	r24, Z
    1170:	91 81       	ldd	r25, Z+1	; 0x01
    1172:	01 97       	sbiw	r24, 0x01	; 1
    1174:	11 96       	adiw	r26, 0x01	; 1
    1176:	9c 93       	st	X, r25
    1178:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    117a:	fe 01       	movw	r30, r28
    117c:	eb 58       	subi	r30, 0x8B	; 139
    117e:	ff 4f       	sbci	r31, 0xFF	; 255
    1180:	80 81       	ld	r24, Z
    1182:	91 81       	ldd	r25, Z+1	; 0x01
    1184:	00 97       	sbiw	r24, 0x00	; 0
    1186:	d1 f6       	brne	.-76     	; 0x113c <__stack+0x8dd>
    1188:	27 c0       	rjmp	.+78     	; 0x11d8 <__stack+0x979>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    118a:	8e 01       	movw	r16, r28
    118c:	0b 58       	subi	r16, 0x8B	; 139
    118e:	1f 4f       	sbci	r17, 0xFF	; 255
    1190:	fe 01       	movw	r30, r28
    1192:	e9 58       	subi	r30, 0x89	; 137
    1194:	ff 4f       	sbci	r31, 0xFF	; 255
    1196:	60 81       	ld	r22, Z
    1198:	71 81       	ldd	r23, Z+1	; 0x01
    119a:	82 81       	ldd	r24, Z+2	; 0x02
    119c:	93 81       	ldd	r25, Z+3	; 0x03
    119e:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
    11a2:	dc 01       	movw	r26, r24
    11a4:	cb 01       	movw	r24, r22
    11a6:	f8 01       	movw	r30, r16
    11a8:	91 83       	std	Z+1, r25	; 0x01
    11aa:	80 83       	st	Z, r24
    11ac:	de 01       	movw	r26, r28
    11ae:	af 58       	subi	r26, 0x8F	; 143
    11b0:	bf 4f       	sbci	r27, 0xFF	; 255
    11b2:	fe 01       	movw	r30, r28
    11b4:	eb 58       	subi	r30, 0x8B	; 139
    11b6:	ff 4f       	sbci	r31, 0xFF	; 255
    11b8:	80 81       	ld	r24, Z
    11ba:	91 81       	ldd	r25, Z+1	; 0x01
    11bc:	8d 93       	st	X+, r24
    11be:	9c 93       	st	X, r25
    11c0:	fe 01       	movw	r30, r28
    11c2:	ef 58       	subi	r30, 0x8F	; 143
    11c4:	ff 4f       	sbci	r31, 0xFF	; 255
    11c6:	80 81       	ld	r24, Z
    11c8:	91 81       	ldd	r25, Z+1	; 0x01
    11ca:	01 97       	sbiw	r24, 0x01	; 1
    11cc:	f1 f7       	brne	.-4      	; 0x11ca <__stack+0x96b>
    11ce:	fe 01       	movw	r30, r28
    11d0:	ef 58       	subi	r30, 0x8F	; 143
    11d2:	ff 4f       	sbci	r31, 0xFF	; 255
    11d4:	91 83       	std	Z+1, r25	; 0x01
    11d6:	80 83       	st	Z, r24
	_delay_ms(DELAY_DURATION);
	led_Toggle(LED_8);
    11d8:	87 e0       	ldi	r24, 0x07	; 7
    11da:	90 e0       	ldi	r25, 0x00	; 0
    11dc:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <led_Toggle>
    11e0:	fe 01       	movw	r30, r28
    11e2:	e3 59       	subi	r30, 0x93	; 147
    11e4:	ff 4f       	sbci	r31, 0xFF	; 255
    11e6:	80 e0       	ldi	r24, 0x00	; 0
    11e8:	90 e0       	ldi	r25, 0x00	; 0
    11ea:	a8 e4       	ldi	r26, 0x48	; 72
    11ec:	b3 e4       	ldi	r27, 0x43	; 67
    11ee:	80 83       	st	Z, r24
    11f0:	91 83       	std	Z+1, r25	; 0x01
    11f2:	a2 83       	std	Z+2, r26	; 0x02
    11f4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    11f6:	8e 01       	movw	r16, r28
    11f8:	07 59       	subi	r16, 0x97	; 151
    11fa:	1f 4f       	sbci	r17, 0xFF	; 255
    11fc:	fe 01       	movw	r30, r28
    11fe:	e3 59       	subi	r30, 0x93	; 147
    1200:	ff 4f       	sbci	r31, 0xFF	; 255
    1202:	60 81       	ld	r22, Z
    1204:	71 81       	ldd	r23, Z+1	; 0x01
    1206:	82 81       	ldd	r24, Z+2	; 0x02
    1208:	93 81       	ldd	r25, Z+3	; 0x03
    120a:	20 e0       	ldi	r18, 0x00	; 0
    120c:	30 e0       	ldi	r19, 0x00	; 0
    120e:	4a e7       	ldi	r20, 0x7A	; 122
    1210:	55 e4       	ldi	r21, 0x45	; 69
    1212:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
    1216:	dc 01       	movw	r26, r24
    1218:	cb 01       	movw	r24, r22
    121a:	f8 01       	movw	r30, r16
    121c:	80 83       	st	Z, r24
    121e:	91 83       	std	Z+1, r25	; 0x01
    1220:	a2 83       	std	Z+2, r26	; 0x02
    1222:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1224:	fe 01       	movw	r30, r28
    1226:	e7 59       	subi	r30, 0x97	; 151
    1228:	ff 4f       	sbci	r31, 0xFF	; 255
    122a:	60 81       	ld	r22, Z
    122c:	71 81       	ldd	r23, Z+1	; 0x01
    122e:	82 81       	ldd	r24, Z+2	; 0x02
    1230:	93 81       	ldd	r25, Z+3	; 0x03
    1232:	20 e0       	ldi	r18, 0x00	; 0
    1234:	30 e0       	ldi	r19, 0x00	; 0
    1236:	40 e8       	ldi	r20, 0x80	; 128
    1238:	5f e3       	ldi	r21, 0x3F	; 63
    123a:	0e 94 dd 14 	call	0x29ba	; 0x29ba <__ltsf2>
    123e:	88 23       	and	r24, r24
    1240:	44 f4       	brge	.+16     	; 0x1252 <__stack+0x9f3>
		__ticks = 1;
    1242:	fe 01       	movw	r30, r28
    1244:	e9 59       	subi	r30, 0x99	; 153
    1246:	ff 4f       	sbci	r31, 0xFF	; 255
    1248:	81 e0       	ldi	r24, 0x01	; 1
    124a:	90 e0       	ldi	r25, 0x00	; 0
    124c:	91 83       	std	Z+1, r25	; 0x01
    124e:	80 83       	st	Z, r24
    1250:	64 c0       	rjmp	.+200    	; 0x131a <__stack+0xabb>
	else if (__tmp > 65535)
    1252:	fe 01       	movw	r30, r28
    1254:	e7 59       	subi	r30, 0x97	; 151
    1256:	ff 4f       	sbci	r31, 0xFF	; 255
    1258:	60 81       	ld	r22, Z
    125a:	71 81       	ldd	r23, Z+1	; 0x01
    125c:	82 81       	ldd	r24, Z+2	; 0x02
    125e:	93 81       	ldd	r25, Z+3	; 0x03
    1260:	20 e0       	ldi	r18, 0x00	; 0
    1262:	3f ef       	ldi	r19, 0xFF	; 255
    1264:	4f e7       	ldi	r20, 0x7F	; 127
    1266:	57 e4       	ldi	r21, 0x47	; 71
    1268:	0e 94 7d 14 	call	0x28fa	; 0x28fa <__gtsf2>
    126c:	18 16       	cp	r1, r24
    126e:	0c f0       	brlt	.+2      	; 0x1272 <__stack+0xa13>
    1270:	43 c0       	rjmp	.+134    	; 0x12f8 <__stack+0xa99>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1272:	fe 01       	movw	r30, r28
    1274:	e3 59       	subi	r30, 0x93	; 147
    1276:	ff 4f       	sbci	r31, 0xFF	; 255
    1278:	60 81       	ld	r22, Z
    127a:	71 81       	ldd	r23, Z+1	; 0x01
    127c:	82 81       	ldd	r24, Z+2	; 0x02
    127e:	93 81       	ldd	r25, Z+3	; 0x03
    1280:	20 e0       	ldi	r18, 0x00	; 0
    1282:	30 e0       	ldi	r19, 0x00	; 0
    1284:	40 e2       	ldi	r20, 0x20	; 32
    1286:	51 e4       	ldi	r21, 0x41	; 65
    1288:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
    128c:	dc 01       	movw	r26, r24
    128e:	cb 01       	movw	r24, r22
    1290:	8e 01       	movw	r16, r28
    1292:	09 59       	subi	r16, 0x99	; 153
    1294:	1f 4f       	sbci	r17, 0xFF	; 255
    1296:	bc 01       	movw	r22, r24
    1298:	cd 01       	movw	r24, r26
    129a:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
    129e:	dc 01       	movw	r26, r24
    12a0:	cb 01       	movw	r24, r22
    12a2:	f8 01       	movw	r30, r16
    12a4:	91 83       	std	Z+1, r25	; 0x01
    12a6:	80 83       	st	Z, r24
    12a8:	1f c0       	rjmp	.+62     	; 0x12e8 <__stack+0xa89>
    12aa:	fe 01       	movw	r30, r28
    12ac:	eb 59       	subi	r30, 0x9B	; 155
    12ae:	ff 4f       	sbci	r31, 0xFF	; 255
    12b0:	80 e9       	ldi	r24, 0x90	; 144
    12b2:	91 e0       	ldi	r25, 0x01	; 1
    12b4:	91 83       	std	Z+1, r25	; 0x01
    12b6:	80 83       	st	Z, r24
    12b8:	fe 01       	movw	r30, r28
    12ba:	eb 59       	subi	r30, 0x9B	; 155
    12bc:	ff 4f       	sbci	r31, 0xFF	; 255
    12be:	80 81       	ld	r24, Z
    12c0:	91 81       	ldd	r25, Z+1	; 0x01
    12c2:	01 97       	sbiw	r24, 0x01	; 1
    12c4:	f1 f7       	brne	.-4      	; 0x12c2 <__stack+0xa63>
    12c6:	fe 01       	movw	r30, r28
    12c8:	eb 59       	subi	r30, 0x9B	; 155
    12ca:	ff 4f       	sbci	r31, 0xFF	; 255
    12cc:	91 83       	std	Z+1, r25	; 0x01
    12ce:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    12d0:	de 01       	movw	r26, r28
    12d2:	a9 59       	subi	r26, 0x99	; 153
    12d4:	bf 4f       	sbci	r27, 0xFF	; 255
    12d6:	fe 01       	movw	r30, r28
    12d8:	e9 59       	subi	r30, 0x99	; 153
    12da:	ff 4f       	sbci	r31, 0xFF	; 255
    12dc:	80 81       	ld	r24, Z
    12de:	91 81       	ldd	r25, Z+1	; 0x01
    12e0:	01 97       	sbiw	r24, 0x01	; 1
    12e2:	11 96       	adiw	r26, 0x01	; 1
    12e4:	9c 93       	st	X, r25
    12e6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    12e8:	fe 01       	movw	r30, r28
    12ea:	e9 59       	subi	r30, 0x99	; 153
    12ec:	ff 4f       	sbci	r31, 0xFF	; 255
    12ee:	80 81       	ld	r24, Z
    12f0:	91 81       	ldd	r25, Z+1	; 0x01
    12f2:	00 97       	sbiw	r24, 0x00	; 0
    12f4:	d1 f6       	brne	.-76     	; 0x12aa <__stack+0xa4b>
    12f6:	27 c0       	rjmp	.+78     	; 0x1346 <__stack+0xae7>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    12f8:	8e 01       	movw	r16, r28
    12fa:	09 59       	subi	r16, 0x99	; 153
    12fc:	1f 4f       	sbci	r17, 0xFF	; 255
    12fe:	fe 01       	movw	r30, r28
    1300:	e7 59       	subi	r30, 0x97	; 151
    1302:	ff 4f       	sbci	r31, 0xFF	; 255
    1304:	60 81       	ld	r22, Z
    1306:	71 81       	ldd	r23, Z+1	; 0x01
    1308:	82 81       	ldd	r24, Z+2	; 0x02
    130a:	93 81       	ldd	r25, Z+3	; 0x03
    130c:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
    1310:	dc 01       	movw	r26, r24
    1312:	cb 01       	movw	r24, r22
    1314:	f8 01       	movw	r30, r16
    1316:	91 83       	std	Z+1, r25	; 0x01
    1318:	80 83       	st	Z, r24
    131a:	de 01       	movw	r26, r28
    131c:	ad 59       	subi	r26, 0x9D	; 157
    131e:	bf 4f       	sbci	r27, 0xFF	; 255
    1320:	fe 01       	movw	r30, r28
    1322:	e9 59       	subi	r30, 0x99	; 153
    1324:	ff 4f       	sbci	r31, 0xFF	; 255
    1326:	80 81       	ld	r24, Z
    1328:	91 81       	ldd	r25, Z+1	; 0x01
    132a:	8d 93       	st	X+, r24
    132c:	9c 93       	st	X, r25
    132e:	fe 01       	movw	r30, r28
    1330:	ed 59       	subi	r30, 0x9D	; 157
    1332:	ff 4f       	sbci	r31, 0xFF	; 255
    1334:	80 81       	ld	r24, Z
    1336:	91 81       	ldd	r25, Z+1	; 0x01
    1338:	01 97       	sbiw	r24, 0x01	; 1
    133a:	f1 f7       	brne	.-4      	; 0x1338 <__stack+0xad9>
    133c:	fe 01       	movw	r30, r28
    133e:	ed 59       	subi	r30, 0x9D	; 157
    1340:	ff 4f       	sbci	r31, 0xFF	; 255
    1342:	91 83       	std	Z+1, r25	; 0x01
    1344:	80 83       	st	Z, r24
	_delay_ms(DELAY_DURATION);
	led_Toggle(LED_7);
    1346:	86 e0       	ldi	r24, 0x06	; 6
    1348:	90 e0       	ldi	r25, 0x00	; 0
    134a:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <led_Toggle>
    134e:	fe 01       	movw	r30, r28
    1350:	e1 5a       	subi	r30, 0xA1	; 161
    1352:	ff 4f       	sbci	r31, 0xFF	; 255
    1354:	80 e0       	ldi	r24, 0x00	; 0
    1356:	90 e0       	ldi	r25, 0x00	; 0
    1358:	a8 e4       	ldi	r26, 0x48	; 72
    135a:	b3 e4       	ldi	r27, 0x43	; 67
    135c:	80 83       	st	Z, r24
    135e:	91 83       	std	Z+1, r25	; 0x01
    1360:	a2 83       	std	Z+2, r26	; 0x02
    1362:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1364:	8e 01       	movw	r16, r28
    1366:	05 5a       	subi	r16, 0xA5	; 165
    1368:	1f 4f       	sbci	r17, 0xFF	; 255
    136a:	fe 01       	movw	r30, r28
    136c:	e1 5a       	subi	r30, 0xA1	; 161
    136e:	ff 4f       	sbci	r31, 0xFF	; 255
    1370:	60 81       	ld	r22, Z
    1372:	71 81       	ldd	r23, Z+1	; 0x01
    1374:	82 81       	ldd	r24, Z+2	; 0x02
    1376:	93 81       	ldd	r25, Z+3	; 0x03
    1378:	20 e0       	ldi	r18, 0x00	; 0
    137a:	30 e0       	ldi	r19, 0x00	; 0
    137c:	4a e7       	ldi	r20, 0x7A	; 122
    137e:	55 e4       	ldi	r21, 0x45	; 69
    1380:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
    1384:	dc 01       	movw	r26, r24
    1386:	cb 01       	movw	r24, r22
    1388:	f8 01       	movw	r30, r16
    138a:	80 83       	st	Z, r24
    138c:	91 83       	std	Z+1, r25	; 0x01
    138e:	a2 83       	std	Z+2, r26	; 0x02
    1390:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1392:	fe 01       	movw	r30, r28
    1394:	e5 5a       	subi	r30, 0xA5	; 165
    1396:	ff 4f       	sbci	r31, 0xFF	; 255
    1398:	60 81       	ld	r22, Z
    139a:	71 81       	ldd	r23, Z+1	; 0x01
    139c:	82 81       	ldd	r24, Z+2	; 0x02
    139e:	93 81       	ldd	r25, Z+3	; 0x03
    13a0:	20 e0       	ldi	r18, 0x00	; 0
    13a2:	30 e0       	ldi	r19, 0x00	; 0
    13a4:	40 e8       	ldi	r20, 0x80	; 128
    13a6:	5f e3       	ldi	r21, 0x3F	; 63
    13a8:	0e 94 dd 14 	call	0x29ba	; 0x29ba <__ltsf2>
    13ac:	88 23       	and	r24, r24
    13ae:	44 f4       	brge	.+16     	; 0x13c0 <__stack+0xb61>
		__ticks = 1;
    13b0:	fe 01       	movw	r30, r28
    13b2:	e7 5a       	subi	r30, 0xA7	; 167
    13b4:	ff 4f       	sbci	r31, 0xFF	; 255
    13b6:	81 e0       	ldi	r24, 0x01	; 1
    13b8:	90 e0       	ldi	r25, 0x00	; 0
    13ba:	91 83       	std	Z+1, r25	; 0x01
    13bc:	80 83       	st	Z, r24
    13be:	64 c0       	rjmp	.+200    	; 0x1488 <__stack+0xc29>
	else if (__tmp > 65535)
    13c0:	fe 01       	movw	r30, r28
    13c2:	e5 5a       	subi	r30, 0xA5	; 165
    13c4:	ff 4f       	sbci	r31, 0xFF	; 255
    13c6:	60 81       	ld	r22, Z
    13c8:	71 81       	ldd	r23, Z+1	; 0x01
    13ca:	82 81       	ldd	r24, Z+2	; 0x02
    13cc:	93 81       	ldd	r25, Z+3	; 0x03
    13ce:	20 e0       	ldi	r18, 0x00	; 0
    13d0:	3f ef       	ldi	r19, 0xFF	; 255
    13d2:	4f e7       	ldi	r20, 0x7F	; 127
    13d4:	57 e4       	ldi	r21, 0x47	; 71
    13d6:	0e 94 7d 14 	call	0x28fa	; 0x28fa <__gtsf2>
    13da:	18 16       	cp	r1, r24
    13dc:	0c f0       	brlt	.+2      	; 0x13e0 <__stack+0xb81>
    13de:	43 c0       	rjmp	.+134    	; 0x1466 <__stack+0xc07>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    13e0:	fe 01       	movw	r30, r28
    13e2:	e1 5a       	subi	r30, 0xA1	; 161
    13e4:	ff 4f       	sbci	r31, 0xFF	; 255
    13e6:	60 81       	ld	r22, Z
    13e8:	71 81       	ldd	r23, Z+1	; 0x01
    13ea:	82 81       	ldd	r24, Z+2	; 0x02
    13ec:	93 81       	ldd	r25, Z+3	; 0x03
    13ee:	20 e0       	ldi	r18, 0x00	; 0
    13f0:	30 e0       	ldi	r19, 0x00	; 0
    13f2:	40 e2       	ldi	r20, 0x20	; 32
    13f4:	51 e4       	ldi	r21, 0x41	; 65
    13f6:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
    13fa:	dc 01       	movw	r26, r24
    13fc:	cb 01       	movw	r24, r22
    13fe:	8e 01       	movw	r16, r28
    1400:	07 5a       	subi	r16, 0xA7	; 167
    1402:	1f 4f       	sbci	r17, 0xFF	; 255
    1404:	bc 01       	movw	r22, r24
    1406:	cd 01       	movw	r24, r26
    1408:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
    140c:	dc 01       	movw	r26, r24
    140e:	cb 01       	movw	r24, r22
    1410:	f8 01       	movw	r30, r16
    1412:	91 83       	std	Z+1, r25	; 0x01
    1414:	80 83       	st	Z, r24
    1416:	1f c0       	rjmp	.+62     	; 0x1456 <__stack+0xbf7>
    1418:	fe 01       	movw	r30, r28
    141a:	e9 5a       	subi	r30, 0xA9	; 169
    141c:	ff 4f       	sbci	r31, 0xFF	; 255
    141e:	80 e9       	ldi	r24, 0x90	; 144
    1420:	91 e0       	ldi	r25, 0x01	; 1
    1422:	91 83       	std	Z+1, r25	; 0x01
    1424:	80 83       	st	Z, r24
    1426:	fe 01       	movw	r30, r28
    1428:	e9 5a       	subi	r30, 0xA9	; 169
    142a:	ff 4f       	sbci	r31, 0xFF	; 255
    142c:	80 81       	ld	r24, Z
    142e:	91 81       	ldd	r25, Z+1	; 0x01
    1430:	01 97       	sbiw	r24, 0x01	; 1
    1432:	f1 f7       	brne	.-4      	; 0x1430 <__stack+0xbd1>
    1434:	fe 01       	movw	r30, r28
    1436:	e9 5a       	subi	r30, 0xA9	; 169
    1438:	ff 4f       	sbci	r31, 0xFF	; 255
    143a:	91 83       	std	Z+1, r25	; 0x01
    143c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    143e:	de 01       	movw	r26, r28
    1440:	a7 5a       	subi	r26, 0xA7	; 167
    1442:	bf 4f       	sbci	r27, 0xFF	; 255
    1444:	fe 01       	movw	r30, r28
    1446:	e7 5a       	subi	r30, 0xA7	; 167
    1448:	ff 4f       	sbci	r31, 0xFF	; 255
    144a:	80 81       	ld	r24, Z
    144c:	91 81       	ldd	r25, Z+1	; 0x01
    144e:	01 97       	sbiw	r24, 0x01	; 1
    1450:	11 96       	adiw	r26, 0x01	; 1
    1452:	9c 93       	st	X, r25
    1454:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1456:	fe 01       	movw	r30, r28
    1458:	e7 5a       	subi	r30, 0xA7	; 167
    145a:	ff 4f       	sbci	r31, 0xFF	; 255
    145c:	80 81       	ld	r24, Z
    145e:	91 81       	ldd	r25, Z+1	; 0x01
    1460:	00 97       	sbiw	r24, 0x00	; 0
    1462:	d1 f6       	brne	.-76     	; 0x1418 <__stack+0xbb9>
    1464:	27 c0       	rjmp	.+78     	; 0x14b4 <__stack+0xc55>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1466:	8e 01       	movw	r16, r28
    1468:	07 5a       	subi	r16, 0xA7	; 167
    146a:	1f 4f       	sbci	r17, 0xFF	; 255
    146c:	fe 01       	movw	r30, r28
    146e:	e5 5a       	subi	r30, 0xA5	; 165
    1470:	ff 4f       	sbci	r31, 0xFF	; 255
    1472:	60 81       	ld	r22, Z
    1474:	71 81       	ldd	r23, Z+1	; 0x01
    1476:	82 81       	ldd	r24, Z+2	; 0x02
    1478:	93 81       	ldd	r25, Z+3	; 0x03
    147a:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
    147e:	dc 01       	movw	r26, r24
    1480:	cb 01       	movw	r24, r22
    1482:	f8 01       	movw	r30, r16
    1484:	91 83       	std	Z+1, r25	; 0x01
    1486:	80 83       	st	Z, r24
    1488:	de 01       	movw	r26, r28
    148a:	ab 5a       	subi	r26, 0xAB	; 171
    148c:	bf 4f       	sbci	r27, 0xFF	; 255
    148e:	fe 01       	movw	r30, r28
    1490:	e7 5a       	subi	r30, 0xA7	; 167
    1492:	ff 4f       	sbci	r31, 0xFF	; 255
    1494:	80 81       	ld	r24, Z
    1496:	91 81       	ldd	r25, Z+1	; 0x01
    1498:	8d 93       	st	X+, r24
    149a:	9c 93       	st	X, r25
    149c:	fe 01       	movw	r30, r28
    149e:	eb 5a       	subi	r30, 0xAB	; 171
    14a0:	ff 4f       	sbci	r31, 0xFF	; 255
    14a2:	80 81       	ld	r24, Z
    14a4:	91 81       	ldd	r25, Z+1	; 0x01
    14a6:	01 97       	sbiw	r24, 0x01	; 1
    14a8:	f1 f7       	brne	.-4      	; 0x14a6 <__stack+0xc47>
    14aa:	fe 01       	movw	r30, r28
    14ac:	eb 5a       	subi	r30, 0xAB	; 171
    14ae:	ff 4f       	sbci	r31, 0xFF	; 255
    14b0:	91 83       	std	Z+1, r25	; 0x01
    14b2:	80 83       	st	Z, r24
	_delay_ms(DELAY_DURATION);
	led_Toggle(LED_6);
    14b4:	85 e0       	ldi	r24, 0x05	; 5
    14b6:	90 e0       	ldi	r25, 0x00	; 0
    14b8:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <led_Toggle>
    14bc:	fe 01       	movw	r30, r28
    14be:	ef 5a       	subi	r30, 0xAF	; 175
    14c0:	ff 4f       	sbci	r31, 0xFF	; 255
    14c2:	80 e0       	ldi	r24, 0x00	; 0
    14c4:	90 e0       	ldi	r25, 0x00	; 0
    14c6:	a8 e4       	ldi	r26, 0x48	; 72
    14c8:	b3 e4       	ldi	r27, 0x43	; 67
    14ca:	80 83       	st	Z, r24
    14cc:	91 83       	std	Z+1, r25	; 0x01
    14ce:	a2 83       	std	Z+2, r26	; 0x02
    14d0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    14d2:	8e 01       	movw	r16, r28
    14d4:	03 5b       	subi	r16, 0xB3	; 179
    14d6:	1f 4f       	sbci	r17, 0xFF	; 255
    14d8:	fe 01       	movw	r30, r28
    14da:	ef 5a       	subi	r30, 0xAF	; 175
    14dc:	ff 4f       	sbci	r31, 0xFF	; 255
    14de:	60 81       	ld	r22, Z
    14e0:	71 81       	ldd	r23, Z+1	; 0x01
    14e2:	82 81       	ldd	r24, Z+2	; 0x02
    14e4:	93 81       	ldd	r25, Z+3	; 0x03
    14e6:	20 e0       	ldi	r18, 0x00	; 0
    14e8:	30 e0       	ldi	r19, 0x00	; 0
    14ea:	4a e7       	ldi	r20, 0x7A	; 122
    14ec:	55 e4       	ldi	r21, 0x45	; 69
    14ee:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
    14f2:	dc 01       	movw	r26, r24
    14f4:	cb 01       	movw	r24, r22
    14f6:	f8 01       	movw	r30, r16
    14f8:	80 83       	st	Z, r24
    14fa:	91 83       	std	Z+1, r25	; 0x01
    14fc:	a2 83       	std	Z+2, r26	; 0x02
    14fe:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1500:	fe 01       	movw	r30, r28
    1502:	e3 5b       	subi	r30, 0xB3	; 179
    1504:	ff 4f       	sbci	r31, 0xFF	; 255
    1506:	60 81       	ld	r22, Z
    1508:	71 81       	ldd	r23, Z+1	; 0x01
    150a:	82 81       	ldd	r24, Z+2	; 0x02
    150c:	93 81       	ldd	r25, Z+3	; 0x03
    150e:	20 e0       	ldi	r18, 0x00	; 0
    1510:	30 e0       	ldi	r19, 0x00	; 0
    1512:	40 e8       	ldi	r20, 0x80	; 128
    1514:	5f e3       	ldi	r21, 0x3F	; 63
    1516:	0e 94 dd 14 	call	0x29ba	; 0x29ba <__ltsf2>
    151a:	88 23       	and	r24, r24
    151c:	44 f4       	brge	.+16     	; 0x152e <__stack+0xccf>
		__ticks = 1;
    151e:	fe 01       	movw	r30, r28
    1520:	e5 5b       	subi	r30, 0xB5	; 181
    1522:	ff 4f       	sbci	r31, 0xFF	; 255
    1524:	81 e0       	ldi	r24, 0x01	; 1
    1526:	90 e0       	ldi	r25, 0x00	; 0
    1528:	91 83       	std	Z+1, r25	; 0x01
    152a:	80 83       	st	Z, r24
    152c:	64 c0       	rjmp	.+200    	; 0x15f6 <__stack+0xd97>
	else if (__tmp > 65535)
    152e:	fe 01       	movw	r30, r28
    1530:	e3 5b       	subi	r30, 0xB3	; 179
    1532:	ff 4f       	sbci	r31, 0xFF	; 255
    1534:	60 81       	ld	r22, Z
    1536:	71 81       	ldd	r23, Z+1	; 0x01
    1538:	82 81       	ldd	r24, Z+2	; 0x02
    153a:	93 81       	ldd	r25, Z+3	; 0x03
    153c:	20 e0       	ldi	r18, 0x00	; 0
    153e:	3f ef       	ldi	r19, 0xFF	; 255
    1540:	4f e7       	ldi	r20, 0x7F	; 127
    1542:	57 e4       	ldi	r21, 0x47	; 71
    1544:	0e 94 7d 14 	call	0x28fa	; 0x28fa <__gtsf2>
    1548:	18 16       	cp	r1, r24
    154a:	0c f0       	brlt	.+2      	; 0x154e <__stack+0xcef>
    154c:	43 c0       	rjmp	.+134    	; 0x15d4 <__stack+0xd75>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    154e:	fe 01       	movw	r30, r28
    1550:	ef 5a       	subi	r30, 0xAF	; 175
    1552:	ff 4f       	sbci	r31, 0xFF	; 255
    1554:	60 81       	ld	r22, Z
    1556:	71 81       	ldd	r23, Z+1	; 0x01
    1558:	82 81       	ldd	r24, Z+2	; 0x02
    155a:	93 81       	ldd	r25, Z+3	; 0x03
    155c:	20 e0       	ldi	r18, 0x00	; 0
    155e:	30 e0       	ldi	r19, 0x00	; 0
    1560:	40 e2       	ldi	r20, 0x20	; 32
    1562:	51 e4       	ldi	r21, 0x41	; 65
    1564:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
    1568:	dc 01       	movw	r26, r24
    156a:	cb 01       	movw	r24, r22
    156c:	8e 01       	movw	r16, r28
    156e:	05 5b       	subi	r16, 0xB5	; 181
    1570:	1f 4f       	sbci	r17, 0xFF	; 255
    1572:	bc 01       	movw	r22, r24
    1574:	cd 01       	movw	r24, r26
    1576:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
    157a:	dc 01       	movw	r26, r24
    157c:	cb 01       	movw	r24, r22
    157e:	f8 01       	movw	r30, r16
    1580:	91 83       	std	Z+1, r25	; 0x01
    1582:	80 83       	st	Z, r24
    1584:	1f c0       	rjmp	.+62     	; 0x15c4 <__stack+0xd65>
    1586:	fe 01       	movw	r30, r28
    1588:	e7 5b       	subi	r30, 0xB7	; 183
    158a:	ff 4f       	sbci	r31, 0xFF	; 255
    158c:	80 e9       	ldi	r24, 0x90	; 144
    158e:	91 e0       	ldi	r25, 0x01	; 1
    1590:	91 83       	std	Z+1, r25	; 0x01
    1592:	80 83       	st	Z, r24
    1594:	fe 01       	movw	r30, r28
    1596:	e7 5b       	subi	r30, 0xB7	; 183
    1598:	ff 4f       	sbci	r31, 0xFF	; 255
    159a:	80 81       	ld	r24, Z
    159c:	91 81       	ldd	r25, Z+1	; 0x01
    159e:	01 97       	sbiw	r24, 0x01	; 1
    15a0:	f1 f7       	brne	.-4      	; 0x159e <__stack+0xd3f>
    15a2:	fe 01       	movw	r30, r28
    15a4:	e7 5b       	subi	r30, 0xB7	; 183
    15a6:	ff 4f       	sbci	r31, 0xFF	; 255
    15a8:	91 83       	std	Z+1, r25	; 0x01
    15aa:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15ac:	de 01       	movw	r26, r28
    15ae:	a5 5b       	subi	r26, 0xB5	; 181
    15b0:	bf 4f       	sbci	r27, 0xFF	; 255
    15b2:	fe 01       	movw	r30, r28
    15b4:	e5 5b       	subi	r30, 0xB5	; 181
    15b6:	ff 4f       	sbci	r31, 0xFF	; 255
    15b8:	80 81       	ld	r24, Z
    15ba:	91 81       	ldd	r25, Z+1	; 0x01
    15bc:	01 97       	sbiw	r24, 0x01	; 1
    15be:	11 96       	adiw	r26, 0x01	; 1
    15c0:	9c 93       	st	X, r25
    15c2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    15c4:	fe 01       	movw	r30, r28
    15c6:	e5 5b       	subi	r30, 0xB5	; 181
    15c8:	ff 4f       	sbci	r31, 0xFF	; 255
    15ca:	80 81       	ld	r24, Z
    15cc:	91 81       	ldd	r25, Z+1	; 0x01
    15ce:	00 97       	sbiw	r24, 0x00	; 0
    15d0:	d1 f6       	brne	.-76     	; 0x1586 <__stack+0xd27>
    15d2:	27 c0       	rjmp	.+78     	; 0x1622 <__stack+0xdc3>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    15d4:	8e 01       	movw	r16, r28
    15d6:	05 5b       	subi	r16, 0xB5	; 181
    15d8:	1f 4f       	sbci	r17, 0xFF	; 255
    15da:	fe 01       	movw	r30, r28
    15dc:	e3 5b       	subi	r30, 0xB3	; 179
    15de:	ff 4f       	sbci	r31, 0xFF	; 255
    15e0:	60 81       	ld	r22, Z
    15e2:	71 81       	ldd	r23, Z+1	; 0x01
    15e4:	82 81       	ldd	r24, Z+2	; 0x02
    15e6:	93 81       	ldd	r25, Z+3	; 0x03
    15e8:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
    15ec:	dc 01       	movw	r26, r24
    15ee:	cb 01       	movw	r24, r22
    15f0:	f8 01       	movw	r30, r16
    15f2:	91 83       	std	Z+1, r25	; 0x01
    15f4:	80 83       	st	Z, r24
    15f6:	de 01       	movw	r26, r28
    15f8:	a9 5b       	subi	r26, 0xB9	; 185
    15fa:	bf 4f       	sbci	r27, 0xFF	; 255
    15fc:	fe 01       	movw	r30, r28
    15fe:	e5 5b       	subi	r30, 0xB5	; 181
    1600:	ff 4f       	sbci	r31, 0xFF	; 255
    1602:	80 81       	ld	r24, Z
    1604:	91 81       	ldd	r25, Z+1	; 0x01
    1606:	8d 93       	st	X+, r24
    1608:	9c 93       	st	X, r25
    160a:	fe 01       	movw	r30, r28
    160c:	e9 5b       	subi	r30, 0xB9	; 185
    160e:	ff 4f       	sbci	r31, 0xFF	; 255
    1610:	80 81       	ld	r24, Z
    1612:	91 81       	ldd	r25, Z+1	; 0x01
    1614:	01 97       	sbiw	r24, 0x01	; 1
    1616:	f1 f7       	brne	.-4      	; 0x1614 <__stack+0xdb5>
    1618:	fe 01       	movw	r30, r28
    161a:	e9 5b       	subi	r30, 0xB9	; 185
    161c:	ff 4f       	sbci	r31, 0xFF	; 255
    161e:	91 83       	std	Z+1, r25	; 0x01
    1620:	80 83       	st	Z, r24
	_delay_ms(DELAY_DURATION);
	led_Toggle(LED_5);
    1622:	84 e0       	ldi	r24, 0x04	; 4
    1624:	90 e0       	ldi	r25, 0x00	; 0
    1626:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <led_Toggle>
    162a:	fe 01       	movw	r30, r28
    162c:	ed 5b       	subi	r30, 0xBD	; 189
    162e:	ff 4f       	sbci	r31, 0xFF	; 255
    1630:	80 e0       	ldi	r24, 0x00	; 0
    1632:	90 e0       	ldi	r25, 0x00	; 0
    1634:	a8 e4       	ldi	r26, 0x48	; 72
    1636:	b3 e4       	ldi	r27, 0x43	; 67
    1638:	80 83       	st	Z, r24
    163a:	91 83       	std	Z+1, r25	; 0x01
    163c:	a2 83       	std	Z+2, r26	; 0x02
    163e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1640:	8e 01       	movw	r16, r28
    1642:	01 5c       	subi	r16, 0xC1	; 193
    1644:	1f 4f       	sbci	r17, 0xFF	; 255
    1646:	fe 01       	movw	r30, r28
    1648:	ed 5b       	subi	r30, 0xBD	; 189
    164a:	ff 4f       	sbci	r31, 0xFF	; 255
    164c:	60 81       	ld	r22, Z
    164e:	71 81       	ldd	r23, Z+1	; 0x01
    1650:	82 81       	ldd	r24, Z+2	; 0x02
    1652:	93 81       	ldd	r25, Z+3	; 0x03
    1654:	20 e0       	ldi	r18, 0x00	; 0
    1656:	30 e0       	ldi	r19, 0x00	; 0
    1658:	4a e7       	ldi	r20, 0x7A	; 122
    165a:	55 e4       	ldi	r21, 0x45	; 69
    165c:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
    1660:	dc 01       	movw	r26, r24
    1662:	cb 01       	movw	r24, r22
    1664:	f8 01       	movw	r30, r16
    1666:	80 83       	st	Z, r24
    1668:	91 83       	std	Z+1, r25	; 0x01
    166a:	a2 83       	std	Z+2, r26	; 0x02
    166c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    166e:	fe 01       	movw	r30, r28
    1670:	ff 96       	adiw	r30, 0x3f	; 63
    1672:	60 81       	ld	r22, Z
    1674:	71 81       	ldd	r23, Z+1	; 0x01
    1676:	82 81       	ldd	r24, Z+2	; 0x02
    1678:	93 81       	ldd	r25, Z+3	; 0x03
    167a:	20 e0       	ldi	r18, 0x00	; 0
    167c:	30 e0       	ldi	r19, 0x00	; 0
    167e:	40 e8       	ldi	r20, 0x80	; 128
    1680:	5f e3       	ldi	r21, 0x3F	; 63
    1682:	0e 94 dd 14 	call	0x29ba	; 0x29ba <__ltsf2>
    1686:	88 23       	and	r24, r24
    1688:	2c f4       	brge	.+10     	; 0x1694 <__stack+0xe35>
		__ticks = 1;
    168a:	81 e0       	ldi	r24, 0x01	; 1
    168c:	90 e0       	ldi	r25, 0x00	; 0
    168e:	9e af       	std	Y+62, r25	; 0x3e
    1690:	8d af       	std	Y+61, r24	; 0x3d
    1692:	46 c0       	rjmp	.+140    	; 0x1720 <__stack+0xec1>
	else if (__tmp > 65535)
    1694:	fe 01       	movw	r30, r28
    1696:	ff 96       	adiw	r30, 0x3f	; 63
    1698:	60 81       	ld	r22, Z
    169a:	71 81       	ldd	r23, Z+1	; 0x01
    169c:	82 81       	ldd	r24, Z+2	; 0x02
    169e:	93 81       	ldd	r25, Z+3	; 0x03
    16a0:	20 e0       	ldi	r18, 0x00	; 0
    16a2:	3f ef       	ldi	r19, 0xFF	; 255
    16a4:	4f e7       	ldi	r20, 0x7F	; 127
    16a6:	57 e4       	ldi	r21, 0x47	; 71
    16a8:	0e 94 7d 14 	call	0x28fa	; 0x28fa <__gtsf2>
    16ac:	18 16       	cp	r1, r24
    16ae:	64 f5       	brge	.+88     	; 0x1708 <__stack+0xea9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16b0:	fe 01       	movw	r30, r28
    16b2:	ed 5b       	subi	r30, 0xBD	; 189
    16b4:	ff 4f       	sbci	r31, 0xFF	; 255
    16b6:	60 81       	ld	r22, Z
    16b8:	71 81       	ldd	r23, Z+1	; 0x01
    16ba:	82 81       	ldd	r24, Z+2	; 0x02
    16bc:	93 81       	ldd	r25, Z+3	; 0x03
    16be:	20 e0       	ldi	r18, 0x00	; 0
    16c0:	30 e0       	ldi	r19, 0x00	; 0
    16c2:	40 e2       	ldi	r20, 0x20	; 32
    16c4:	51 e4       	ldi	r21, 0x41	; 65
    16c6:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
    16ca:	dc 01       	movw	r26, r24
    16cc:	cb 01       	movw	r24, r22
    16ce:	bc 01       	movw	r22, r24
    16d0:	cd 01       	movw	r24, r26
    16d2:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
    16d6:	dc 01       	movw	r26, r24
    16d8:	cb 01       	movw	r24, r22
    16da:	9e af       	std	Y+62, r25	; 0x3e
    16dc:	8d af       	std	Y+61, r24	; 0x3d
    16de:	0f c0       	rjmp	.+30     	; 0x16fe <__stack+0xe9f>
    16e0:	80 e9       	ldi	r24, 0x90	; 144
    16e2:	91 e0       	ldi	r25, 0x01	; 1
    16e4:	9c af       	std	Y+60, r25	; 0x3c
    16e6:	8b af       	std	Y+59, r24	; 0x3b
    16e8:	8b ad       	ldd	r24, Y+59	; 0x3b
    16ea:	9c ad       	ldd	r25, Y+60	; 0x3c
    16ec:	01 97       	sbiw	r24, 0x01	; 1
    16ee:	f1 f7       	brne	.-4      	; 0x16ec <__stack+0xe8d>
    16f0:	9c af       	std	Y+60, r25	; 0x3c
    16f2:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    16f4:	8d ad       	ldd	r24, Y+61	; 0x3d
    16f6:	9e ad       	ldd	r25, Y+62	; 0x3e
    16f8:	01 97       	sbiw	r24, 0x01	; 1
    16fa:	9e af       	std	Y+62, r25	; 0x3e
    16fc:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    16fe:	8d ad       	ldd	r24, Y+61	; 0x3d
    1700:	9e ad       	ldd	r25, Y+62	; 0x3e
    1702:	00 97       	sbiw	r24, 0x00	; 0
    1704:	69 f7       	brne	.-38     	; 0x16e0 <__stack+0xe81>
    1706:	16 c0       	rjmp	.+44     	; 0x1734 <__stack+0xed5>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1708:	fe 01       	movw	r30, r28
    170a:	ff 96       	adiw	r30, 0x3f	; 63
    170c:	60 81       	ld	r22, Z
    170e:	71 81       	ldd	r23, Z+1	; 0x01
    1710:	82 81       	ldd	r24, Z+2	; 0x02
    1712:	93 81       	ldd	r25, Z+3	; 0x03
    1714:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
    1718:	dc 01       	movw	r26, r24
    171a:	cb 01       	movw	r24, r22
    171c:	9e af       	std	Y+62, r25	; 0x3e
    171e:	8d af       	std	Y+61, r24	; 0x3d
    1720:	8d ad       	ldd	r24, Y+61	; 0x3d
    1722:	9e ad       	ldd	r25, Y+62	; 0x3e
    1724:	9a af       	std	Y+58, r25	; 0x3a
    1726:	89 af       	std	Y+57, r24	; 0x39
    1728:	89 ad       	ldd	r24, Y+57	; 0x39
    172a:	9a ad       	ldd	r25, Y+58	; 0x3a
    172c:	01 97       	sbiw	r24, 0x01	; 1
    172e:	f1 f7       	brne	.-4      	; 0x172c <__stack+0xecd>
    1730:	9a af       	std	Y+58, r25	; 0x3a
    1732:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(DELAY_DURATION);
	led_Toggle(LED_4);
    1734:	83 e0       	ldi	r24, 0x03	; 3
    1736:	90 e0       	ldi	r25, 0x00	; 0
    1738:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <led_Toggle>
    173c:	80 e0       	ldi	r24, 0x00	; 0
    173e:	90 e0       	ldi	r25, 0x00	; 0
    1740:	a8 e4       	ldi	r26, 0x48	; 72
    1742:	b3 e4       	ldi	r27, 0x43	; 67
    1744:	8d ab       	std	Y+53, r24	; 0x35
    1746:	9e ab       	std	Y+54, r25	; 0x36
    1748:	af ab       	std	Y+55, r26	; 0x37
    174a:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    174c:	6d a9       	ldd	r22, Y+53	; 0x35
    174e:	7e a9       	ldd	r23, Y+54	; 0x36
    1750:	8f a9       	ldd	r24, Y+55	; 0x37
    1752:	98 ad       	ldd	r25, Y+56	; 0x38
    1754:	20 e0       	ldi	r18, 0x00	; 0
    1756:	30 e0       	ldi	r19, 0x00	; 0
    1758:	4a e7       	ldi	r20, 0x7A	; 122
    175a:	55 e4       	ldi	r21, 0x45	; 69
    175c:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
    1760:	dc 01       	movw	r26, r24
    1762:	cb 01       	movw	r24, r22
    1764:	89 ab       	std	Y+49, r24	; 0x31
    1766:	9a ab       	std	Y+50, r25	; 0x32
    1768:	ab ab       	std	Y+51, r26	; 0x33
    176a:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    176c:	69 a9       	ldd	r22, Y+49	; 0x31
    176e:	7a a9       	ldd	r23, Y+50	; 0x32
    1770:	8b a9       	ldd	r24, Y+51	; 0x33
    1772:	9c a9       	ldd	r25, Y+52	; 0x34
    1774:	20 e0       	ldi	r18, 0x00	; 0
    1776:	30 e0       	ldi	r19, 0x00	; 0
    1778:	40 e8       	ldi	r20, 0x80	; 128
    177a:	5f e3       	ldi	r21, 0x3F	; 63
    177c:	0e 94 dd 14 	call	0x29ba	; 0x29ba <__ltsf2>
    1780:	88 23       	and	r24, r24
    1782:	2c f4       	brge	.+10     	; 0x178e <__stack+0xf2f>
		__ticks = 1;
    1784:	81 e0       	ldi	r24, 0x01	; 1
    1786:	90 e0       	ldi	r25, 0x00	; 0
    1788:	98 ab       	std	Y+48, r25	; 0x30
    178a:	8f a7       	std	Y+47, r24	; 0x2f
    178c:	3f c0       	rjmp	.+126    	; 0x180c <__stack+0xfad>
	else if (__tmp > 65535)
    178e:	69 a9       	ldd	r22, Y+49	; 0x31
    1790:	7a a9       	ldd	r23, Y+50	; 0x32
    1792:	8b a9       	ldd	r24, Y+51	; 0x33
    1794:	9c a9       	ldd	r25, Y+52	; 0x34
    1796:	20 e0       	ldi	r18, 0x00	; 0
    1798:	3f ef       	ldi	r19, 0xFF	; 255
    179a:	4f e7       	ldi	r20, 0x7F	; 127
    179c:	57 e4       	ldi	r21, 0x47	; 71
    179e:	0e 94 7d 14 	call	0x28fa	; 0x28fa <__gtsf2>
    17a2:	18 16       	cp	r1, r24
    17a4:	4c f5       	brge	.+82     	; 0x17f8 <__stack+0xf99>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    17a6:	6d a9       	ldd	r22, Y+53	; 0x35
    17a8:	7e a9       	ldd	r23, Y+54	; 0x36
    17aa:	8f a9       	ldd	r24, Y+55	; 0x37
    17ac:	98 ad       	ldd	r25, Y+56	; 0x38
    17ae:	20 e0       	ldi	r18, 0x00	; 0
    17b0:	30 e0       	ldi	r19, 0x00	; 0
    17b2:	40 e2       	ldi	r20, 0x20	; 32
    17b4:	51 e4       	ldi	r21, 0x41	; 65
    17b6:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
    17ba:	dc 01       	movw	r26, r24
    17bc:	cb 01       	movw	r24, r22
    17be:	bc 01       	movw	r22, r24
    17c0:	cd 01       	movw	r24, r26
    17c2:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
    17c6:	dc 01       	movw	r26, r24
    17c8:	cb 01       	movw	r24, r22
    17ca:	98 ab       	std	Y+48, r25	; 0x30
    17cc:	8f a7       	std	Y+47, r24	; 0x2f
    17ce:	0f c0       	rjmp	.+30     	; 0x17ee <__stack+0xf8f>
    17d0:	80 e9       	ldi	r24, 0x90	; 144
    17d2:	91 e0       	ldi	r25, 0x01	; 1
    17d4:	9e a7       	std	Y+46, r25	; 0x2e
    17d6:	8d a7       	std	Y+45, r24	; 0x2d
    17d8:	8d a5       	ldd	r24, Y+45	; 0x2d
    17da:	9e a5       	ldd	r25, Y+46	; 0x2e
    17dc:	01 97       	sbiw	r24, 0x01	; 1
    17de:	f1 f7       	brne	.-4      	; 0x17dc <__stack+0xf7d>
    17e0:	9e a7       	std	Y+46, r25	; 0x2e
    17e2:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    17e4:	8f a5       	ldd	r24, Y+47	; 0x2f
    17e6:	98 a9       	ldd	r25, Y+48	; 0x30
    17e8:	01 97       	sbiw	r24, 0x01	; 1
    17ea:	98 ab       	std	Y+48, r25	; 0x30
    17ec:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    17ee:	8f a5       	ldd	r24, Y+47	; 0x2f
    17f0:	98 a9       	ldd	r25, Y+48	; 0x30
    17f2:	00 97       	sbiw	r24, 0x00	; 0
    17f4:	69 f7       	brne	.-38     	; 0x17d0 <__stack+0xf71>
    17f6:	14 c0       	rjmp	.+40     	; 0x1820 <__stack+0xfc1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    17f8:	69 a9       	ldd	r22, Y+49	; 0x31
    17fa:	7a a9       	ldd	r23, Y+50	; 0x32
    17fc:	8b a9       	ldd	r24, Y+51	; 0x33
    17fe:	9c a9       	ldd	r25, Y+52	; 0x34
    1800:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
    1804:	dc 01       	movw	r26, r24
    1806:	cb 01       	movw	r24, r22
    1808:	98 ab       	std	Y+48, r25	; 0x30
    180a:	8f a7       	std	Y+47, r24	; 0x2f
    180c:	8f a5       	ldd	r24, Y+47	; 0x2f
    180e:	98 a9       	ldd	r25, Y+48	; 0x30
    1810:	9c a7       	std	Y+44, r25	; 0x2c
    1812:	8b a7       	std	Y+43, r24	; 0x2b
    1814:	8b a5       	ldd	r24, Y+43	; 0x2b
    1816:	9c a5       	ldd	r25, Y+44	; 0x2c
    1818:	01 97       	sbiw	r24, 0x01	; 1
    181a:	f1 f7       	brne	.-4      	; 0x1818 <__stack+0xfb9>
    181c:	9c a7       	std	Y+44, r25	; 0x2c
    181e:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(DELAY_DURATION);
	led_Toggle(LED_3);
    1820:	82 e0       	ldi	r24, 0x02	; 2
    1822:	90 e0       	ldi	r25, 0x00	; 0
    1824:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <led_Toggle>
    1828:	80 e0       	ldi	r24, 0x00	; 0
    182a:	90 e0       	ldi	r25, 0x00	; 0
    182c:	a8 e4       	ldi	r26, 0x48	; 72
    182e:	b3 e4       	ldi	r27, 0x43	; 67
    1830:	8f a3       	std	Y+39, r24	; 0x27
    1832:	98 a7       	std	Y+40, r25	; 0x28
    1834:	a9 a7       	std	Y+41, r26	; 0x29
    1836:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1838:	6f a1       	ldd	r22, Y+39	; 0x27
    183a:	78 a5       	ldd	r23, Y+40	; 0x28
    183c:	89 a5       	ldd	r24, Y+41	; 0x29
    183e:	9a a5       	ldd	r25, Y+42	; 0x2a
    1840:	20 e0       	ldi	r18, 0x00	; 0
    1842:	30 e0       	ldi	r19, 0x00	; 0
    1844:	4a e7       	ldi	r20, 0x7A	; 122
    1846:	55 e4       	ldi	r21, 0x45	; 69
    1848:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
    184c:	dc 01       	movw	r26, r24
    184e:	cb 01       	movw	r24, r22
    1850:	8b a3       	std	Y+35, r24	; 0x23
    1852:	9c a3       	std	Y+36, r25	; 0x24
    1854:	ad a3       	std	Y+37, r26	; 0x25
    1856:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1858:	6b a1       	ldd	r22, Y+35	; 0x23
    185a:	7c a1       	ldd	r23, Y+36	; 0x24
    185c:	8d a1       	ldd	r24, Y+37	; 0x25
    185e:	9e a1       	ldd	r25, Y+38	; 0x26
    1860:	20 e0       	ldi	r18, 0x00	; 0
    1862:	30 e0       	ldi	r19, 0x00	; 0
    1864:	40 e8       	ldi	r20, 0x80	; 128
    1866:	5f e3       	ldi	r21, 0x3F	; 63
    1868:	0e 94 dd 14 	call	0x29ba	; 0x29ba <__ltsf2>
    186c:	88 23       	and	r24, r24
    186e:	2c f4       	brge	.+10     	; 0x187a <__stack+0x101b>
		__ticks = 1;
    1870:	81 e0       	ldi	r24, 0x01	; 1
    1872:	90 e0       	ldi	r25, 0x00	; 0
    1874:	9a a3       	std	Y+34, r25	; 0x22
    1876:	89 a3       	std	Y+33, r24	; 0x21
    1878:	3f c0       	rjmp	.+126    	; 0x18f8 <__stack+0x1099>
	else if (__tmp > 65535)
    187a:	6b a1       	ldd	r22, Y+35	; 0x23
    187c:	7c a1       	ldd	r23, Y+36	; 0x24
    187e:	8d a1       	ldd	r24, Y+37	; 0x25
    1880:	9e a1       	ldd	r25, Y+38	; 0x26
    1882:	20 e0       	ldi	r18, 0x00	; 0
    1884:	3f ef       	ldi	r19, 0xFF	; 255
    1886:	4f e7       	ldi	r20, 0x7F	; 127
    1888:	57 e4       	ldi	r21, 0x47	; 71
    188a:	0e 94 7d 14 	call	0x28fa	; 0x28fa <__gtsf2>
    188e:	18 16       	cp	r1, r24
    1890:	4c f5       	brge	.+82     	; 0x18e4 <__stack+0x1085>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1892:	6f a1       	ldd	r22, Y+39	; 0x27
    1894:	78 a5       	ldd	r23, Y+40	; 0x28
    1896:	89 a5       	ldd	r24, Y+41	; 0x29
    1898:	9a a5       	ldd	r25, Y+42	; 0x2a
    189a:	20 e0       	ldi	r18, 0x00	; 0
    189c:	30 e0       	ldi	r19, 0x00	; 0
    189e:	40 e2       	ldi	r20, 0x20	; 32
    18a0:	51 e4       	ldi	r21, 0x41	; 65
    18a2:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
    18a6:	dc 01       	movw	r26, r24
    18a8:	cb 01       	movw	r24, r22
    18aa:	bc 01       	movw	r22, r24
    18ac:	cd 01       	movw	r24, r26
    18ae:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
    18b2:	dc 01       	movw	r26, r24
    18b4:	cb 01       	movw	r24, r22
    18b6:	9a a3       	std	Y+34, r25	; 0x22
    18b8:	89 a3       	std	Y+33, r24	; 0x21
    18ba:	0f c0       	rjmp	.+30     	; 0x18da <__stack+0x107b>
    18bc:	80 e9       	ldi	r24, 0x90	; 144
    18be:	91 e0       	ldi	r25, 0x01	; 1
    18c0:	98 a3       	std	Y+32, r25	; 0x20
    18c2:	8f 8f       	std	Y+31, r24	; 0x1f
    18c4:	8f 8d       	ldd	r24, Y+31	; 0x1f
    18c6:	98 a1       	ldd	r25, Y+32	; 0x20
    18c8:	01 97       	sbiw	r24, 0x01	; 1
    18ca:	f1 f7       	brne	.-4      	; 0x18c8 <__stack+0x1069>
    18cc:	98 a3       	std	Y+32, r25	; 0x20
    18ce:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    18d0:	89 a1       	ldd	r24, Y+33	; 0x21
    18d2:	9a a1       	ldd	r25, Y+34	; 0x22
    18d4:	01 97       	sbiw	r24, 0x01	; 1
    18d6:	9a a3       	std	Y+34, r25	; 0x22
    18d8:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    18da:	89 a1       	ldd	r24, Y+33	; 0x21
    18dc:	9a a1       	ldd	r25, Y+34	; 0x22
    18de:	00 97       	sbiw	r24, 0x00	; 0
    18e0:	69 f7       	brne	.-38     	; 0x18bc <__stack+0x105d>
    18e2:	14 c0       	rjmp	.+40     	; 0x190c <__stack+0x10ad>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    18e4:	6b a1       	ldd	r22, Y+35	; 0x23
    18e6:	7c a1       	ldd	r23, Y+36	; 0x24
    18e8:	8d a1       	ldd	r24, Y+37	; 0x25
    18ea:	9e a1       	ldd	r25, Y+38	; 0x26
    18ec:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
    18f0:	dc 01       	movw	r26, r24
    18f2:	cb 01       	movw	r24, r22
    18f4:	9a a3       	std	Y+34, r25	; 0x22
    18f6:	89 a3       	std	Y+33, r24	; 0x21
    18f8:	89 a1       	ldd	r24, Y+33	; 0x21
    18fa:	9a a1       	ldd	r25, Y+34	; 0x22
    18fc:	9e 8f       	std	Y+30, r25	; 0x1e
    18fe:	8d 8f       	std	Y+29, r24	; 0x1d
    1900:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1902:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1904:	01 97       	sbiw	r24, 0x01	; 1
    1906:	f1 f7       	brne	.-4      	; 0x1904 <__stack+0x10a5>
    1908:	9e 8f       	std	Y+30, r25	; 0x1e
    190a:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(DELAY_DURATION);
	led_Toggle(LED_2);
    190c:	81 e0       	ldi	r24, 0x01	; 1
    190e:	90 e0       	ldi	r25, 0x00	; 0
    1910:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <led_Toggle>
    1914:	80 e0       	ldi	r24, 0x00	; 0
    1916:	90 e0       	ldi	r25, 0x00	; 0
    1918:	a8 e4       	ldi	r26, 0x48	; 72
    191a:	b3 e4       	ldi	r27, 0x43	; 67
    191c:	89 8f       	std	Y+25, r24	; 0x19
    191e:	9a 8f       	std	Y+26, r25	; 0x1a
    1920:	ab 8f       	std	Y+27, r26	; 0x1b
    1922:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1924:	69 8d       	ldd	r22, Y+25	; 0x19
    1926:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1928:	8b 8d       	ldd	r24, Y+27	; 0x1b
    192a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    192c:	20 e0       	ldi	r18, 0x00	; 0
    192e:	30 e0       	ldi	r19, 0x00	; 0
    1930:	4a e7       	ldi	r20, 0x7A	; 122
    1932:	55 e4       	ldi	r21, 0x45	; 69
    1934:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
    1938:	dc 01       	movw	r26, r24
    193a:	cb 01       	movw	r24, r22
    193c:	8d 8b       	std	Y+21, r24	; 0x15
    193e:	9e 8b       	std	Y+22, r25	; 0x16
    1940:	af 8b       	std	Y+23, r26	; 0x17
    1942:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1944:	6d 89       	ldd	r22, Y+21	; 0x15
    1946:	7e 89       	ldd	r23, Y+22	; 0x16
    1948:	8f 89       	ldd	r24, Y+23	; 0x17
    194a:	98 8d       	ldd	r25, Y+24	; 0x18
    194c:	20 e0       	ldi	r18, 0x00	; 0
    194e:	30 e0       	ldi	r19, 0x00	; 0
    1950:	40 e8       	ldi	r20, 0x80	; 128
    1952:	5f e3       	ldi	r21, 0x3F	; 63
    1954:	0e 94 dd 14 	call	0x29ba	; 0x29ba <__ltsf2>
    1958:	88 23       	and	r24, r24
    195a:	2c f4       	brge	.+10     	; 0x1966 <__stack+0x1107>
		__ticks = 1;
    195c:	81 e0       	ldi	r24, 0x01	; 1
    195e:	90 e0       	ldi	r25, 0x00	; 0
    1960:	9c 8b       	std	Y+20, r25	; 0x14
    1962:	8b 8b       	std	Y+19, r24	; 0x13
    1964:	3f c0       	rjmp	.+126    	; 0x19e4 <__stack+0x1185>
	else if (__tmp > 65535)
    1966:	6d 89       	ldd	r22, Y+21	; 0x15
    1968:	7e 89       	ldd	r23, Y+22	; 0x16
    196a:	8f 89       	ldd	r24, Y+23	; 0x17
    196c:	98 8d       	ldd	r25, Y+24	; 0x18
    196e:	20 e0       	ldi	r18, 0x00	; 0
    1970:	3f ef       	ldi	r19, 0xFF	; 255
    1972:	4f e7       	ldi	r20, 0x7F	; 127
    1974:	57 e4       	ldi	r21, 0x47	; 71
    1976:	0e 94 7d 14 	call	0x28fa	; 0x28fa <__gtsf2>
    197a:	18 16       	cp	r1, r24
    197c:	4c f5       	brge	.+82     	; 0x19d0 <__stack+0x1171>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    197e:	69 8d       	ldd	r22, Y+25	; 0x19
    1980:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1982:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1984:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1986:	20 e0       	ldi	r18, 0x00	; 0
    1988:	30 e0       	ldi	r19, 0x00	; 0
    198a:	40 e2       	ldi	r20, 0x20	; 32
    198c:	51 e4       	ldi	r21, 0x41	; 65
    198e:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
    1992:	dc 01       	movw	r26, r24
    1994:	cb 01       	movw	r24, r22
    1996:	bc 01       	movw	r22, r24
    1998:	cd 01       	movw	r24, r26
    199a:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
    199e:	dc 01       	movw	r26, r24
    19a0:	cb 01       	movw	r24, r22
    19a2:	9c 8b       	std	Y+20, r25	; 0x14
    19a4:	8b 8b       	std	Y+19, r24	; 0x13
    19a6:	0f c0       	rjmp	.+30     	; 0x19c6 <__stack+0x1167>
    19a8:	80 e9       	ldi	r24, 0x90	; 144
    19aa:	91 e0       	ldi	r25, 0x01	; 1
    19ac:	9a 8b       	std	Y+18, r25	; 0x12
    19ae:	89 8b       	std	Y+17, r24	; 0x11
    19b0:	89 89       	ldd	r24, Y+17	; 0x11
    19b2:	9a 89       	ldd	r25, Y+18	; 0x12
    19b4:	01 97       	sbiw	r24, 0x01	; 1
    19b6:	f1 f7       	brne	.-4      	; 0x19b4 <__stack+0x1155>
    19b8:	9a 8b       	std	Y+18, r25	; 0x12
    19ba:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19bc:	8b 89       	ldd	r24, Y+19	; 0x13
    19be:	9c 89       	ldd	r25, Y+20	; 0x14
    19c0:	01 97       	sbiw	r24, 0x01	; 1
    19c2:	9c 8b       	std	Y+20, r25	; 0x14
    19c4:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19c6:	8b 89       	ldd	r24, Y+19	; 0x13
    19c8:	9c 89       	ldd	r25, Y+20	; 0x14
    19ca:	00 97       	sbiw	r24, 0x00	; 0
    19cc:	69 f7       	brne	.-38     	; 0x19a8 <__stack+0x1149>
    19ce:	14 c0       	rjmp	.+40     	; 0x19f8 <__stack+0x1199>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    19d0:	6d 89       	ldd	r22, Y+21	; 0x15
    19d2:	7e 89       	ldd	r23, Y+22	; 0x16
    19d4:	8f 89       	ldd	r24, Y+23	; 0x17
    19d6:	98 8d       	ldd	r25, Y+24	; 0x18
    19d8:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
    19dc:	dc 01       	movw	r26, r24
    19de:	cb 01       	movw	r24, r22
    19e0:	9c 8b       	std	Y+20, r25	; 0x14
    19e2:	8b 8b       	std	Y+19, r24	; 0x13
    19e4:	8b 89       	ldd	r24, Y+19	; 0x13
    19e6:	9c 89       	ldd	r25, Y+20	; 0x14
    19e8:	98 8b       	std	Y+16, r25	; 0x10
    19ea:	8f 87       	std	Y+15, r24	; 0x0f
    19ec:	8f 85       	ldd	r24, Y+15	; 0x0f
    19ee:	98 89       	ldd	r25, Y+16	; 0x10
    19f0:	01 97       	sbiw	r24, 0x01	; 1
    19f2:	f1 f7       	brne	.-4      	; 0x19f0 <__stack+0x1191>
    19f4:	98 8b       	std	Y+16, r25	; 0x10
    19f6:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(DELAY_DURATION);
	led_Toggle(LED_1);
    19f8:	80 e0       	ldi	r24, 0x00	; 0
    19fa:	90 e0       	ldi	r25, 0x00	; 0
    19fc:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <led_Toggle>
    1a00:	80 e0       	ldi	r24, 0x00	; 0
    1a02:	90 e0       	ldi	r25, 0x00	; 0
    1a04:	a8 e4       	ldi	r26, 0x48	; 72
    1a06:	b3 e4       	ldi	r27, 0x43	; 67
    1a08:	8b 87       	std	Y+11, r24	; 0x0b
    1a0a:	9c 87       	std	Y+12, r25	; 0x0c
    1a0c:	ad 87       	std	Y+13, r26	; 0x0d
    1a0e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a10:	6b 85       	ldd	r22, Y+11	; 0x0b
    1a12:	7c 85       	ldd	r23, Y+12	; 0x0c
    1a14:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a16:	9e 85       	ldd	r25, Y+14	; 0x0e
    1a18:	20 e0       	ldi	r18, 0x00	; 0
    1a1a:	30 e0       	ldi	r19, 0x00	; 0
    1a1c:	4a e7       	ldi	r20, 0x7A	; 122
    1a1e:	55 e4       	ldi	r21, 0x45	; 69
    1a20:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
    1a24:	dc 01       	movw	r26, r24
    1a26:	cb 01       	movw	r24, r22
    1a28:	8f 83       	std	Y+7, r24	; 0x07
    1a2a:	98 87       	std	Y+8, r25	; 0x08
    1a2c:	a9 87       	std	Y+9, r26	; 0x09
    1a2e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1a30:	6f 81       	ldd	r22, Y+7	; 0x07
    1a32:	78 85       	ldd	r23, Y+8	; 0x08
    1a34:	89 85       	ldd	r24, Y+9	; 0x09
    1a36:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a38:	20 e0       	ldi	r18, 0x00	; 0
    1a3a:	30 e0       	ldi	r19, 0x00	; 0
    1a3c:	40 e8       	ldi	r20, 0x80	; 128
    1a3e:	5f e3       	ldi	r21, 0x3F	; 63
    1a40:	0e 94 dd 14 	call	0x29ba	; 0x29ba <__ltsf2>
    1a44:	88 23       	and	r24, r24
    1a46:	2c f4       	brge	.+10     	; 0x1a52 <__stack+0x11f3>
		__ticks = 1;
    1a48:	81 e0       	ldi	r24, 0x01	; 1
    1a4a:	90 e0       	ldi	r25, 0x00	; 0
    1a4c:	9e 83       	std	Y+6, r25	; 0x06
    1a4e:	8d 83       	std	Y+5, r24	; 0x05
    1a50:	3f c0       	rjmp	.+126    	; 0x1ad0 <__stack+0x1271>
	else if (__tmp > 65535)
    1a52:	6f 81       	ldd	r22, Y+7	; 0x07
    1a54:	78 85       	ldd	r23, Y+8	; 0x08
    1a56:	89 85       	ldd	r24, Y+9	; 0x09
    1a58:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a5a:	20 e0       	ldi	r18, 0x00	; 0
    1a5c:	3f ef       	ldi	r19, 0xFF	; 255
    1a5e:	4f e7       	ldi	r20, 0x7F	; 127
    1a60:	57 e4       	ldi	r21, 0x47	; 71
    1a62:	0e 94 7d 14 	call	0x28fa	; 0x28fa <__gtsf2>
    1a66:	18 16       	cp	r1, r24
    1a68:	4c f5       	brge	.+82     	; 0x1abc <__stack+0x125d>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a6a:	6b 85       	ldd	r22, Y+11	; 0x0b
    1a6c:	7c 85       	ldd	r23, Y+12	; 0x0c
    1a6e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a70:	9e 85       	ldd	r25, Y+14	; 0x0e
    1a72:	20 e0       	ldi	r18, 0x00	; 0
    1a74:	30 e0       	ldi	r19, 0x00	; 0
    1a76:	40 e2       	ldi	r20, 0x20	; 32
    1a78:	51 e4       	ldi	r21, 0x41	; 65
    1a7a:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
    1a7e:	dc 01       	movw	r26, r24
    1a80:	cb 01       	movw	r24, r22
    1a82:	bc 01       	movw	r22, r24
    1a84:	cd 01       	movw	r24, r26
    1a86:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
    1a8a:	dc 01       	movw	r26, r24
    1a8c:	cb 01       	movw	r24, r22
    1a8e:	9e 83       	std	Y+6, r25	; 0x06
    1a90:	8d 83       	std	Y+5, r24	; 0x05
    1a92:	0f c0       	rjmp	.+30     	; 0x1ab2 <__stack+0x1253>
    1a94:	80 e9       	ldi	r24, 0x90	; 144
    1a96:	91 e0       	ldi	r25, 0x01	; 1
    1a98:	9c 83       	std	Y+4, r25	; 0x04
    1a9a:	8b 83       	std	Y+3, r24	; 0x03
    1a9c:	8b 81       	ldd	r24, Y+3	; 0x03
    1a9e:	9c 81       	ldd	r25, Y+4	; 0x04
    1aa0:	01 97       	sbiw	r24, 0x01	; 1
    1aa2:	f1 f7       	brne	.-4      	; 0x1aa0 <__stack+0x1241>
    1aa4:	9c 83       	std	Y+4, r25	; 0x04
    1aa6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1aa8:	8d 81       	ldd	r24, Y+5	; 0x05
    1aaa:	9e 81       	ldd	r25, Y+6	; 0x06
    1aac:	01 97       	sbiw	r24, 0x01	; 1
    1aae:	9e 83       	std	Y+6, r25	; 0x06
    1ab0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ab2:	8d 81       	ldd	r24, Y+5	; 0x05
    1ab4:	9e 81       	ldd	r25, Y+6	; 0x06
    1ab6:	00 97       	sbiw	r24, 0x00	; 0
    1ab8:	69 f7       	brne	.-38     	; 0x1a94 <__stack+0x1235>
    1aba:	14 c0       	rjmp	.+40     	; 0x1ae4 <__stack+0x1285>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1abc:	6f 81       	ldd	r22, Y+7	; 0x07
    1abe:	78 85       	ldd	r23, Y+8	; 0x08
    1ac0:	89 85       	ldd	r24, Y+9	; 0x09
    1ac2:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ac4:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
    1ac8:	dc 01       	movw	r26, r24
    1aca:	cb 01       	movw	r24, r22
    1acc:	9e 83       	std	Y+6, r25	; 0x06
    1ace:	8d 83       	std	Y+5, r24	; 0x05
    1ad0:	8d 81       	ldd	r24, Y+5	; 0x05
    1ad2:	9e 81       	ldd	r25, Y+6	; 0x06
    1ad4:	9a 83       	std	Y+2, r25	; 0x02
    1ad6:	89 83       	std	Y+1, r24	; 0x01
    1ad8:	89 81       	ldd	r24, Y+1	; 0x01
    1ada:	9a 81       	ldd	r25, Y+2	; 0x02
    1adc:	01 97       	sbiw	r24, 0x01	; 1
    1ade:	f1 f7       	brne	.-4      	; 0x1adc <__stack+0x127d>
    1ae0:	9a 83       	std	Y+2, r25	; 0x02
    1ae2:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(DELAY_DURATION);
	led_flasing(LED_2);
    1ae4:	81 e0       	ldi	r24, 0x01	; 1
    1ae6:	90 e0       	ldi	r25, 0x00	; 0
    1ae8:	0e 94 de 0e 	call	0x1dbc	; 0x1dbc <led_flasing>
	led_flasing(LED_4);
    1aec:	83 e0       	ldi	r24, 0x03	; 3
    1aee:	90 e0       	ldi	r25, 0x00	; 0
    1af0:	0e 94 de 0e 	call	0x1dbc	; 0x1dbc <led_flasing>
	led_flasing(LED_6);
    1af4:	85 e0       	ldi	r24, 0x05	; 5
    1af6:	90 e0       	ldi	r25, 0x00	; 0
    1af8:	0e 94 de 0e 	call	0x1dbc	; 0x1dbc <led_flasing>
	led_flasing(LED_8);
    1afc:	87 e0       	ldi	r24, 0x07	; 7
    1afe:	90 e0       	ldi	r25, 0x00	; 0
    1b00:	0e 94 de 0e 	call	0x1dbc	; 0x1dbc <led_flasing>
	led_flasing(LED_1);
    1b04:	80 e0       	ldi	r24, 0x00	; 0
    1b06:	90 e0       	ldi	r25, 0x00	; 0
    1b08:	0e 94 de 0e 	call	0x1dbc	; 0x1dbc <led_flasing>
	led_flasing(LED_3);
    1b0c:	82 e0       	ldi	r24, 0x02	; 2
    1b0e:	90 e0       	ldi	r25, 0x00	; 0
    1b10:	0e 94 de 0e 	call	0x1dbc	; 0x1dbc <led_flasing>
	led_flasing(LED_5);
    1b14:	84 e0       	ldi	r24, 0x04	; 4
    1b16:	90 e0       	ldi	r25, 0x00	; 0
    1b18:	0e 94 de 0e 	call	0x1dbc	; 0x1dbc <led_flasing>
	led_flasing(LED_7);
    1b1c:	86 e0       	ldi	r24, 0x06	; 6
    1b1e:	90 e0       	ldi	r25, 0x00	; 0
    1b20:	0e 94 de 0e 	call	0x1dbc	; 0x1dbc <led_flasing>

}
    1b24:	c0 52       	subi	r28, 0x20	; 32
    1b26:	df 4f       	sbci	r29, 0xFF	; 255
    1b28:	0f b6       	in	r0, 0x3f	; 63
    1b2a:	f8 94       	cli
    1b2c:	de bf       	out	0x3e, r29	; 62
    1b2e:	0f be       	out	0x3f, r0	; 63
    1b30:	cd bf       	out	0x3d, r28	; 61
    1b32:	cf 91       	pop	r28
    1b34:	df 91       	pop	r29
    1b36:	1f 91       	pop	r17
    1b38:	0f 91       	pop	r16
    1b3a:	08 95       	ret

00001b3c <led_setState>:

void led_setState(tLED led, tLED_State state)
{
    1b3c:	df 93       	push	r29
    1b3e:	cf 93       	push	r28
    1b40:	00 d0       	rcall	.+0      	; 0x1b42 <led_setState+0x6>
    1b42:	00 d0       	rcall	.+0      	; 0x1b44 <led_setState+0x8>
    1b44:	00 d0       	rcall	.+0      	; 0x1b46 <led_setState+0xa>
    1b46:	cd b7       	in	r28, 0x3d	; 61
    1b48:	de b7       	in	r29, 0x3e	; 62
    1b4a:	9a 83       	std	Y+2, r25	; 0x02
    1b4c:	89 83       	std	Y+1, r24	; 0x01
    1b4e:	7c 83       	std	Y+4, r23	; 0x04
    1b50:	6b 83       	std	Y+3, r22	; 0x03
	switch(led)
    1b52:	89 81       	ldd	r24, Y+1	; 0x01
    1b54:	9a 81       	ldd	r25, Y+2	; 0x02
    1b56:	9e 83       	std	Y+6, r25	; 0x06
    1b58:	8d 83       	std	Y+5, r24	; 0x05
    1b5a:	8d 81       	ldd	r24, Y+5	; 0x05
    1b5c:	9e 81       	ldd	r25, Y+6	; 0x06
    1b5e:	83 30       	cpi	r24, 0x03	; 3
    1b60:	91 05       	cpc	r25, r1
    1b62:	09 f4       	brne	.+2      	; 0x1b66 <led_setState+0x2a>
    1b64:	3d c0       	rjmp	.+122    	; 0x1be0 <led_setState+0xa4>
    1b66:	8d 81       	ldd	r24, Y+5	; 0x05
    1b68:	9e 81       	ldd	r25, Y+6	; 0x06
    1b6a:	84 30       	cpi	r24, 0x04	; 4
    1b6c:	91 05       	cpc	r25, r1
    1b6e:	58 f4       	brcc	.+22     	; 0x1b86 <led_setState+0x4a>
    1b70:	8d 81       	ldd	r24, Y+5	; 0x05
    1b72:	9e 81       	ldd	r25, Y+6	; 0x06
    1b74:	81 30       	cpi	r24, 0x01	; 1
    1b76:	91 05       	cpc	r25, r1
    1b78:	19 f1       	breq	.+70     	; 0x1bc0 <led_setState+0x84>
    1b7a:	8d 81       	ldd	r24, Y+5	; 0x05
    1b7c:	9e 81       	ldd	r25, Y+6	; 0x06
    1b7e:	82 30       	cpi	r24, 0x02	; 2
    1b80:	91 05       	cpc	r25, r1
    1b82:	30 f5       	brcc	.+76     	; 0x1bd0 <led_setState+0x94>
    1b84:	15 c0       	rjmp	.+42     	; 0x1bb0 <led_setState+0x74>
    1b86:	8d 81       	ldd	r24, Y+5	; 0x05
    1b88:	9e 81       	ldd	r25, Y+6	; 0x06
    1b8a:	85 30       	cpi	r24, 0x05	; 5
    1b8c:	91 05       	cpc	r25, r1
    1b8e:	c1 f1       	breq	.+112    	; 0x1c00 <led_setState+0xc4>
    1b90:	8d 81       	ldd	r24, Y+5	; 0x05
    1b92:	9e 81       	ldd	r25, Y+6	; 0x06
    1b94:	85 30       	cpi	r24, 0x05	; 5
    1b96:	91 05       	cpc	r25, r1
    1b98:	58 f1       	brcs	.+86     	; 0x1bf0 <led_setState+0xb4>
    1b9a:	8d 81       	ldd	r24, Y+5	; 0x05
    1b9c:	9e 81       	ldd	r25, Y+6	; 0x06
    1b9e:	86 30       	cpi	r24, 0x06	; 6
    1ba0:	91 05       	cpc	r25, r1
    1ba2:	b1 f1       	breq	.+108    	; 0x1c10 <led_setState+0xd4>
    1ba4:	8d 81       	ldd	r24, Y+5	; 0x05
    1ba6:	9e 81       	ldd	r25, Y+6	; 0x06
    1ba8:	87 30       	cpi	r24, 0x07	; 7
    1baa:	91 05       	cpc	r25, r1
    1bac:	c9 f1       	breq	.+114    	; 0x1c20 <led_setState+0xe4>
    1bae:	3f c0       	rjmp	.+126    	; 0x1c2e <led_setState+0xf2>
	{
		case LED_1: gpio_setPortPin(PORT_B, 0, state);break;
    1bb0:	2b 81       	ldd	r18, Y+3	; 0x03
    1bb2:	81 e0       	ldi	r24, 0x01	; 1
    1bb4:	90 e0       	ldi	r25, 0x00	; 0
    1bb6:	60 e0       	ldi	r22, 0x00	; 0
    1bb8:	42 2f       	mov	r20, r18
    1bba:	0e 94 41 01 	call	0x282	; 0x282 <gpio_setPortPin>
    1bbe:	37 c0       	rjmp	.+110    	; 0x1c2e <led_setState+0xf2>
		case LED_2: gpio_setPortPin(PORT_B, 1, state);break;
    1bc0:	2b 81       	ldd	r18, Y+3	; 0x03
    1bc2:	81 e0       	ldi	r24, 0x01	; 1
    1bc4:	90 e0       	ldi	r25, 0x00	; 0
    1bc6:	61 e0       	ldi	r22, 0x01	; 1
    1bc8:	42 2f       	mov	r20, r18
    1bca:	0e 94 41 01 	call	0x282	; 0x282 <gpio_setPortPin>
    1bce:	2f c0       	rjmp	.+94     	; 0x1c2e <led_setState+0xf2>
		case LED_3: gpio_setPortPin(PORT_B, 2, state);break;
    1bd0:	2b 81       	ldd	r18, Y+3	; 0x03
    1bd2:	81 e0       	ldi	r24, 0x01	; 1
    1bd4:	90 e0       	ldi	r25, 0x00	; 0
    1bd6:	62 e0       	ldi	r22, 0x02	; 2
    1bd8:	42 2f       	mov	r20, r18
    1bda:	0e 94 41 01 	call	0x282	; 0x282 <gpio_setPortPin>
    1bde:	27 c0       	rjmp	.+78     	; 0x1c2e <led_setState+0xf2>
		case LED_4: gpio_setPortPin(PORT_B, 3, state);break;
    1be0:	2b 81       	ldd	r18, Y+3	; 0x03
    1be2:	81 e0       	ldi	r24, 0x01	; 1
    1be4:	90 e0       	ldi	r25, 0x00	; 0
    1be6:	63 e0       	ldi	r22, 0x03	; 3
    1be8:	42 2f       	mov	r20, r18
    1bea:	0e 94 41 01 	call	0x282	; 0x282 <gpio_setPortPin>
    1bee:	1f c0       	rjmp	.+62     	; 0x1c2e <led_setState+0xf2>
		case LED_5: gpio_setPortPin(PORT_B, 4, state);break;
    1bf0:	2b 81       	ldd	r18, Y+3	; 0x03
    1bf2:	81 e0       	ldi	r24, 0x01	; 1
    1bf4:	90 e0       	ldi	r25, 0x00	; 0
    1bf6:	64 e0       	ldi	r22, 0x04	; 4
    1bf8:	42 2f       	mov	r20, r18
    1bfa:	0e 94 41 01 	call	0x282	; 0x282 <gpio_setPortPin>
    1bfe:	17 c0       	rjmp	.+46     	; 0x1c2e <led_setState+0xf2>
		case LED_6: gpio_setPortPin(PORT_B, 5, state);break;
    1c00:	2b 81       	ldd	r18, Y+3	; 0x03
    1c02:	81 e0       	ldi	r24, 0x01	; 1
    1c04:	90 e0       	ldi	r25, 0x00	; 0
    1c06:	65 e0       	ldi	r22, 0x05	; 5
    1c08:	42 2f       	mov	r20, r18
    1c0a:	0e 94 41 01 	call	0x282	; 0x282 <gpio_setPortPin>
    1c0e:	0f c0       	rjmp	.+30     	; 0x1c2e <led_setState+0xf2>
		case LED_7: gpio_setPortPin(PORT_B, 6, state);break;
    1c10:	2b 81       	ldd	r18, Y+3	; 0x03
    1c12:	81 e0       	ldi	r24, 0x01	; 1
    1c14:	90 e0       	ldi	r25, 0x00	; 0
    1c16:	66 e0       	ldi	r22, 0x06	; 6
    1c18:	42 2f       	mov	r20, r18
    1c1a:	0e 94 41 01 	call	0x282	; 0x282 <gpio_setPortPin>
    1c1e:	07 c0       	rjmp	.+14     	; 0x1c2e <led_setState+0xf2>
		case LED_8: gpio_setPortPin(PORT_B, 7, state);break;
    1c20:	2b 81       	ldd	r18, Y+3	; 0x03
    1c22:	81 e0       	ldi	r24, 0x01	; 1
    1c24:	90 e0       	ldi	r25, 0x00	; 0
    1c26:	67 e0       	ldi	r22, 0x07	; 7
    1c28:	42 2f       	mov	r20, r18
    1c2a:	0e 94 41 01 	call	0x282	; 0x282 <gpio_setPortPin>
		default: /** should do no thing **/ break;
	}
}
    1c2e:	26 96       	adiw	r28, 0x06	; 6
    1c30:	0f b6       	in	r0, 0x3f	; 63
    1c32:	f8 94       	cli
    1c34:	de bf       	out	0x3e, r29	; 62
    1c36:	0f be       	out	0x3f, r0	; 63
    1c38:	cd bf       	out	0x3d, r28	; 61
    1c3a:	cf 91       	pop	r28
    1c3c:	df 91       	pop	r29
    1c3e:	08 95       	ret

00001c40 <led_getState>:

tLED_State led_getState(tLED led)
{
    1c40:	df 93       	push	r29
    1c42:	cf 93       	push	r28
    1c44:	00 d0       	rcall	.+0      	; 0x1c46 <led_getState+0x6>
    1c46:	00 d0       	rcall	.+0      	; 0x1c48 <led_getState+0x8>
    1c48:	00 d0       	rcall	.+0      	; 0x1c4a <led_getState+0xa>
    1c4a:	cd b7       	in	r28, 0x3d	; 61
    1c4c:	de b7       	in	r29, 0x3e	; 62
    1c4e:	9c 83       	std	Y+4, r25	; 0x04
    1c50:	8b 83       	std	Y+3, r24	; 0x03
	tLED_State returned_value = LED_OFF;
    1c52:	1a 82       	std	Y+2, r1	; 0x02
    1c54:	19 82       	std	Y+1, r1	; 0x01
	switch(led)
    1c56:	8b 81       	ldd	r24, Y+3	; 0x03
    1c58:	9c 81       	ldd	r25, Y+4	; 0x04
    1c5a:	9e 83       	std	Y+6, r25	; 0x06
    1c5c:	8d 83       	std	Y+5, r24	; 0x05
    1c5e:	8d 81       	ldd	r24, Y+5	; 0x05
    1c60:	9e 81       	ldd	r25, Y+6	; 0x06
    1c62:	83 30       	cpi	r24, 0x03	; 3
    1c64:	91 05       	cpc	r25, r1
    1c66:	09 f4       	brne	.+2      	; 0x1c6a <led_getState+0x2a>
    1c68:	46 c0       	rjmp	.+140    	; 0x1cf6 <led_getState+0xb6>
    1c6a:	8d 81       	ldd	r24, Y+5	; 0x05
    1c6c:	9e 81       	ldd	r25, Y+6	; 0x06
    1c6e:	84 30       	cpi	r24, 0x04	; 4
    1c70:	91 05       	cpc	r25, r1
    1c72:	58 f4       	brcc	.+22     	; 0x1c8a <led_getState+0x4a>
    1c74:	8d 81       	ldd	r24, Y+5	; 0x05
    1c76:	9e 81       	ldd	r25, Y+6	; 0x06
    1c78:	81 30       	cpi	r24, 0x01	; 1
    1c7a:	91 05       	cpc	r25, r1
    1c7c:	41 f1       	breq	.+80     	; 0x1cce <led_getState+0x8e>
    1c7e:	8d 81       	ldd	r24, Y+5	; 0x05
    1c80:	9e 81       	ldd	r25, Y+6	; 0x06
    1c82:	82 30       	cpi	r24, 0x02	; 2
    1c84:	91 05       	cpc	r25, r1
    1c86:	68 f5       	brcc	.+90     	; 0x1ce2 <led_getState+0xa2>
    1c88:	18 c0       	rjmp	.+48     	; 0x1cba <led_getState+0x7a>
    1c8a:	8d 81       	ldd	r24, Y+5	; 0x05
    1c8c:	9e 81       	ldd	r25, Y+6	; 0x06
    1c8e:	85 30       	cpi	r24, 0x05	; 5
    1c90:	91 05       	cpc	r25, r1
    1c92:	09 f4       	brne	.+2      	; 0x1c96 <led_getState+0x56>
    1c94:	44 c0       	rjmp	.+136    	; 0x1d1e <led_getState+0xde>
    1c96:	8d 81       	ldd	r24, Y+5	; 0x05
    1c98:	9e 81       	ldd	r25, Y+6	; 0x06
    1c9a:	85 30       	cpi	r24, 0x05	; 5
    1c9c:	91 05       	cpc	r25, r1
    1c9e:	a8 f1       	brcs	.+106    	; 0x1d0a <led_getState+0xca>
    1ca0:	8d 81       	ldd	r24, Y+5	; 0x05
    1ca2:	9e 81       	ldd	r25, Y+6	; 0x06
    1ca4:	86 30       	cpi	r24, 0x06	; 6
    1ca6:	91 05       	cpc	r25, r1
    1ca8:	09 f4       	brne	.+2      	; 0x1cac <led_getState+0x6c>
    1caa:	43 c0       	rjmp	.+134    	; 0x1d32 <led_getState+0xf2>
    1cac:	8d 81       	ldd	r24, Y+5	; 0x05
    1cae:	9e 81       	ldd	r25, Y+6	; 0x06
    1cb0:	87 30       	cpi	r24, 0x07	; 7
    1cb2:	91 05       	cpc	r25, r1
    1cb4:	09 f4       	brne	.+2      	; 0x1cb8 <led_getState+0x78>
    1cb6:	47 c0       	rjmp	.+142    	; 0x1d46 <led_getState+0x106>
    1cb8:	4f c0       	rjmp	.+158    	; 0x1d58 <led_getState+0x118>
	{
		case LED_1: returned_value = gpio_getPortPin(PORT_B, 0);break;
    1cba:	81 e0       	ldi	r24, 0x01	; 1
    1cbc:	90 e0       	ldi	r25, 0x00	; 0
    1cbe:	60 e0       	ldi	r22, 0x00	; 0
    1cc0:	0e 94 f7 01 	call	0x3ee	; 0x3ee <gpio_getPortPin>
    1cc4:	88 2f       	mov	r24, r24
    1cc6:	90 e0       	ldi	r25, 0x00	; 0
    1cc8:	9a 83       	std	Y+2, r25	; 0x02
    1cca:	89 83       	std	Y+1, r24	; 0x01
    1ccc:	45 c0       	rjmp	.+138    	; 0x1d58 <led_getState+0x118>
		case LED_2: returned_value = gpio_getPortPin(PORT_B, 1);break;
    1cce:	81 e0       	ldi	r24, 0x01	; 1
    1cd0:	90 e0       	ldi	r25, 0x00	; 0
    1cd2:	61 e0       	ldi	r22, 0x01	; 1
    1cd4:	0e 94 f7 01 	call	0x3ee	; 0x3ee <gpio_getPortPin>
    1cd8:	88 2f       	mov	r24, r24
    1cda:	90 e0       	ldi	r25, 0x00	; 0
    1cdc:	9a 83       	std	Y+2, r25	; 0x02
    1cde:	89 83       	std	Y+1, r24	; 0x01
    1ce0:	3b c0       	rjmp	.+118    	; 0x1d58 <led_getState+0x118>
		case LED_3: returned_value = gpio_getPortPin(PORT_B, 2);break;
    1ce2:	81 e0       	ldi	r24, 0x01	; 1
    1ce4:	90 e0       	ldi	r25, 0x00	; 0
    1ce6:	62 e0       	ldi	r22, 0x02	; 2
    1ce8:	0e 94 f7 01 	call	0x3ee	; 0x3ee <gpio_getPortPin>
    1cec:	88 2f       	mov	r24, r24
    1cee:	90 e0       	ldi	r25, 0x00	; 0
    1cf0:	9a 83       	std	Y+2, r25	; 0x02
    1cf2:	89 83       	std	Y+1, r24	; 0x01
    1cf4:	31 c0       	rjmp	.+98     	; 0x1d58 <led_getState+0x118>
		case LED_4: returned_value = gpio_getPortPin(PORT_B, 3);break;
    1cf6:	81 e0       	ldi	r24, 0x01	; 1
    1cf8:	90 e0       	ldi	r25, 0x00	; 0
    1cfa:	63 e0       	ldi	r22, 0x03	; 3
    1cfc:	0e 94 f7 01 	call	0x3ee	; 0x3ee <gpio_getPortPin>
    1d00:	88 2f       	mov	r24, r24
    1d02:	90 e0       	ldi	r25, 0x00	; 0
    1d04:	9a 83       	std	Y+2, r25	; 0x02
    1d06:	89 83       	std	Y+1, r24	; 0x01
    1d08:	27 c0       	rjmp	.+78     	; 0x1d58 <led_getState+0x118>
		case LED_5: returned_value = gpio_getPortPin(PORT_B, 4);break;
    1d0a:	81 e0       	ldi	r24, 0x01	; 1
    1d0c:	90 e0       	ldi	r25, 0x00	; 0
    1d0e:	64 e0       	ldi	r22, 0x04	; 4
    1d10:	0e 94 f7 01 	call	0x3ee	; 0x3ee <gpio_getPortPin>
    1d14:	88 2f       	mov	r24, r24
    1d16:	90 e0       	ldi	r25, 0x00	; 0
    1d18:	9a 83       	std	Y+2, r25	; 0x02
    1d1a:	89 83       	std	Y+1, r24	; 0x01
    1d1c:	1d c0       	rjmp	.+58     	; 0x1d58 <led_getState+0x118>
		case LED_6: returned_value = gpio_getPortPin(PORT_B, 5);break;
    1d1e:	81 e0       	ldi	r24, 0x01	; 1
    1d20:	90 e0       	ldi	r25, 0x00	; 0
    1d22:	65 e0       	ldi	r22, 0x05	; 5
    1d24:	0e 94 f7 01 	call	0x3ee	; 0x3ee <gpio_getPortPin>
    1d28:	88 2f       	mov	r24, r24
    1d2a:	90 e0       	ldi	r25, 0x00	; 0
    1d2c:	9a 83       	std	Y+2, r25	; 0x02
    1d2e:	89 83       	std	Y+1, r24	; 0x01
    1d30:	13 c0       	rjmp	.+38     	; 0x1d58 <led_getState+0x118>
		case LED_7: returned_value = gpio_getPortPin(PORT_B, 6);break;
    1d32:	81 e0       	ldi	r24, 0x01	; 1
    1d34:	90 e0       	ldi	r25, 0x00	; 0
    1d36:	66 e0       	ldi	r22, 0x06	; 6
    1d38:	0e 94 f7 01 	call	0x3ee	; 0x3ee <gpio_getPortPin>
    1d3c:	88 2f       	mov	r24, r24
    1d3e:	90 e0       	ldi	r25, 0x00	; 0
    1d40:	9a 83       	std	Y+2, r25	; 0x02
    1d42:	89 83       	std	Y+1, r24	; 0x01
    1d44:	09 c0       	rjmp	.+18     	; 0x1d58 <led_getState+0x118>
		case LED_8: returned_value = gpio_getPortPin(PORT_B, 7);break;
    1d46:	81 e0       	ldi	r24, 0x01	; 1
    1d48:	90 e0       	ldi	r25, 0x00	; 0
    1d4a:	67 e0       	ldi	r22, 0x07	; 7
    1d4c:	0e 94 f7 01 	call	0x3ee	; 0x3ee <gpio_getPortPin>
    1d50:	88 2f       	mov	r24, r24
    1d52:	90 e0       	ldi	r25, 0x00	; 0
    1d54:	9a 83       	std	Y+2, r25	; 0x02
    1d56:	89 83       	std	Y+1, r24	; 0x01
		default: /** should do no thing **/ break;
	}
	return returned_value;
    1d58:	89 81       	ldd	r24, Y+1	; 0x01
    1d5a:	9a 81       	ldd	r25, Y+2	; 0x02
}
    1d5c:	26 96       	adiw	r28, 0x06	; 6
    1d5e:	0f b6       	in	r0, 0x3f	; 63
    1d60:	f8 94       	cli
    1d62:	de bf       	out	0x3e, r29	; 62
    1d64:	0f be       	out	0x3f, r0	; 63
    1d66:	cd bf       	out	0x3d, r28	; 61
    1d68:	cf 91       	pop	r28
    1d6a:	df 91       	pop	r29
    1d6c:	08 95       	ret

00001d6e <led_Toggle>:

void led_Toggle(tLED led)
{
    1d6e:	df 93       	push	r29
    1d70:	cf 93       	push	r28
    1d72:	00 d0       	rcall	.+0      	; 0x1d74 <led_Toggle+0x6>
    1d74:	00 d0       	rcall	.+0      	; 0x1d76 <led_Toggle+0x8>
    1d76:	cd b7       	in	r28, 0x3d	; 61
    1d78:	de b7       	in	r29, 0x3e	; 62
    1d7a:	9c 83       	std	Y+4, r25	; 0x04
    1d7c:	8b 83       	std	Y+3, r24	; 0x03
	tLED_State led_state = led_getState(led);
    1d7e:	8b 81       	ldd	r24, Y+3	; 0x03
    1d80:	9c 81       	ldd	r25, Y+4	; 0x04
    1d82:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <led_getState>
    1d86:	9a 83       	std	Y+2, r25	; 0x02
    1d88:	89 83       	std	Y+1, r24	; 0x01
	if (led_state == LED_ON)
    1d8a:	89 81       	ldd	r24, Y+1	; 0x01
    1d8c:	9a 81       	ldd	r25, Y+2	; 0x02
    1d8e:	81 30       	cpi	r24, 0x01	; 1
    1d90:	91 05       	cpc	r25, r1
    1d92:	39 f4       	brne	.+14     	; 0x1da2 <led_Toggle+0x34>
	{
		led_setState(led, LED_OFF);
    1d94:	8b 81       	ldd	r24, Y+3	; 0x03
    1d96:	9c 81       	ldd	r25, Y+4	; 0x04
    1d98:	60 e0       	ldi	r22, 0x00	; 0
    1d9a:	70 e0       	ldi	r23, 0x00	; 0
    1d9c:	0e 94 9e 0d 	call	0x1b3c	; 0x1b3c <led_setState>
    1da0:	06 c0       	rjmp	.+12     	; 0x1dae <led_Toggle+0x40>
	}
	else
	{
		led_setState(led, LED_ON);
    1da2:	8b 81       	ldd	r24, Y+3	; 0x03
    1da4:	9c 81       	ldd	r25, Y+4	; 0x04
    1da6:	61 e0       	ldi	r22, 0x01	; 1
    1da8:	70 e0       	ldi	r23, 0x00	; 0
    1daa:	0e 94 9e 0d 	call	0x1b3c	; 0x1b3c <led_setState>
	}
}
    1dae:	0f 90       	pop	r0
    1db0:	0f 90       	pop	r0
    1db2:	0f 90       	pop	r0
    1db4:	0f 90       	pop	r0
    1db6:	cf 91       	pop	r28
    1db8:	df 91       	pop	r29
    1dba:	08 95       	ret

00001dbc <led_flasing>:

void led_flasing(tLED led)
{
    1dbc:	0f 93       	push	r16
    1dbe:	1f 93       	push	r17
    1dc0:	df 93       	push	r29
    1dc2:	cf 93       	push	r28
    1dc4:	cd b7       	in	r28, 0x3d	; 61
    1dc6:	de b7       	in	r29, 0x3e	; 62
    1dc8:	c8 54       	subi	r28, 0x48	; 72
    1dca:	d0 40       	sbci	r29, 0x00	; 0
    1dcc:	0f b6       	in	r0, 0x3f	; 63
    1dce:	f8 94       	cli
    1dd0:	de bf       	out	0x3e, r29	; 62
    1dd2:	0f be       	out	0x3f, r0	; 63
    1dd4:	cd bf       	out	0x3d, r28	; 61
    1dd6:	fe 01       	movw	r30, r28
    1dd8:	e9 5b       	subi	r30, 0xB9	; 185
    1dda:	ff 4f       	sbci	r31, 0xFF	; 255
    1ddc:	91 83       	std	Z+1, r25	; 0x01
    1dde:	80 83       	st	Z, r24
	led_setState(led, LED_ON);
    1de0:	fe 01       	movw	r30, r28
    1de2:	e9 5b       	subi	r30, 0xB9	; 185
    1de4:	ff 4f       	sbci	r31, 0xFF	; 255
    1de6:	80 81       	ld	r24, Z
    1de8:	91 81       	ldd	r25, Z+1	; 0x01
    1dea:	61 e0       	ldi	r22, 0x01	; 1
    1dec:	70 e0       	ldi	r23, 0x00	; 0
    1dee:	0e 94 9e 0d 	call	0x1b3c	; 0x1b3c <led_setState>
    1df2:	fe 01       	movw	r30, r28
    1df4:	ed 5b       	subi	r30, 0xBD	; 189
    1df6:	ff 4f       	sbci	r31, 0xFF	; 255
    1df8:	80 e0       	ldi	r24, 0x00	; 0
    1dfa:	90 e0       	ldi	r25, 0x00	; 0
    1dfc:	a8 e4       	ldi	r26, 0x48	; 72
    1dfe:	b3 e4       	ldi	r27, 0x43	; 67
    1e00:	80 83       	st	Z, r24
    1e02:	91 83       	std	Z+1, r25	; 0x01
    1e04:	a2 83       	std	Z+2, r26	; 0x02
    1e06:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e08:	8e 01       	movw	r16, r28
    1e0a:	01 5c       	subi	r16, 0xC1	; 193
    1e0c:	1f 4f       	sbci	r17, 0xFF	; 255
    1e0e:	fe 01       	movw	r30, r28
    1e10:	ed 5b       	subi	r30, 0xBD	; 189
    1e12:	ff 4f       	sbci	r31, 0xFF	; 255
    1e14:	60 81       	ld	r22, Z
    1e16:	71 81       	ldd	r23, Z+1	; 0x01
    1e18:	82 81       	ldd	r24, Z+2	; 0x02
    1e1a:	93 81       	ldd	r25, Z+3	; 0x03
    1e1c:	20 e0       	ldi	r18, 0x00	; 0
    1e1e:	30 e0       	ldi	r19, 0x00	; 0
    1e20:	4a e7       	ldi	r20, 0x7A	; 122
    1e22:	55 e4       	ldi	r21, 0x45	; 69
    1e24:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
    1e28:	dc 01       	movw	r26, r24
    1e2a:	cb 01       	movw	r24, r22
    1e2c:	f8 01       	movw	r30, r16
    1e2e:	80 83       	st	Z, r24
    1e30:	91 83       	std	Z+1, r25	; 0x01
    1e32:	a2 83       	std	Z+2, r26	; 0x02
    1e34:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1e36:	fe 01       	movw	r30, r28
    1e38:	ff 96       	adiw	r30, 0x3f	; 63
    1e3a:	60 81       	ld	r22, Z
    1e3c:	71 81       	ldd	r23, Z+1	; 0x01
    1e3e:	82 81       	ldd	r24, Z+2	; 0x02
    1e40:	93 81       	ldd	r25, Z+3	; 0x03
    1e42:	20 e0       	ldi	r18, 0x00	; 0
    1e44:	30 e0       	ldi	r19, 0x00	; 0
    1e46:	40 e8       	ldi	r20, 0x80	; 128
    1e48:	5f e3       	ldi	r21, 0x3F	; 63
    1e4a:	0e 94 dd 14 	call	0x29ba	; 0x29ba <__ltsf2>
    1e4e:	88 23       	and	r24, r24
    1e50:	2c f4       	brge	.+10     	; 0x1e5c <led_flasing+0xa0>
		__ticks = 1;
    1e52:	81 e0       	ldi	r24, 0x01	; 1
    1e54:	90 e0       	ldi	r25, 0x00	; 0
    1e56:	9e af       	std	Y+62, r25	; 0x3e
    1e58:	8d af       	std	Y+61, r24	; 0x3d
    1e5a:	46 c0       	rjmp	.+140    	; 0x1ee8 <led_flasing+0x12c>
	else if (__tmp > 65535)
    1e5c:	fe 01       	movw	r30, r28
    1e5e:	ff 96       	adiw	r30, 0x3f	; 63
    1e60:	60 81       	ld	r22, Z
    1e62:	71 81       	ldd	r23, Z+1	; 0x01
    1e64:	82 81       	ldd	r24, Z+2	; 0x02
    1e66:	93 81       	ldd	r25, Z+3	; 0x03
    1e68:	20 e0       	ldi	r18, 0x00	; 0
    1e6a:	3f ef       	ldi	r19, 0xFF	; 255
    1e6c:	4f e7       	ldi	r20, 0x7F	; 127
    1e6e:	57 e4       	ldi	r21, 0x47	; 71
    1e70:	0e 94 7d 14 	call	0x28fa	; 0x28fa <__gtsf2>
    1e74:	18 16       	cp	r1, r24
    1e76:	64 f5       	brge	.+88     	; 0x1ed0 <led_flasing+0x114>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e78:	fe 01       	movw	r30, r28
    1e7a:	ed 5b       	subi	r30, 0xBD	; 189
    1e7c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e7e:	60 81       	ld	r22, Z
    1e80:	71 81       	ldd	r23, Z+1	; 0x01
    1e82:	82 81       	ldd	r24, Z+2	; 0x02
    1e84:	93 81       	ldd	r25, Z+3	; 0x03
    1e86:	20 e0       	ldi	r18, 0x00	; 0
    1e88:	30 e0       	ldi	r19, 0x00	; 0
    1e8a:	40 e2       	ldi	r20, 0x20	; 32
    1e8c:	51 e4       	ldi	r21, 0x41	; 65
    1e8e:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
    1e92:	dc 01       	movw	r26, r24
    1e94:	cb 01       	movw	r24, r22
    1e96:	bc 01       	movw	r22, r24
    1e98:	cd 01       	movw	r24, r26
    1e9a:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
    1e9e:	dc 01       	movw	r26, r24
    1ea0:	cb 01       	movw	r24, r22
    1ea2:	9e af       	std	Y+62, r25	; 0x3e
    1ea4:	8d af       	std	Y+61, r24	; 0x3d
    1ea6:	0f c0       	rjmp	.+30     	; 0x1ec6 <led_flasing+0x10a>
    1ea8:	80 e9       	ldi	r24, 0x90	; 144
    1eaa:	91 e0       	ldi	r25, 0x01	; 1
    1eac:	9c af       	std	Y+60, r25	; 0x3c
    1eae:	8b af       	std	Y+59, r24	; 0x3b
    1eb0:	8b ad       	ldd	r24, Y+59	; 0x3b
    1eb2:	9c ad       	ldd	r25, Y+60	; 0x3c
    1eb4:	01 97       	sbiw	r24, 0x01	; 1
    1eb6:	f1 f7       	brne	.-4      	; 0x1eb4 <led_flasing+0xf8>
    1eb8:	9c af       	std	Y+60, r25	; 0x3c
    1eba:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ebc:	8d ad       	ldd	r24, Y+61	; 0x3d
    1ebe:	9e ad       	ldd	r25, Y+62	; 0x3e
    1ec0:	01 97       	sbiw	r24, 0x01	; 1
    1ec2:	9e af       	std	Y+62, r25	; 0x3e
    1ec4:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ec6:	8d ad       	ldd	r24, Y+61	; 0x3d
    1ec8:	9e ad       	ldd	r25, Y+62	; 0x3e
    1eca:	00 97       	sbiw	r24, 0x00	; 0
    1ecc:	69 f7       	brne	.-38     	; 0x1ea8 <led_flasing+0xec>
    1ece:	16 c0       	rjmp	.+44     	; 0x1efc <led_flasing+0x140>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ed0:	fe 01       	movw	r30, r28
    1ed2:	ff 96       	adiw	r30, 0x3f	; 63
    1ed4:	60 81       	ld	r22, Z
    1ed6:	71 81       	ldd	r23, Z+1	; 0x01
    1ed8:	82 81       	ldd	r24, Z+2	; 0x02
    1eda:	93 81       	ldd	r25, Z+3	; 0x03
    1edc:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
    1ee0:	dc 01       	movw	r26, r24
    1ee2:	cb 01       	movw	r24, r22
    1ee4:	9e af       	std	Y+62, r25	; 0x3e
    1ee6:	8d af       	std	Y+61, r24	; 0x3d
    1ee8:	8d ad       	ldd	r24, Y+61	; 0x3d
    1eea:	9e ad       	ldd	r25, Y+62	; 0x3e
    1eec:	9a af       	std	Y+58, r25	; 0x3a
    1eee:	89 af       	std	Y+57, r24	; 0x39
    1ef0:	89 ad       	ldd	r24, Y+57	; 0x39
    1ef2:	9a ad       	ldd	r25, Y+58	; 0x3a
    1ef4:	01 97       	sbiw	r24, 0x01	; 1
    1ef6:	f1 f7       	brne	.-4      	; 0x1ef4 <led_flasing+0x138>
    1ef8:	9a af       	std	Y+58, r25	; 0x3a
    1efa:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(DELAY_DURATION);
	led_setState(led, LED_OFF);
    1efc:	fe 01       	movw	r30, r28
    1efe:	e9 5b       	subi	r30, 0xB9	; 185
    1f00:	ff 4f       	sbci	r31, 0xFF	; 255
    1f02:	80 81       	ld	r24, Z
    1f04:	91 81       	ldd	r25, Z+1	; 0x01
    1f06:	60 e0       	ldi	r22, 0x00	; 0
    1f08:	70 e0       	ldi	r23, 0x00	; 0
    1f0a:	0e 94 9e 0d 	call	0x1b3c	; 0x1b3c <led_setState>
    1f0e:	80 e0       	ldi	r24, 0x00	; 0
    1f10:	90 e0       	ldi	r25, 0x00	; 0
    1f12:	a8 ec       	ldi	r26, 0xC8	; 200
    1f14:	b2 e4       	ldi	r27, 0x42	; 66
    1f16:	8d ab       	std	Y+53, r24	; 0x35
    1f18:	9e ab       	std	Y+54, r25	; 0x36
    1f1a:	af ab       	std	Y+55, r26	; 0x37
    1f1c:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f1e:	6d a9       	ldd	r22, Y+53	; 0x35
    1f20:	7e a9       	ldd	r23, Y+54	; 0x36
    1f22:	8f a9       	ldd	r24, Y+55	; 0x37
    1f24:	98 ad       	ldd	r25, Y+56	; 0x38
    1f26:	20 e0       	ldi	r18, 0x00	; 0
    1f28:	30 e0       	ldi	r19, 0x00	; 0
    1f2a:	4a e7       	ldi	r20, 0x7A	; 122
    1f2c:	55 e4       	ldi	r21, 0x45	; 69
    1f2e:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
    1f32:	dc 01       	movw	r26, r24
    1f34:	cb 01       	movw	r24, r22
    1f36:	89 ab       	std	Y+49, r24	; 0x31
    1f38:	9a ab       	std	Y+50, r25	; 0x32
    1f3a:	ab ab       	std	Y+51, r26	; 0x33
    1f3c:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1f3e:	69 a9       	ldd	r22, Y+49	; 0x31
    1f40:	7a a9       	ldd	r23, Y+50	; 0x32
    1f42:	8b a9       	ldd	r24, Y+51	; 0x33
    1f44:	9c a9       	ldd	r25, Y+52	; 0x34
    1f46:	20 e0       	ldi	r18, 0x00	; 0
    1f48:	30 e0       	ldi	r19, 0x00	; 0
    1f4a:	40 e8       	ldi	r20, 0x80	; 128
    1f4c:	5f e3       	ldi	r21, 0x3F	; 63
    1f4e:	0e 94 dd 14 	call	0x29ba	; 0x29ba <__ltsf2>
    1f52:	88 23       	and	r24, r24
    1f54:	2c f4       	brge	.+10     	; 0x1f60 <led_flasing+0x1a4>
		__ticks = 1;
    1f56:	81 e0       	ldi	r24, 0x01	; 1
    1f58:	90 e0       	ldi	r25, 0x00	; 0
    1f5a:	98 ab       	std	Y+48, r25	; 0x30
    1f5c:	8f a7       	std	Y+47, r24	; 0x2f
    1f5e:	3f c0       	rjmp	.+126    	; 0x1fde <led_flasing+0x222>
	else if (__tmp > 65535)
    1f60:	69 a9       	ldd	r22, Y+49	; 0x31
    1f62:	7a a9       	ldd	r23, Y+50	; 0x32
    1f64:	8b a9       	ldd	r24, Y+51	; 0x33
    1f66:	9c a9       	ldd	r25, Y+52	; 0x34
    1f68:	20 e0       	ldi	r18, 0x00	; 0
    1f6a:	3f ef       	ldi	r19, 0xFF	; 255
    1f6c:	4f e7       	ldi	r20, 0x7F	; 127
    1f6e:	57 e4       	ldi	r21, 0x47	; 71
    1f70:	0e 94 7d 14 	call	0x28fa	; 0x28fa <__gtsf2>
    1f74:	18 16       	cp	r1, r24
    1f76:	4c f5       	brge	.+82     	; 0x1fca <led_flasing+0x20e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f78:	6d a9       	ldd	r22, Y+53	; 0x35
    1f7a:	7e a9       	ldd	r23, Y+54	; 0x36
    1f7c:	8f a9       	ldd	r24, Y+55	; 0x37
    1f7e:	98 ad       	ldd	r25, Y+56	; 0x38
    1f80:	20 e0       	ldi	r18, 0x00	; 0
    1f82:	30 e0       	ldi	r19, 0x00	; 0
    1f84:	40 e2       	ldi	r20, 0x20	; 32
    1f86:	51 e4       	ldi	r21, 0x41	; 65
    1f88:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
    1f8c:	dc 01       	movw	r26, r24
    1f8e:	cb 01       	movw	r24, r22
    1f90:	bc 01       	movw	r22, r24
    1f92:	cd 01       	movw	r24, r26
    1f94:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
    1f98:	dc 01       	movw	r26, r24
    1f9a:	cb 01       	movw	r24, r22
    1f9c:	98 ab       	std	Y+48, r25	; 0x30
    1f9e:	8f a7       	std	Y+47, r24	; 0x2f
    1fa0:	0f c0       	rjmp	.+30     	; 0x1fc0 <led_flasing+0x204>
    1fa2:	80 e9       	ldi	r24, 0x90	; 144
    1fa4:	91 e0       	ldi	r25, 0x01	; 1
    1fa6:	9e a7       	std	Y+46, r25	; 0x2e
    1fa8:	8d a7       	std	Y+45, r24	; 0x2d
    1faa:	8d a5       	ldd	r24, Y+45	; 0x2d
    1fac:	9e a5       	ldd	r25, Y+46	; 0x2e
    1fae:	01 97       	sbiw	r24, 0x01	; 1
    1fb0:	f1 f7       	brne	.-4      	; 0x1fae <led_flasing+0x1f2>
    1fb2:	9e a7       	std	Y+46, r25	; 0x2e
    1fb4:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1fb6:	8f a5       	ldd	r24, Y+47	; 0x2f
    1fb8:	98 a9       	ldd	r25, Y+48	; 0x30
    1fba:	01 97       	sbiw	r24, 0x01	; 1
    1fbc:	98 ab       	std	Y+48, r25	; 0x30
    1fbe:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1fc0:	8f a5       	ldd	r24, Y+47	; 0x2f
    1fc2:	98 a9       	ldd	r25, Y+48	; 0x30
    1fc4:	00 97       	sbiw	r24, 0x00	; 0
    1fc6:	69 f7       	brne	.-38     	; 0x1fa2 <led_flasing+0x1e6>
    1fc8:	14 c0       	rjmp	.+40     	; 0x1ff2 <led_flasing+0x236>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1fca:	69 a9       	ldd	r22, Y+49	; 0x31
    1fcc:	7a a9       	ldd	r23, Y+50	; 0x32
    1fce:	8b a9       	ldd	r24, Y+51	; 0x33
    1fd0:	9c a9       	ldd	r25, Y+52	; 0x34
    1fd2:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
    1fd6:	dc 01       	movw	r26, r24
    1fd8:	cb 01       	movw	r24, r22
    1fda:	98 ab       	std	Y+48, r25	; 0x30
    1fdc:	8f a7       	std	Y+47, r24	; 0x2f
    1fde:	8f a5       	ldd	r24, Y+47	; 0x2f
    1fe0:	98 a9       	ldd	r25, Y+48	; 0x30
    1fe2:	9c a7       	std	Y+44, r25	; 0x2c
    1fe4:	8b a7       	std	Y+43, r24	; 0x2b
    1fe6:	8b a5       	ldd	r24, Y+43	; 0x2b
    1fe8:	9c a5       	ldd	r25, Y+44	; 0x2c
    1fea:	01 97       	sbiw	r24, 0x01	; 1
    1fec:	f1 f7       	brne	.-4      	; 0x1fea <led_flasing+0x22e>
    1fee:	9c a7       	std	Y+44, r25	; 0x2c
    1ff0:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(100);
	led_setState(led, LED_ON);
    1ff2:	fe 01       	movw	r30, r28
    1ff4:	e9 5b       	subi	r30, 0xB9	; 185
    1ff6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ff8:	80 81       	ld	r24, Z
    1ffa:	91 81       	ldd	r25, Z+1	; 0x01
    1ffc:	61 e0       	ldi	r22, 0x01	; 1
    1ffe:	70 e0       	ldi	r23, 0x00	; 0
    2000:	0e 94 9e 0d 	call	0x1b3c	; 0x1b3c <led_setState>
    2004:	80 e0       	ldi	r24, 0x00	; 0
    2006:	90 e0       	ldi	r25, 0x00	; 0
    2008:	a8 ec       	ldi	r26, 0xC8	; 200
    200a:	b2 e4       	ldi	r27, 0x42	; 66
    200c:	8f a3       	std	Y+39, r24	; 0x27
    200e:	98 a7       	std	Y+40, r25	; 0x28
    2010:	a9 a7       	std	Y+41, r26	; 0x29
    2012:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2014:	6f a1       	ldd	r22, Y+39	; 0x27
    2016:	78 a5       	ldd	r23, Y+40	; 0x28
    2018:	89 a5       	ldd	r24, Y+41	; 0x29
    201a:	9a a5       	ldd	r25, Y+42	; 0x2a
    201c:	20 e0       	ldi	r18, 0x00	; 0
    201e:	30 e0       	ldi	r19, 0x00	; 0
    2020:	4a e7       	ldi	r20, 0x7A	; 122
    2022:	55 e4       	ldi	r21, 0x45	; 69
    2024:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
    2028:	dc 01       	movw	r26, r24
    202a:	cb 01       	movw	r24, r22
    202c:	8b a3       	std	Y+35, r24	; 0x23
    202e:	9c a3       	std	Y+36, r25	; 0x24
    2030:	ad a3       	std	Y+37, r26	; 0x25
    2032:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2034:	6b a1       	ldd	r22, Y+35	; 0x23
    2036:	7c a1       	ldd	r23, Y+36	; 0x24
    2038:	8d a1       	ldd	r24, Y+37	; 0x25
    203a:	9e a1       	ldd	r25, Y+38	; 0x26
    203c:	20 e0       	ldi	r18, 0x00	; 0
    203e:	30 e0       	ldi	r19, 0x00	; 0
    2040:	40 e8       	ldi	r20, 0x80	; 128
    2042:	5f e3       	ldi	r21, 0x3F	; 63
    2044:	0e 94 dd 14 	call	0x29ba	; 0x29ba <__ltsf2>
    2048:	88 23       	and	r24, r24
    204a:	2c f4       	brge	.+10     	; 0x2056 <led_flasing+0x29a>
		__ticks = 1;
    204c:	81 e0       	ldi	r24, 0x01	; 1
    204e:	90 e0       	ldi	r25, 0x00	; 0
    2050:	9a a3       	std	Y+34, r25	; 0x22
    2052:	89 a3       	std	Y+33, r24	; 0x21
    2054:	3f c0       	rjmp	.+126    	; 0x20d4 <led_flasing+0x318>
	else if (__tmp > 65535)
    2056:	6b a1       	ldd	r22, Y+35	; 0x23
    2058:	7c a1       	ldd	r23, Y+36	; 0x24
    205a:	8d a1       	ldd	r24, Y+37	; 0x25
    205c:	9e a1       	ldd	r25, Y+38	; 0x26
    205e:	20 e0       	ldi	r18, 0x00	; 0
    2060:	3f ef       	ldi	r19, 0xFF	; 255
    2062:	4f e7       	ldi	r20, 0x7F	; 127
    2064:	57 e4       	ldi	r21, 0x47	; 71
    2066:	0e 94 7d 14 	call	0x28fa	; 0x28fa <__gtsf2>
    206a:	18 16       	cp	r1, r24
    206c:	4c f5       	brge	.+82     	; 0x20c0 <led_flasing+0x304>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    206e:	6f a1       	ldd	r22, Y+39	; 0x27
    2070:	78 a5       	ldd	r23, Y+40	; 0x28
    2072:	89 a5       	ldd	r24, Y+41	; 0x29
    2074:	9a a5       	ldd	r25, Y+42	; 0x2a
    2076:	20 e0       	ldi	r18, 0x00	; 0
    2078:	30 e0       	ldi	r19, 0x00	; 0
    207a:	40 e2       	ldi	r20, 0x20	; 32
    207c:	51 e4       	ldi	r21, 0x41	; 65
    207e:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
    2082:	dc 01       	movw	r26, r24
    2084:	cb 01       	movw	r24, r22
    2086:	bc 01       	movw	r22, r24
    2088:	cd 01       	movw	r24, r26
    208a:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
    208e:	dc 01       	movw	r26, r24
    2090:	cb 01       	movw	r24, r22
    2092:	9a a3       	std	Y+34, r25	; 0x22
    2094:	89 a3       	std	Y+33, r24	; 0x21
    2096:	0f c0       	rjmp	.+30     	; 0x20b6 <led_flasing+0x2fa>
    2098:	80 e9       	ldi	r24, 0x90	; 144
    209a:	91 e0       	ldi	r25, 0x01	; 1
    209c:	98 a3       	std	Y+32, r25	; 0x20
    209e:	8f 8f       	std	Y+31, r24	; 0x1f
    20a0:	8f 8d       	ldd	r24, Y+31	; 0x1f
    20a2:	98 a1       	ldd	r25, Y+32	; 0x20
    20a4:	01 97       	sbiw	r24, 0x01	; 1
    20a6:	f1 f7       	brne	.-4      	; 0x20a4 <led_flasing+0x2e8>
    20a8:	98 a3       	std	Y+32, r25	; 0x20
    20aa:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    20ac:	89 a1       	ldd	r24, Y+33	; 0x21
    20ae:	9a a1       	ldd	r25, Y+34	; 0x22
    20b0:	01 97       	sbiw	r24, 0x01	; 1
    20b2:	9a a3       	std	Y+34, r25	; 0x22
    20b4:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    20b6:	89 a1       	ldd	r24, Y+33	; 0x21
    20b8:	9a a1       	ldd	r25, Y+34	; 0x22
    20ba:	00 97       	sbiw	r24, 0x00	; 0
    20bc:	69 f7       	brne	.-38     	; 0x2098 <led_flasing+0x2dc>
    20be:	14 c0       	rjmp	.+40     	; 0x20e8 <led_flasing+0x32c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    20c0:	6b a1       	ldd	r22, Y+35	; 0x23
    20c2:	7c a1       	ldd	r23, Y+36	; 0x24
    20c4:	8d a1       	ldd	r24, Y+37	; 0x25
    20c6:	9e a1       	ldd	r25, Y+38	; 0x26
    20c8:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
    20cc:	dc 01       	movw	r26, r24
    20ce:	cb 01       	movw	r24, r22
    20d0:	9a a3       	std	Y+34, r25	; 0x22
    20d2:	89 a3       	std	Y+33, r24	; 0x21
    20d4:	89 a1       	ldd	r24, Y+33	; 0x21
    20d6:	9a a1       	ldd	r25, Y+34	; 0x22
    20d8:	9e 8f       	std	Y+30, r25	; 0x1e
    20da:	8d 8f       	std	Y+29, r24	; 0x1d
    20dc:	8d 8d       	ldd	r24, Y+29	; 0x1d
    20de:	9e 8d       	ldd	r25, Y+30	; 0x1e
    20e0:	01 97       	sbiw	r24, 0x01	; 1
    20e2:	f1 f7       	brne	.-4      	; 0x20e0 <led_flasing+0x324>
    20e4:	9e 8f       	std	Y+30, r25	; 0x1e
    20e6:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(100);
	led_setState(led, LED_OFF);
    20e8:	fe 01       	movw	r30, r28
    20ea:	e9 5b       	subi	r30, 0xB9	; 185
    20ec:	ff 4f       	sbci	r31, 0xFF	; 255
    20ee:	80 81       	ld	r24, Z
    20f0:	91 81       	ldd	r25, Z+1	; 0x01
    20f2:	60 e0       	ldi	r22, 0x00	; 0
    20f4:	70 e0       	ldi	r23, 0x00	; 0
    20f6:	0e 94 9e 0d 	call	0x1b3c	; 0x1b3c <led_setState>
    20fa:	80 e0       	ldi	r24, 0x00	; 0
    20fc:	90 e0       	ldi	r25, 0x00	; 0
    20fe:	a8 ec       	ldi	r26, 0xC8	; 200
    2100:	b2 e4       	ldi	r27, 0x42	; 66
    2102:	89 8f       	std	Y+25, r24	; 0x19
    2104:	9a 8f       	std	Y+26, r25	; 0x1a
    2106:	ab 8f       	std	Y+27, r26	; 0x1b
    2108:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    210a:	69 8d       	ldd	r22, Y+25	; 0x19
    210c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    210e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2110:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2112:	20 e0       	ldi	r18, 0x00	; 0
    2114:	30 e0       	ldi	r19, 0x00	; 0
    2116:	4a e7       	ldi	r20, 0x7A	; 122
    2118:	55 e4       	ldi	r21, 0x45	; 69
    211a:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
    211e:	dc 01       	movw	r26, r24
    2120:	cb 01       	movw	r24, r22
    2122:	8d 8b       	std	Y+21, r24	; 0x15
    2124:	9e 8b       	std	Y+22, r25	; 0x16
    2126:	af 8b       	std	Y+23, r26	; 0x17
    2128:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    212a:	6d 89       	ldd	r22, Y+21	; 0x15
    212c:	7e 89       	ldd	r23, Y+22	; 0x16
    212e:	8f 89       	ldd	r24, Y+23	; 0x17
    2130:	98 8d       	ldd	r25, Y+24	; 0x18
    2132:	20 e0       	ldi	r18, 0x00	; 0
    2134:	30 e0       	ldi	r19, 0x00	; 0
    2136:	40 e8       	ldi	r20, 0x80	; 128
    2138:	5f e3       	ldi	r21, 0x3F	; 63
    213a:	0e 94 dd 14 	call	0x29ba	; 0x29ba <__ltsf2>
    213e:	88 23       	and	r24, r24
    2140:	2c f4       	brge	.+10     	; 0x214c <led_flasing+0x390>
		__ticks = 1;
    2142:	81 e0       	ldi	r24, 0x01	; 1
    2144:	90 e0       	ldi	r25, 0x00	; 0
    2146:	9c 8b       	std	Y+20, r25	; 0x14
    2148:	8b 8b       	std	Y+19, r24	; 0x13
    214a:	3f c0       	rjmp	.+126    	; 0x21ca <led_flasing+0x40e>
	else if (__tmp > 65535)
    214c:	6d 89       	ldd	r22, Y+21	; 0x15
    214e:	7e 89       	ldd	r23, Y+22	; 0x16
    2150:	8f 89       	ldd	r24, Y+23	; 0x17
    2152:	98 8d       	ldd	r25, Y+24	; 0x18
    2154:	20 e0       	ldi	r18, 0x00	; 0
    2156:	3f ef       	ldi	r19, 0xFF	; 255
    2158:	4f e7       	ldi	r20, 0x7F	; 127
    215a:	57 e4       	ldi	r21, 0x47	; 71
    215c:	0e 94 7d 14 	call	0x28fa	; 0x28fa <__gtsf2>
    2160:	18 16       	cp	r1, r24
    2162:	4c f5       	brge	.+82     	; 0x21b6 <led_flasing+0x3fa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2164:	69 8d       	ldd	r22, Y+25	; 0x19
    2166:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2168:	8b 8d       	ldd	r24, Y+27	; 0x1b
    216a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    216c:	20 e0       	ldi	r18, 0x00	; 0
    216e:	30 e0       	ldi	r19, 0x00	; 0
    2170:	40 e2       	ldi	r20, 0x20	; 32
    2172:	51 e4       	ldi	r21, 0x41	; 65
    2174:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
    2178:	dc 01       	movw	r26, r24
    217a:	cb 01       	movw	r24, r22
    217c:	bc 01       	movw	r22, r24
    217e:	cd 01       	movw	r24, r26
    2180:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
    2184:	dc 01       	movw	r26, r24
    2186:	cb 01       	movw	r24, r22
    2188:	9c 8b       	std	Y+20, r25	; 0x14
    218a:	8b 8b       	std	Y+19, r24	; 0x13
    218c:	0f c0       	rjmp	.+30     	; 0x21ac <led_flasing+0x3f0>
    218e:	80 e9       	ldi	r24, 0x90	; 144
    2190:	91 e0       	ldi	r25, 0x01	; 1
    2192:	9a 8b       	std	Y+18, r25	; 0x12
    2194:	89 8b       	std	Y+17, r24	; 0x11
    2196:	89 89       	ldd	r24, Y+17	; 0x11
    2198:	9a 89       	ldd	r25, Y+18	; 0x12
    219a:	01 97       	sbiw	r24, 0x01	; 1
    219c:	f1 f7       	brne	.-4      	; 0x219a <led_flasing+0x3de>
    219e:	9a 8b       	std	Y+18, r25	; 0x12
    21a0:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    21a2:	8b 89       	ldd	r24, Y+19	; 0x13
    21a4:	9c 89       	ldd	r25, Y+20	; 0x14
    21a6:	01 97       	sbiw	r24, 0x01	; 1
    21a8:	9c 8b       	std	Y+20, r25	; 0x14
    21aa:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    21ac:	8b 89       	ldd	r24, Y+19	; 0x13
    21ae:	9c 89       	ldd	r25, Y+20	; 0x14
    21b0:	00 97       	sbiw	r24, 0x00	; 0
    21b2:	69 f7       	brne	.-38     	; 0x218e <led_flasing+0x3d2>
    21b4:	14 c0       	rjmp	.+40     	; 0x21de <led_flasing+0x422>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    21b6:	6d 89       	ldd	r22, Y+21	; 0x15
    21b8:	7e 89       	ldd	r23, Y+22	; 0x16
    21ba:	8f 89       	ldd	r24, Y+23	; 0x17
    21bc:	98 8d       	ldd	r25, Y+24	; 0x18
    21be:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
    21c2:	dc 01       	movw	r26, r24
    21c4:	cb 01       	movw	r24, r22
    21c6:	9c 8b       	std	Y+20, r25	; 0x14
    21c8:	8b 8b       	std	Y+19, r24	; 0x13
    21ca:	8b 89       	ldd	r24, Y+19	; 0x13
    21cc:	9c 89       	ldd	r25, Y+20	; 0x14
    21ce:	98 8b       	std	Y+16, r25	; 0x10
    21d0:	8f 87       	std	Y+15, r24	; 0x0f
    21d2:	8f 85       	ldd	r24, Y+15	; 0x0f
    21d4:	98 89       	ldd	r25, Y+16	; 0x10
    21d6:	01 97       	sbiw	r24, 0x01	; 1
    21d8:	f1 f7       	brne	.-4      	; 0x21d6 <led_flasing+0x41a>
    21da:	98 8b       	std	Y+16, r25	; 0x10
    21dc:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(100);
	led_setState(led, LED_ON);
    21de:	fe 01       	movw	r30, r28
    21e0:	e9 5b       	subi	r30, 0xB9	; 185
    21e2:	ff 4f       	sbci	r31, 0xFF	; 255
    21e4:	80 81       	ld	r24, Z
    21e6:	91 81       	ldd	r25, Z+1	; 0x01
    21e8:	61 e0       	ldi	r22, 0x01	; 1
    21ea:	70 e0       	ldi	r23, 0x00	; 0
    21ec:	0e 94 9e 0d 	call	0x1b3c	; 0x1b3c <led_setState>
    21f0:	80 e0       	ldi	r24, 0x00	; 0
    21f2:	90 e0       	ldi	r25, 0x00	; 0
    21f4:	a8 ec       	ldi	r26, 0xC8	; 200
    21f6:	b2 e4       	ldi	r27, 0x42	; 66
    21f8:	8b 87       	std	Y+11, r24	; 0x0b
    21fa:	9c 87       	std	Y+12, r25	; 0x0c
    21fc:	ad 87       	std	Y+13, r26	; 0x0d
    21fe:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2200:	6b 85       	ldd	r22, Y+11	; 0x0b
    2202:	7c 85       	ldd	r23, Y+12	; 0x0c
    2204:	8d 85       	ldd	r24, Y+13	; 0x0d
    2206:	9e 85       	ldd	r25, Y+14	; 0x0e
    2208:	20 e0       	ldi	r18, 0x00	; 0
    220a:	30 e0       	ldi	r19, 0x00	; 0
    220c:	4a e7       	ldi	r20, 0x7A	; 122
    220e:	55 e4       	ldi	r21, 0x45	; 69
    2210:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
    2214:	dc 01       	movw	r26, r24
    2216:	cb 01       	movw	r24, r22
    2218:	8f 83       	std	Y+7, r24	; 0x07
    221a:	98 87       	std	Y+8, r25	; 0x08
    221c:	a9 87       	std	Y+9, r26	; 0x09
    221e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2220:	6f 81       	ldd	r22, Y+7	; 0x07
    2222:	78 85       	ldd	r23, Y+8	; 0x08
    2224:	89 85       	ldd	r24, Y+9	; 0x09
    2226:	9a 85       	ldd	r25, Y+10	; 0x0a
    2228:	20 e0       	ldi	r18, 0x00	; 0
    222a:	30 e0       	ldi	r19, 0x00	; 0
    222c:	40 e8       	ldi	r20, 0x80	; 128
    222e:	5f e3       	ldi	r21, 0x3F	; 63
    2230:	0e 94 dd 14 	call	0x29ba	; 0x29ba <__ltsf2>
    2234:	88 23       	and	r24, r24
    2236:	2c f4       	brge	.+10     	; 0x2242 <led_flasing+0x486>
		__ticks = 1;
    2238:	81 e0       	ldi	r24, 0x01	; 1
    223a:	90 e0       	ldi	r25, 0x00	; 0
    223c:	9e 83       	std	Y+6, r25	; 0x06
    223e:	8d 83       	std	Y+5, r24	; 0x05
    2240:	3f c0       	rjmp	.+126    	; 0x22c0 <led_flasing+0x504>
	else if (__tmp > 65535)
    2242:	6f 81       	ldd	r22, Y+7	; 0x07
    2244:	78 85       	ldd	r23, Y+8	; 0x08
    2246:	89 85       	ldd	r24, Y+9	; 0x09
    2248:	9a 85       	ldd	r25, Y+10	; 0x0a
    224a:	20 e0       	ldi	r18, 0x00	; 0
    224c:	3f ef       	ldi	r19, 0xFF	; 255
    224e:	4f e7       	ldi	r20, 0x7F	; 127
    2250:	57 e4       	ldi	r21, 0x47	; 71
    2252:	0e 94 7d 14 	call	0x28fa	; 0x28fa <__gtsf2>
    2256:	18 16       	cp	r1, r24
    2258:	4c f5       	brge	.+82     	; 0x22ac <led_flasing+0x4f0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    225a:	6b 85       	ldd	r22, Y+11	; 0x0b
    225c:	7c 85       	ldd	r23, Y+12	; 0x0c
    225e:	8d 85       	ldd	r24, Y+13	; 0x0d
    2260:	9e 85       	ldd	r25, Y+14	; 0x0e
    2262:	20 e0       	ldi	r18, 0x00	; 0
    2264:	30 e0       	ldi	r19, 0x00	; 0
    2266:	40 e2       	ldi	r20, 0x20	; 32
    2268:	51 e4       	ldi	r21, 0x41	; 65
    226a:	0e 94 83 13 	call	0x2706	; 0x2706 <__mulsf3>
    226e:	dc 01       	movw	r26, r24
    2270:	cb 01       	movw	r24, r22
    2272:	bc 01       	movw	r22, r24
    2274:	cd 01       	movw	r24, r26
    2276:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
    227a:	dc 01       	movw	r26, r24
    227c:	cb 01       	movw	r24, r22
    227e:	9e 83       	std	Y+6, r25	; 0x06
    2280:	8d 83       	std	Y+5, r24	; 0x05
    2282:	0f c0       	rjmp	.+30     	; 0x22a2 <led_flasing+0x4e6>
    2284:	80 e9       	ldi	r24, 0x90	; 144
    2286:	91 e0       	ldi	r25, 0x01	; 1
    2288:	9c 83       	std	Y+4, r25	; 0x04
    228a:	8b 83       	std	Y+3, r24	; 0x03
    228c:	8b 81       	ldd	r24, Y+3	; 0x03
    228e:	9c 81       	ldd	r25, Y+4	; 0x04
    2290:	01 97       	sbiw	r24, 0x01	; 1
    2292:	f1 f7       	brne	.-4      	; 0x2290 <led_flasing+0x4d4>
    2294:	9c 83       	std	Y+4, r25	; 0x04
    2296:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2298:	8d 81       	ldd	r24, Y+5	; 0x05
    229a:	9e 81       	ldd	r25, Y+6	; 0x06
    229c:	01 97       	sbiw	r24, 0x01	; 1
    229e:	9e 83       	std	Y+6, r25	; 0x06
    22a0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    22a2:	8d 81       	ldd	r24, Y+5	; 0x05
    22a4:	9e 81       	ldd	r25, Y+6	; 0x06
    22a6:	00 97       	sbiw	r24, 0x00	; 0
    22a8:	69 f7       	brne	.-38     	; 0x2284 <led_flasing+0x4c8>
    22aa:	14 c0       	rjmp	.+40     	; 0x22d4 <led_flasing+0x518>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    22ac:	6f 81       	ldd	r22, Y+7	; 0x07
    22ae:	78 85       	ldd	r23, Y+8	; 0x08
    22b0:	89 85       	ldd	r24, Y+9	; 0x09
    22b2:	9a 85       	ldd	r25, Y+10	; 0x0a
    22b4:	0e 94 ad 11 	call	0x235a	; 0x235a <__fixunssfsi>
    22b8:	dc 01       	movw	r26, r24
    22ba:	cb 01       	movw	r24, r22
    22bc:	9e 83       	std	Y+6, r25	; 0x06
    22be:	8d 83       	std	Y+5, r24	; 0x05
    22c0:	8d 81       	ldd	r24, Y+5	; 0x05
    22c2:	9e 81       	ldd	r25, Y+6	; 0x06
    22c4:	9a 83       	std	Y+2, r25	; 0x02
    22c6:	89 83       	std	Y+1, r24	; 0x01
    22c8:	89 81       	ldd	r24, Y+1	; 0x01
    22ca:	9a 81       	ldd	r25, Y+2	; 0x02
    22cc:	01 97       	sbiw	r24, 0x01	; 1
    22ce:	f1 f7       	brne	.-4      	; 0x22cc <led_flasing+0x510>
    22d0:	9a 83       	std	Y+2, r25	; 0x02
    22d2:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(100);
}
    22d4:	c8 5b       	subi	r28, 0xB8	; 184
    22d6:	df 4f       	sbci	r29, 0xFF	; 255
    22d8:	0f b6       	in	r0, 0x3f	; 63
    22da:	f8 94       	cli
    22dc:	de bf       	out	0x3e, r29	; 62
    22de:	0f be       	out	0x3f, r0	; 63
    22e0:	cd bf       	out	0x3d, r28	; 61
    22e2:	cf 91       	pop	r28
    22e4:	df 91       	pop	r29
    22e6:	1f 91       	pop	r17
    22e8:	0f 91       	pop	r16
    22ea:	08 95       	ret

000022ec <main>:
    22ec:	df 93       	push	r29
    22ee:	cf 93       	push	r28
    22f0:	cd b7       	in	r28, 0x3d	; 61
    22f2:	de b7       	in	r29, 0x3e	; 62
    22f4:	80 e0       	ldi	r24, 0x00	; 0
    22f6:	90 e0       	ldi	r25, 0x00	; 0
    22f8:	60 e0       	ldi	r22, 0x00	; 0
    22fa:	70 e0       	ldi	r23, 0x00	; 0
    22fc:	0e 94 9e 02 	call	0x53c	; 0x53c <led_Init>
    2300:	81 e0       	ldi	r24, 0x01	; 1
    2302:	90 e0       	ldi	r25, 0x00	; 0
    2304:	60 e0       	ldi	r22, 0x00	; 0
    2306:	70 e0       	ldi	r23, 0x00	; 0
    2308:	0e 94 9e 02 	call	0x53c	; 0x53c <led_Init>
    230c:	82 e0       	ldi	r24, 0x02	; 2
    230e:	90 e0       	ldi	r25, 0x00	; 0
    2310:	60 e0       	ldi	r22, 0x00	; 0
    2312:	70 e0       	ldi	r23, 0x00	; 0
    2314:	0e 94 9e 02 	call	0x53c	; 0x53c <led_Init>
    2318:	83 e0       	ldi	r24, 0x03	; 3
    231a:	90 e0       	ldi	r25, 0x00	; 0
    231c:	60 e0       	ldi	r22, 0x00	; 0
    231e:	70 e0       	ldi	r23, 0x00	; 0
    2320:	0e 94 9e 02 	call	0x53c	; 0x53c <led_Init>
    2324:	84 e0       	ldi	r24, 0x04	; 4
    2326:	90 e0       	ldi	r25, 0x00	; 0
    2328:	60 e0       	ldi	r22, 0x00	; 0
    232a:	70 e0       	ldi	r23, 0x00	; 0
    232c:	0e 94 9e 02 	call	0x53c	; 0x53c <led_Init>
    2330:	85 e0       	ldi	r24, 0x05	; 5
    2332:	90 e0       	ldi	r25, 0x00	; 0
    2334:	60 e0       	ldi	r22, 0x00	; 0
    2336:	70 e0       	ldi	r23, 0x00	; 0
    2338:	0e 94 9e 02 	call	0x53c	; 0x53c <led_Init>
    233c:	86 e0       	ldi	r24, 0x06	; 6
    233e:	90 e0       	ldi	r25, 0x00	; 0
    2340:	60 e0       	ldi	r22, 0x00	; 0
    2342:	70 e0       	ldi	r23, 0x00	; 0
    2344:	0e 94 9e 02 	call	0x53c	; 0x53c <led_Init>
    2348:	87 e0       	ldi	r24, 0x07	; 7
    234a:	90 e0       	ldi	r25, 0x00	; 0
    234c:	60 e0       	ldi	r22, 0x00	; 0
    234e:	70 e0       	ldi	r23, 0x00	; 0
    2350:	0e 94 9e 02 	call	0x53c	; 0x53c <led_Init>
    2354:	0e 94 27 03 	call	0x64e	; 0x64e <led_Update>
    2358:	fd cf       	rjmp	.-6      	; 0x2354 <main+0x68>

0000235a <__fixunssfsi>:
    235a:	ef 92       	push	r14
    235c:	ff 92       	push	r15
    235e:	0f 93       	push	r16
    2360:	1f 93       	push	r17
    2362:	7b 01       	movw	r14, r22
    2364:	8c 01       	movw	r16, r24
    2366:	20 e0       	ldi	r18, 0x00	; 0
    2368:	30 e0       	ldi	r19, 0x00	; 0
    236a:	40 e0       	ldi	r20, 0x00	; 0
    236c:	5f e4       	ldi	r21, 0x4F	; 79
    236e:	0e 94 ad 14 	call	0x295a	; 0x295a <__gesf2>
    2372:	88 23       	and	r24, r24
    2374:	8c f0       	brlt	.+34     	; 0x2398 <__fixunssfsi+0x3e>
    2376:	c8 01       	movw	r24, r16
    2378:	b7 01       	movw	r22, r14
    237a:	20 e0       	ldi	r18, 0x00	; 0
    237c:	30 e0       	ldi	r19, 0x00	; 0
    237e:	40 e0       	ldi	r20, 0x00	; 0
    2380:	5f e4       	ldi	r21, 0x4F	; 79
    2382:	0e 94 25 13 	call	0x264a	; 0x264a <__subsf3>
    2386:	0e 94 0d 15 	call	0x2a1a	; 0x2a1a <__fixsfsi>
    238a:	9b 01       	movw	r18, r22
    238c:	ac 01       	movw	r20, r24
    238e:	20 50       	subi	r18, 0x00	; 0
    2390:	30 40       	sbci	r19, 0x00	; 0
    2392:	40 40       	sbci	r20, 0x00	; 0
    2394:	50 48       	sbci	r21, 0x80	; 128
    2396:	06 c0       	rjmp	.+12     	; 0x23a4 <__fixunssfsi+0x4a>
    2398:	c8 01       	movw	r24, r16
    239a:	b7 01       	movw	r22, r14
    239c:	0e 94 0d 15 	call	0x2a1a	; 0x2a1a <__fixsfsi>
    23a0:	9b 01       	movw	r18, r22
    23a2:	ac 01       	movw	r20, r24
    23a4:	b9 01       	movw	r22, r18
    23a6:	ca 01       	movw	r24, r20
    23a8:	1f 91       	pop	r17
    23aa:	0f 91       	pop	r16
    23ac:	ff 90       	pop	r15
    23ae:	ef 90       	pop	r14
    23b0:	08 95       	ret

000023b2 <_fpadd_parts>:
    23b2:	a0 e0       	ldi	r26, 0x00	; 0
    23b4:	b0 e0       	ldi	r27, 0x00	; 0
    23b6:	ef ed       	ldi	r30, 0xDF	; 223
    23b8:	f1 e1       	ldi	r31, 0x11	; 17
    23ba:	0c 94 07 17 	jmp	0x2e0e	; 0x2e0e <__prologue_saves__>
    23be:	dc 01       	movw	r26, r24
    23c0:	2b 01       	movw	r4, r22
    23c2:	fa 01       	movw	r30, r20
    23c4:	9c 91       	ld	r25, X
    23c6:	92 30       	cpi	r25, 0x02	; 2
    23c8:	08 f4       	brcc	.+2      	; 0x23cc <_fpadd_parts+0x1a>
    23ca:	39 c1       	rjmp	.+626    	; 0x263e <_fpadd_parts+0x28c>
    23cc:	eb 01       	movw	r28, r22
    23ce:	88 81       	ld	r24, Y
    23d0:	82 30       	cpi	r24, 0x02	; 2
    23d2:	08 f4       	brcc	.+2      	; 0x23d6 <_fpadd_parts+0x24>
    23d4:	33 c1       	rjmp	.+614    	; 0x263c <_fpadd_parts+0x28a>
    23d6:	94 30       	cpi	r25, 0x04	; 4
    23d8:	69 f4       	brne	.+26     	; 0x23f4 <_fpadd_parts+0x42>
    23da:	84 30       	cpi	r24, 0x04	; 4
    23dc:	09 f0       	breq	.+2      	; 0x23e0 <_fpadd_parts+0x2e>
    23de:	2f c1       	rjmp	.+606    	; 0x263e <_fpadd_parts+0x28c>
    23e0:	11 96       	adiw	r26, 0x01	; 1
    23e2:	9c 91       	ld	r25, X
    23e4:	11 97       	sbiw	r26, 0x01	; 1
    23e6:	89 81       	ldd	r24, Y+1	; 0x01
    23e8:	98 17       	cp	r25, r24
    23ea:	09 f4       	brne	.+2      	; 0x23ee <_fpadd_parts+0x3c>
    23ec:	28 c1       	rjmp	.+592    	; 0x263e <_fpadd_parts+0x28c>
    23ee:	a0 e6       	ldi	r26, 0x60	; 96
    23f0:	b0 e0       	ldi	r27, 0x00	; 0
    23f2:	25 c1       	rjmp	.+586    	; 0x263e <_fpadd_parts+0x28c>
    23f4:	84 30       	cpi	r24, 0x04	; 4
    23f6:	09 f4       	brne	.+2      	; 0x23fa <_fpadd_parts+0x48>
    23f8:	21 c1       	rjmp	.+578    	; 0x263c <_fpadd_parts+0x28a>
    23fa:	82 30       	cpi	r24, 0x02	; 2
    23fc:	a9 f4       	brne	.+42     	; 0x2428 <_fpadd_parts+0x76>
    23fe:	92 30       	cpi	r25, 0x02	; 2
    2400:	09 f0       	breq	.+2      	; 0x2404 <_fpadd_parts+0x52>
    2402:	1d c1       	rjmp	.+570    	; 0x263e <_fpadd_parts+0x28c>
    2404:	9a 01       	movw	r18, r20
    2406:	ad 01       	movw	r20, r26
    2408:	88 e0       	ldi	r24, 0x08	; 8
    240a:	ea 01       	movw	r28, r20
    240c:	09 90       	ld	r0, Y+
    240e:	ae 01       	movw	r20, r28
    2410:	e9 01       	movw	r28, r18
    2412:	09 92       	st	Y+, r0
    2414:	9e 01       	movw	r18, r28
    2416:	81 50       	subi	r24, 0x01	; 1
    2418:	c1 f7       	brne	.-16     	; 0x240a <_fpadd_parts+0x58>
    241a:	e2 01       	movw	r28, r4
    241c:	89 81       	ldd	r24, Y+1	; 0x01
    241e:	11 96       	adiw	r26, 0x01	; 1
    2420:	9c 91       	ld	r25, X
    2422:	89 23       	and	r24, r25
    2424:	81 83       	std	Z+1, r24	; 0x01
    2426:	08 c1       	rjmp	.+528    	; 0x2638 <_fpadd_parts+0x286>
    2428:	92 30       	cpi	r25, 0x02	; 2
    242a:	09 f4       	brne	.+2      	; 0x242e <_fpadd_parts+0x7c>
    242c:	07 c1       	rjmp	.+526    	; 0x263c <_fpadd_parts+0x28a>
    242e:	12 96       	adiw	r26, 0x02	; 2
    2430:	2d 90       	ld	r2, X+
    2432:	3c 90       	ld	r3, X
    2434:	13 97       	sbiw	r26, 0x03	; 3
    2436:	eb 01       	movw	r28, r22
    2438:	8a 81       	ldd	r24, Y+2	; 0x02
    243a:	9b 81       	ldd	r25, Y+3	; 0x03
    243c:	14 96       	adiw	r26, 0x04	; 4
    243e:	ad 90       	ld	r10, X+
    2440:	bd 90       	ld	r11, X+
    2442:	cd 90       	ld	r12, X+
    2444:	dc 90       	ld	r13, X
    2446:	17 97       	sbiw	r26, 0x07	; 7
    2448:	ec 80       	ldd	r14, Y+4	; 0x04
    244a:	fd 80       	ldd	r15, Y+5	; 0x05
    244c:	0e 81       	ldd	r16, Y+6	; 0x06
    244e:	1f 81       	ldd	r17, Y+7	; 0x07
    2450:	91 01       	movw	r18, r2
    2452:	28 1b       	sub	r18, r24
    2454:	39 0b       	sbc	r19, r25
    2456:	b9 01       	movw	r22, r18
    2458:	37 ff       	sbrs	r19, 7
    245a:	04 c0       	rjmp	.+8      	; 0x2464 <_fpadd_parts+0xb2>
    245c:	66 27       	eor	r22, r22
    245e:	77 27       	eor	r23, r23
    2460:	62 1b       	sub	r22, r18
    2462:	73 0b       	sbc	r23, r19
    2464:	60 32       	cpi	r22, 0x20	; 32
    2466:	71 05       	cpc	r23, r1
    2468:	0c f0       	brlt	.+2      	; 0x246c <_fpadd_parts+0xba>
    246a:	61 c0       	rjmp	.+194    	; 0x252e <_fpadd_parts+0x17c>
    246c:	12 16       	cp	r1, r18
    246e:	13 06       	cpc	r1, r19
    2470:	6c f5       	brge	.+90     	; 0x24cc <_fpadd_parts+0x11a>
    2472:	37 01       	movw	r6, r14
    2474:	48 01       	movw	r8, r16
    2476:	06 2e       	mov	r0, r22
    2478:	04 c0       	rjmp	.+8      	; 0x2482 <_fpadd_parts+0xd0>
    247a:	96 94       	lsr	r9
    247c:	87 94       	ror	r8
    247e:	77 94       	ror	r7
    2480:	67 94       	ror	r6
    2482:	0a 94       	dec	r0
    2484:	d2 f7       	brpl	.-12     	; 0x247a <_fpadd_parts+0xc8>
    2486:	21 e0       	ldi	r18, 0x01	; 1
    2488:	30 e0       	ldi	r19, 0x00	; 0
    248a:	40 e0       	ldi	r20, 0x00	; 0
    248c:	50 e0       	ldi	r21, 0x00	; 0
    248e:	04 c0       	rjmp	.+8      	; 0x2498 <_fpadd_parts+0xe6>
    2490:	22 0f       	add	r18, r18
    2492:	33 1f       	adc	r19, r19
    2494:	44 1f       	adc	r20, r20
    2496:	55 1f       	adc	r21, r21
    2498:	6a 95       	dec	r22
    249a:	d2 f7       	brpl	.-12     	; 0x2490 <_fpadd_parts+0xde>
    249c:	21 50       	subi	r18, 0x01	; 1
    249e:	30 40       	sbci	r19, 0x00	; 0
    24a0:	40 40       	sbci	r20, 0x00	; 0
    24a2:	50 40       	sbci	r21, 0x00	; 0
    24a4:	2e 21       	and	r18, r14
    24a6:	3f 21       	and	r19, r15
    24a8:	40 23       	and	r20, r16
    24aa:	51 23       	and	r21, r17
    24ac:	21 15       	cp	r18, r1
    24ae:	31 05       	cpc	r19, r1
    24b0:	41 05       	cpc	r20, r1
    24b2:	51 05       	cpc	r21, r1
    24b4:	21 f0       	breq	.+8      	; 0x24be <_fpadd_parts+0x10c>
    24b6:	21 e0       	ldi	r18, 0x01	; 1
    24b8:	30 e0       	ldi	r19, 0x00	; 0
    24ba:	40 e0       	ldi	r20, 0x00	; 0
    24bc:	50 e0       	ldi	r21, 0x00	; 0
    24be:	79 01       	movw	r14, r18
    24c0:	8a 01       	movw	r16, r20
    24c2:	e6 28       	or	r14, r6
    24c4:	f7 28       	or	r15, r7
    24c6:	08 29       	or	r16, r8
    24c8:	19 29       	or	r17, r9
    24ca:	3c c0       	rjmp	.+120    	; 0x2544 <_fpadd_parts+0x192>
    24cc:	23 2b       	or	r18, r19
    24ce:	d1 f1       	breq	.+116    	; 0x2544 <_fpadd_parts+0x192>
    24d0:	26 0e       	add	r2, r22
    24d2:	37 1e       	adc	r3, r23
    24d4:	35 01       	movw	r6, r10
    24d6:	46 01       	movw	r8, r12
    24d8:	06 2e       	mov	r0, r22
    24da:	04 c0       	rjmp	.+8      	; 0x24e4 <_fpadd_parts+0x132>
    24dc:	96 94       	lsr	r9
    24de:	87 94       	ror	r8
    24e0:	77 94       	ror	r7
    24e2:	67 94       	ror	r6
    24e4:	0a 94       	dec	r0
    24e6:	d2 f7       	brpl	.-12     	; 0x24dc <_fpadd_parts+0x12a>
    24e8:	21 e0       	ldi	r18, 0x01	; 1
    24ea:	30 e0       	ldi	r19, 0x00	; 0
    24ec:	40 e0       	ldi	r20, 0x00	; 0
    24ee:	50 e0       	ldi	r21, 0x00	; 0
    24f0:	04 c0       	rjmp	.+8      	; 0x24fa <_fpadd_parts+0x148>
    24f2:	22 0f       	add	r18, r18
    24f4:	33 1f       	adc	r19, r19
    24f6:	44 1f       	adc	r20, r20
    24f8:	55 1f       	adc	r21, r21
    24fa:	6a 95       	dec	r22
    24fc:	d2 f7       	brpl	.-12     	; 0x24f2 <_fpadd_parts+0x140>
    24fe:	21 50       	subi	r18, 0x01	; 1
    2500:	30 40       	sbci	r19, 0x00	; 0
    2502:	40 40       	sbci	r20, 0x00	; 0
    2504:	50 40       	sbci	r21, 0x00	; 0
    2506:	2a 21       	and	r18, r10
    2508:	3b 21       	and	r19, r11
    250a:	4c 21       	and	r20, r12
    250c:	5d 21       	and	r21, r13
    250e:	21 15       	cp	r18, r1
    2510:	31 05       	cpc	r19, r1
    2512:	41 05       	cpc	r20, r1
    2514:	51 05       	cpc	r21, r1
    2516:	21 f0       	breq	.+8      	; 0x2520 <_fpadd_parts+0x16e>
    2518:	21 e0       	ldi	r18, 0x01	; 1
    251a:	30 e0       	ldi	r19, 0x00	; 0
    251c:	40 e0       	ldi	r20, 0x00	; 0
    251e:	50 e0       	ldi	r21, 0x00	; 0
    2520:	59 01       	movw	r10, r18
    2522:	6a 01       	movw	r12, r20
    2524:	a6 28       	or	r10, r6
    2526:	b7 28       	or	r11, r7
    2528:	c8 28       	or	r12, r8
    252a:	d9 28       	or	r13, r9
    252c:	0b c0       	rjmp	.+22     	; 0x2544 <_fpadd_parts+0x192>
    252e:	82 15       	cp	r24, r2
    2530:	93 05       	cpc	r25, r3
    2532:	2c f0       	brlt	.+10     	; 0x253e <_fpadd_parts+0x18c>
    2534:	1c 01       	movw	r2, r24
    2536:	aa 24       	eor	r10, r10
    2538:	bb 24       	eor	r11, r11
    253a:	65 01       	movw	r12, r10
    253c:	03 c0       	rjmp	.+6      	; 0x2544 <_fpadd_parts+0x192>
    253e:	ee 24       	eor	r14, r14
    2540:	ff 24       	eor	r15, r15
    2542:	87 01       	movw	r16, r14
    2544:	11 96       	adiw	r26, 0x01	; 1
    2546:	9c 91       	ld	r25, X
    2548:	d2 01       	movw	r26, r4
    254a:	11 96       	adiw	r26, 0x01	; 1
    254c:	8c 91       	ld	r24, X
    254e:	98 17       	cp	r25, r24
    2550:	09 f4       	brne	.+2      	; 0x2554 <_fpadd_parts+0x1a2>
    2552:	45 c0       	rjmp	.+138    	; 0x25de <_fpadd_parts+0x22c>
    2554:	99 23       	and	r25, r25
    2556:	39 f0       	breq	.+14     	; 0x2566 <_fpadd_parts+0x1b4>
    2558:	a8 01       	movw	r20, r16
    255a:	97 01       	movw	r18, r14
    255c:	2a 19       	sub	r18, r10
    255e:	3b 09       	sbc	r19, r11
    2560:	4c 09       	sbc	r20, r12
    2562:	5d 09       	sbc	r21, r13
    2564:	06 c0       	rjmp	.+12     	; 0x2572 <_fpadd_parts+0x1c0>
    2566:	a6 01       	movw	r20, r12
    2568:	95 01       	movw	r18, r10
    256a:	2e 19       	sub	r18, r14
    256c:	3f 09       	sbc	r19, r15
    256e:	40 0b       	sbc	r20, r16
    2570:	51 0b       	sbc	r21, r17
    2572:	57 fd       	sbrc	r21, 7
    2574:	08 c0       	rjmp	.+16     	; 0x2586 <_fpadd_parts+0x1d4>
    2576:	11 82       	std	Z+1, r1	; 0x01
    2578:	33 82       	std	Z+3, r3	; 0x03
    257a:	22 82       	std	Z+2, r2	; 0x02
    257c:	24 83       	std	Z+4, r18	; 0x04
    257e:	35 83       	std	Z+5, r19	; 0x05
    2580:	46 83       	std	Z+6, r20	; 0x06
    2582:	57 83       	std	Z+7, r21	; 0x07
    2584:	1d c0       	rjmp	.+58     	; 0x25c0 <_fpadd_parts+0x20e>
    2586:	81 e0       	ldi	r24, 0x01	; 1
    2588:	81 83       	std	Z+1, r24	; 0x01
    258a:	33 82       	std	Z+3, r3	; 0x03
    258c:	22 82       	std	Z+2, r2	; 0x02
    258e:	88 27       	eor	r24, r24
    2590:	99 27       	eor	r25, r25
    2592:	dc 01       	movw	r26, r24
    2594:	82 1b       	sub	r24, r18
    2596:	93 0b       	sbc	r25, r19
    2598:	a4 0b       	sbc	r26, r20
    259a:	b5 0b       	sbc	r27, r21
    259c:	84 83       	std	Z+4, r24	; 0x04
    259e:	95 83       	std	Z+5, r25	; 0x05
    25a0:	a6 83       	std	Z+6, r26	; 0x06
    25a2:	b7 83       	std	Z+7, r27	; 0x07
    25a4:	0d c0       	rjmp	.+26     	; 0x25c0 <_fpadd_parts+0x20e>
    25a6:	22 0f       	add	r18, r18
    25a8:	33 1f       	adc	r19, r19
    25aa:	44 1f       	adc	r20, r20
    25ac:	55 1f       	adc	r21, r21
    25ae:	24 83       	std	Z+4, r18	; 0x04
    25b0:	35 83       	std	Z+5, r19	; 0x05
    25b2:	46 83       	std	Z+6, r20	; 0x06
    25b4:	57 83       	std	Z+7, r21	; 0x07
    25b6:	82 81       	ldd	r24, Z+2	; 0x02
    25b8:	93 81       	ldd	r25, Z+3	; 0x03
    25ba:	01 97       	sbiw	r24, 0x01	; 1
    25bc:	93 83       	std	Z+3, r25	; 0x03
    25be:	82 83       	std	Z+2, r24	; 0x02
    25c0:	24 81       	ldd	r18, Z+4	; 0x04
    25c2:	35 81       	ldd	r19, Z+5	; 0x05
    25c4:	46 81       	ldd	r20, Z+6	; 0x06
    25c6:	57 81       	ldd	r21, Z+7	; 0x07
    25c8:	da 01       	movw	r26, r20
    25ca:	c9 01       	movw	r24, r18
    25cc:	01 97       	sbiw	r24, 0x01	; 1
    25ce:	a1 09       	sbc	r26, r1
    25d0:	b1 09       	sbc	r27, r1
    25d2:	8f 5f       	subi	r24, 0xFF	; 255
    25d4:	9f 4f       	sbci	r25, 0xFF	; 255
    25d6:	af 4f       	sbci	r26, 0xFF	; 255
    25d8:	bf 43       	sbci	r27, 0x3F	; 63
    25da:	28 f3       	brcs	.-54     	; 0x25a6 <_fpadd_parts+0x1f4>
    25dc:	0b c0       	rjmp	.+22     	; 0x25f4 <_fpadd_parts+0x242>
    25de:	91 83       	std	Z+1, r25	; 0x01
    25e0:	33 82       	std	Z+3, r3	; 0x03
    25e2:	22 82       	std	Z+2, r2	; 0x02
    25e4:	ea 0c       	add	r14, r10
    25e6:	fb 1c       	adc	r15, r11
    25e8:	0c 1d       	adc	r16, r12
    25ea:	1d 1d       	adc	r17, r13
    25ec:	e4 82       	std	Z+4, r14	; 0x04
    25ee:	f5 82       	std	Z+5, r15	; 0x05
    25f0:	06 83       	std	Z+6, r16	; 0x06
    25f2:	17 83       	std	Z+7, r17	; 0x07
    25f4:	83 e0       	ldi	r24, 0x03	; 3
    25f6:	80 83       	st	Z, r24
    25f8:	24 81       	ldd	r18, Z+4	; 0x04
    25fa:	35 81       	ldd	r19, Z+5	; 0x05
    25fc:	46 81       	ldd	r20, Z+6	; 0x06
    25fe:	57 81       	ldd	r21, Z+7	; 0x07
    2600:	57 ff       	sbrs	r21, 7
    2602:	1a c0       	rjmp	.+52     	; 0x2638 <_fpadd_parts+0x286>
    2604:	c9 01       	movw	r24, r18
    2606:	aa 27       	eor	r26, r26
    2608:	97 fd       	sbrc	r25, 7
    260a:	a0 95       	com	r26
    260c:	ba 2f       	mov	r27, r26
    260e:	81 70       	andi	r24, 0x01	; 1
    2610:	90 70       	andi	r25, 0x00	; 0
    2612:	a0 70       	andi	r26, 0x00	; 0
    2614:	b0 70       	andi	r27, 0x00	; 0
    2616:	56 95       	lsr	r21
    2618:	47 95       	ror	r20
    261a:	37 95       	ror	r19
    261c:	27 95       	ror	r18
    261e:	82 2b       	or	r24, r18
    2620:	93 2b       	or	r25, r19
    2622:	a4 2b       	or	r26, r20
    2624:	b5 2b       	or	r27, r21
    2626:	84 83       	std	Z+4, r24	; 0x04
    2628:	95 83       	std	Z+5, r25	; 0x05
    262a:	a6 83       	std	Z+6, r26	; 0x06
    262c:	b7 83       	std	Z+7, r27	; 0x07
    262e:	82 81       	ldd	r24, Z+2	; 0x02
    2630:	93 81       	ldd	r25, Z+3	; 0x03
    2632:	01 96       	adiw	r24, 0x01	; 1
    2634:	93 83       	std	Z+3, r25	; 0x03
    2636:	82 83       	std	Z+2, r24	; 0x02
    2638:	df 01       	movw	r26, r30
    263a:	01 c0       	rjmp	.+2      	; 0x263e <_fpadd_parts+0x28c>
    263c:	d2 01       	movw	r26, r4
    263e:	cd 01       	movw	r24, r26
    2640:	cd b7       	in	r28, 0x3d	; 61
    2642:	de b7       	in	r29, 0x3e	; 62
    2644:	e2 e1       	ldi	r30, 0x12	; 18
    2646:	0c 94 23 17 	jmp	0x2e46	; 0x2e46 <__epilogue_restores__>

0000264a <__subsf3>:
    264a:	a0 e2       	ldi	r26, 0x20	; 32
    264c:	b0 e0       	ldi	r27, 0x00	; 0
    264e:	eb e2       	ldi	r30, 0x2B	; 43
    2650:	f3 e1       	ldi	r31, 0x13	; 19
    2652:	0c 94 13 17 	jmp	0x2e26	; 0x2e26 <__prologue_saves__+0x18>
    2656:	69 83       	std	Y+1, r22	; 0x01
    2658:	7a 83       	std	Y+2, r23	; 0x02
    265a:	8b 83       	std	Y+3, r24	; 0x03
    265c:	9c 83       	std	Y+4, r25	; 0x04
    265e:	2d 83       	std	Y+5, r18	; 0x05
    2660:	3e 83       	std	Y+6, r19	; 0x06
    2662:	4f 83       	std	Y+7, r20	; 0x07
    2664:	58 87       	std	Y+8, r21	; 0x08
    2666:	e9 e0       	ldi	r30, 0x09	; 9
    2668:	ee 2e       	mov	r14, r30
    266a:	f1 2c       	mov	r15, r1
    266c:	ec 0e       	add	r14, r28
    266e:	fd 1e       	adc	r15, r29
    2670:	ce 01       	movw	r24, r28
    2672:	01 96       	adiw	r24, 0x01	; 1
    2674:	b7 01       	movw	r22, r14
    2676:	0e 94 36 16 	call	0x2c6c	; 0x2c6c <__unpack_f>
    267a:	8e 01       	movw	r16, r28
    267c:	0f 5e       	subi	r16, 0xEF	; 239
    267e:	1f 4f       	sbci	r17, 0xFF	; 255
    2680:	ce 01       	movw	r24, r28
    2682:	05 96       	adiw	r24, 0x05	; 5
    2684:	b8 01       	movw	r22, r16
    2686:	0e 94 36 16 	call	0x2c6c	; 0x2c6c <__unpack_f>
    268a:	8a 89       	ldd	r24, Y+18	; 0x12
    268c:	91 e0       	ldi	r25, 0x01	; 1
    268e:	89 27       	eor	r24, r25
    2690:	8a 8b       	std	Y+18, r24	; 0x12
    2692:	c7 01       	movw	r24, r14
    2694:	b8 01       	movw	r22, r16
    2696:	ae 01       	movw	r20, r28
    2698:	47 5e       	subi	r20, 0xE7	; 231
    269a:	5f 4f       	sbci	r21, 0xFF	; 255
    269c:	0e 94 d9 11 	call	0x23b2	; 0x23b2 <_fpadd_parts>
    26a0:	0e 94 61 15 	call	0x2ac2	; 0x2ac2 <__pack_f>
    26a4:	a0 96       	adiw	r28, 0x20	; 32
    26a6:	e6 e0       	ldi	r30, 0x06	; 6
    26a8:	0c 94 2f 17 	jmp	0x2e5e	; 0x2e5e <__epilogue_restores__+0x18>

000026ac <__addsf3>:
    26ac:	a0 e2       	ldi	r26, 0x20	; 32
    26ae:	b0 e0       	ldi	r27, 0x00	; 0
    26b0:	ec e5       	ldi	r30, 0x5C	; 92
    26b2:	f3 e1       	ldi	r31, 0x13	; 19
    26b4:	0c 94 13 17 	jmp	0x2e26	; 0x2e26 <__prologue_saves__+0x18>
    26b8:	69 83       	std	Y+1, r22	; 0x01
    26ba:	7a 83       	std	Y+2, r23	; 0x02
    26bc:	8b 83       	std	Y+3, r24	; 0x03
    26be:	9c 83       	std	Y+4, r25	; 0x04
    26c0:	2d 83       	std	Y+5, r18	; 0x05
    26c2:	3e 83       	std	Y+6, r19	; 0x06
    26c4:	4f 83       	std	Y+7, r20	; 0x07
    26c6:	58 87       	std	Y+8, r21	; 0x08
    26c8:	f9 e0       	ldi	r31, 0x09	; 9
    26ca:	ef 2e       	mov	r14, r31
    26cc:	f1 2c       	mov	r15, r1
    26ce:	ec 0e       	add	r14, r28
    26d0:	fd 1e       	adc	r15, r29
    26d2:	ce 01       	movw	r24, r28
    26d4:	01 96       	adiw	r24, 0x01	; 1
    26d6:	b7 01       	movw	r22, r14
    26d8:	0e 94 36 16 	call	0x2c6c	; 0x2c6c <__unpack_f>
    26dc:	8e 01       	movw	r16, r28
    26de:	0f 5e       	subi	r16, 0xEF	; 239
    26e0:	1f 4f       	sbci	r17, 0xFF	; 255
    26e2:	ce 01       	movw	r24, r28
    26e4:	05 96       	adiw	r24, 0x05	; 5
    26e6:	b8 01       	movw	r22, r16
    26e8:	0e 94 36 16 	call	0x2c6c	; 0x2c6c <__unpack_f>
    26ec:	c7 01       	movw	r24, r14
    26ee:	b8 01       	movw	r22, r16
    26f0:	ae 01       	movw	r20, r28
    26f2:	47 5e       	subi	r20, 0xE7	; 231
    26f4:	5f 4f       	sbci	r21, 0xFF	; 255
    26f6:	0e 94 d9 11 	call	0x23b2	; 0x23b2 <_fpadd_parts>
    26fa:	0e 94 61 15 	call	0x2ac2	; 0x2ac2 <__pack_f>
    26fe:	a0 96       	adiw	r28, 0x20	; 32
    2700:	e6 e0       	ldi	r30, 0x06	; 6
    2702:	0c 94 2f 17 	jmp	0x2e5e	; 0x2e5e <__epilogue_restores__+0x18>

00002706 <__mulsf3>:
    2706:	a0 e2       	ldi	r26, 0x20	; 32
    2708:	b0 e0       	ldi	r27, 0x00	; 0
    270a:	e9 e8       	ldi	r30, 0x89	; 137
    270c:	f3 e1       	ldi	r31, 0x13	; 19
    270e:	0c 94 07 17 	jmp	0x2e0e	; 0x2e0e <__prologue_saves__>
    2712:	69 83       	std	Y+1, r22	; 0x01
    2714:	7a 83       	std	Y+2, r23	; 0x02
    2716:	8b 83       	std	Y+3, r24	; 0x03
    2718:	9c 83       	std	Y+4, r25	; 0x04
    271a:	2d 83       	std	Y+5, r18	; 0x05
    271c:	3e 83       	std	Y+6, r19	; 0x06
    271e:	4f 83       	std	Y+7, r20	; 0x07
    2720:	58 87       	std	Y+8, r21	; 0x08
    2722:	ce 01       	movw	r24, r28
    2724:	01 96       	adiw	r24, 0x01	; 1
    2726:	be 01       	movw	r22, r28
    2728:	67 5f       	subi	r22, 0xF7	; 247
    272a:	7f 4f       	sbci	r23, 0xFF	; 255
    272c:	0e 94 36 16 	call	0x2c6c	; 0x2c6c <__unpack_f>
    2730:	ce 01       	movw	r24, r28
    2732:	05 96       	adiw	r24, 0x05	; 5
    2734:	be 01       	movw	r22, r28
    2736:	6f 5e       	subi	r22, 0xEF	; 239
    2738:	7f 4f       	sbci	r23, 0xFF	; 255
    273a:	0e 94 36 16 	call	0x2c6c	; 0x2c6c <__unpack_f>
    273e:	99 85       	ldd	r25, Y+9	; 0x09
    2740:	92 30       	cpi	r25, 0x02	; 2
    2742:	88 f0       	brcs	.+34     	; 0x2766 <__mulsf3+0x60>
    2744:	89 89       	ldd	r24, Y+17	; 0x11
    2746:	82 30       	cpi	r24, 0x02	; 2
    2748:	c8 f0       	brcs	.+50     	; 0x277c <__mulsf3+0x76>
    274a:	94 30       	cpi	r25, 0x04	; 4
    274c:	19 f4       	brne	.+6      	; 0x2754 <__mulsf3+0x4e>
    274e:	82 30       	cpi	r24, 0x02	; 2
    2750:	51 f4       	brne	.+20     	; 0x2766 <__mulsf3+0x60>
    2752:	04 c0       	rjmp	.+8      	; 0x275c <__mulsf3+0x56>
    2754:	84 30       	cpi	r24, 0x04	; 4
    2756:	29 f4       	brne	.+10     	; 0x2762 <__mulsf3+0x5c>
    2758:	92 30       	cpi	r25, 0x02	; 2
    275a:	81 f4       	brne	.+32     	; 0x277c <__mulsf3+0x76>
    275c:	80 e6       	ldi	r24, 0x60	; 96
    275e:	90 e0       	ldi	r25, 0x00	; 0
    2760:	c6 c0       	rjmp	.+396    	; 0x28ee <__mulsf3+0x1e8>
    2762:	92 30       	cpi	r25, 0x02	; 2
    2764:	49 f4       	brne	.+18     	; 0x2778 <__mulsf3+0x72>
    2766:	20 e0       	ldi	r18, 0x00	; 0
    2768:	9a 85       	ldd	r25, Y+10	; 0x0a
    276a:	8a 89       	ldd	r24, Y+18	; 0x12
    276c:	98 13       	cpse	r25, r24
    276e:	21 e0       	ldi	r18, 0x01	; 1
    2770:	2a 87       	std	Y+10, r18	; 0x0a
    2772:	ce 01       	movw	r24, r28
    2774:	09 96       	adiw	r24, 0x09	; 9
    2776:	bb c0       	rjmp	.+374    	; 0x28ee <__mulsf3+0x1e8>
    2778:	82 30       	cpi	r24, 0x02	; 2
    277a:	49 f4       	brne	.+18     	; 0x278e <__mulsf3+0x88>
    277c:	20 e0       	ldi	r18, 0x00	; 0
    277e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2780:	8a 89       	ldd	r24, Y+18	; 0x12
    2782:	98 13       	cpse	r25, r24
    2784:	21 e0       	ldi	r18, 0x01	; 1
    2786:	2a 8b       	std	Y+18, r18	; 0x12
    2788:	ce 01       	movw	r24, r28
    278a:	41 96       	adiw	r24, 0x11	; 17
    278c:	b0 c0       	rjmp	.+352    	; 0x28ee <__mulsf3+0x1e8>
    278e:	2d 84       	ldd	r2, Y+13	; 0x0d
    2790:	3e 84       	ldd	r3, Y+14	; 0x0e
    2792:	4f 84       	ldd	r4, Y+15	; 0x0f
    2794:	58 88       	ldd	r5, Y+16	; 0x10
    2796:	6d 88       	ldd	r6, Y+21	; 0x15
    2798:	7e 88       	ldd	r7, Y+22	; 0x16
    279a:	8f 88       	ldd	r8, Y+23	; 0x17
    279c:	98 8c       	ldd	r9, Y+24	; 0x18
    279e:	ee 24       	eor	r14, r14
    27a0:	ff 24       	eor	r15, r15
    27a2:	87 01       	movw	r16, r14
    27a4:	aa 24       	eor	r10, r10
    27a6:	bb 24       	eor	r11, r11
    27a8:	65 01       	movw	r12, r10
    27aa:	40 e0       	ldi	r20, 0x00	; 0
    27ac:	50 e0       	ldi	r21, 0x00	; 0
    27ae:	60 e0       	ldi	r22, 0x00	; 0
    27b0:	70 e0       	ldi	r23, 0x00	; 0
    27b2:	e0 e0       	ldi	r30, 0x00	; 0
    27b4:	f0 e0       	ldi	r31, 0x00	; 0
    27b6:	c1 01       	movw	r24, r2
    27b8:	81 70       	andi	r24, 0x01	; 1
    27ba:	90 70       	andi	r25, 0x00	; 0
    27bc:	89 2b       	or	r24, r25
    27be:	e9 f0       	breq	.+58     	; 0x27fa <__mulsf3+0xf4>
    27c0:	e6 0c       	add	r14, r6
    27c2:	f7 1c       	adc	r15, r7
    27c4:	08 1d       	adc	r16, r8
    27c6:	19 1d       	adc	r17, r9
    27c8:	9a 01       	movw	r18, r20
    27ca:	ab 01       	movw	r20, r22
    27cc:	2a 0d       	add	r18, r10
    27ce:	3b 1d       	adc	r19, r11
    27d0:	4c 1d       	adc	r20, r12
    27d2:	5d 1d       	adc	r21, r13
    27d4:	80 e0       	ldi	r24, 0x00	; 0
    27d6:	90 e0       	ldi	r25, 0x00	; 0
    27d8:	a0 e0       	ldi	r26, 0x00	; 0
    27da:	b0 e0       	ldi	r27, 0x00	; 0
    27dc:	e6 14       	cp	r14, r6
    27de:	f7 04       	cpc	r15, r7
    27e0:	08 05       	cpc	r16, r8
    27e2:	19 05       	cpc	r17, r9
    27e4:	20 f4       	brcc	.+8      	; 0x27ee <__mulsf3+0xe8>
    27e6:	81 e0       	ldi	r24, 0x01	; 1
    27e8:	90 e0       	ldi	r25, 0x00	; 0
    27ea:	a0 e0       	ldi	r26, 0x00	; 0
    27ec:	b0 e0       	ldi	r27, 0x00	; 0
    27ee:	ba 01       	movw	r22, r20
    27f0:	a9 01       	movw	r20, r18
    27f2:	48 0f       	add	r20, r24
    27f4:	59 1f       	adc	r21, r25
    27f6:	6a 1f       	adc	r22, r26
    27f8:	7b 1f       	adc	r23, r27
    27fa:	aa 0c       	add	r10, r10
    27fc:	bb 1c       	adc	r11, r11
    27fe:	cc 1c       	adc	r12, r12
    2800:	dd 1c       	adc	r13, r13
    2802:	97 fe       	sbrs	r9, 7
    2804:	08 c0       	rjmp	.+16     	; 0x2816 <__mulsf3+0x110>
    2806:	81 e0       	ldi	r24, 0x01	; 1
    2808:	90 e0       	ldi	r25, 0x00	; 0
    280a:	a0 e0       	ldi	r26, 0x00	; 0
    280c:	b0 e0       	ldi	r27, 0x00	; 0
    280e:	a8 2a       	or	r10, r24
    2810:	b9 2a       	or	r11, r25
    2812:	ca 2a       	or	r12, r26
    2814:	db 2a       	or	r13, r27
    2816:	31 96       	adiw	r30, 0x01	; 1
    2818:	e0 32       	cpi	r30, 0x20	; 32
    281a:	f1 05       	cpc	r31, r1
    281c:	49 f0       	breq	.+18     	; 0x2830 <__mulsf3+0x12a>
    281e:	66 0c       	add	r6, r6
    2820:	77 1c       	adc	r7, r7
    2822:	88 1c       	adc	r8, r8
    2824:	99 1c       	adc	r9, r9
    2826:	56 94       	lsr	r5
    2828:	47 94       	ror	r4
    282a:	37 94       	ror	r3
    282c:	27 94       	ror	r2
    282e:	c3 cf       	rjmp	.-122    	; 0x27b6 <__mulsf3+0xb0>
    2830:	fa 85       	ldd	r31, Y+10	; 0x0a
    2832:	ea 89       	ldd	r30, Y+18	; 0x12
    2834:	2b 89       	ldd	r18, Y+19	; 0x13
    2836:	3c 89       	ldd	r19, Y+20	; 0x14
    2838:	8b 85       	ldd	r24, Y+11	; 0x0b
    283a:	9c 85       	ldd	r25, Y+12	; 0x0c
    283c:	28 0f       	add	r18, r24
    283e:	39 1f       	adc	r19, r25
    2840:	2e 5f       	subi	r18, 0xFE	; 254
    2842:	3f 4f       	sbci	r19, 0xFF	; 255
    2844:	17 c0       	rjmp	.+46     	; 0x2874 <__mulsf3+0x16e>
    2846:	ca 01       	movw	r24, r20
    2848:	81 70       	andi	r24, 0x01	; 1
    284a:	90 70       	andi	r25, 0x00	; 0
    284c:	89 2b       	or	r24, r25
    284e:	61 f0       	breq	.+24     	; 0x2868 <__mulsf3+0x162>
    2850:	16 95       	lsr	r17
    2852:	07 95       	ror	r16
    2854:	f7 94       	ror	r15
    2856:	e7 94       	ror	r14
    2858:	80 e0       	ldi	r24, 0x00	; 0
    285a:	90 e0       	ldi	r25, 0x00	; 0
    285c:	a0 e0       	ldi	r26, 0x00	; 0
    285e:	b0 e8       	ldi	r27, 0x80	; 128
    2860:	e8 2a       	or	r14, r24
    2862:	f9 2a       	or	r15, r25
    2864:	0a 2b       	or	r16, r26
    2866:	1b 2b       	or	r17, r27
    2868:	76 95       	lsr	r23
    286a:	67 95       	ror	r22
    286c:	57 95       	ror	r21
    286e:	47 95       	ror	r20
    2870:	2f 5f       	subi	r18, 0xFF	; 255
    2872:	3f 4f       	sbci	r19, 0xFF	; 255
    2874:	77 fd       	sbrc	r23, 7
    2876:	e7 cf       	rjmp	.-50     	; 0x2846 <__mulsf3+0x140>
    2878:	0c c0       	rjmp	.+24     	; 0x2892 <__mulsf3+0x18c>
    287a:	44 0f       	add	r20, r20
    287c:	55 1f       	adc	r21, r21
    287e:	66 1f       	adc	r22, r22
    2880:	77 1f       	adc	r23, r23
    2882:	17 fd       	sbrc	r17, 7
    2884:	41 60       	ori	r20, 0x01	; 1
    2886:	ee 0c       	add	r14, r14
    2888:	ff 1c       	adc	r15, r15
    288a:	00 1f       	adc	r16, r16
    288c:	11 1f       	adc	r17, r17
    288e:	21 50       	subi	r18, 0x01	; 1
    2890:	30 40       	sbci	r19, 0x00	; 0
    2892:	40 30       	cpi	r20, 0x00	; 0
    2894:	90 e0       	ldi	r25, 0x00	; 0
    2896:	59 07       	cpc	r21, r25
    2898:	90 e0       	ldi	r25, 0x00	; 0
    289a:	69 07       	cpc	r22, r25
    289c:	90 e4       	ldi	r25, 0x40	; 64
    289e:	79 07       	cpc	r23, r25
    28a0:	60 f3       	brcs	.-40     	; 0x287a <__mulsf3+0x174>
    28a2:	2b 8f       	std	Y+27, r18	; 0x1b
    28a4:	3c 8f       	std	Y+28, r19	; 0x1c
    28a6:	db 01       	movw	r26, r22
    28a8:	ca 01       	movw	r24, r20
    28aa:	8f 77       	andi	r24, 0x7F	; 127
    28ac:	90 70       	andi	r25, 0x00	; 0
    28ae:	a0 70       	andi	r26, 0x00	; 0
    28b0:	b0 70       	andi	r27, 0x00	; 0
    28b2:	80 34       	cpi	r24, 0x40	; 64
    28b4:	91 05       	cpc	r25, r1
    28b6:	a1 05       	cpc	r26, r1
    28b8:	b1 05       	cpc	r27, r1
    28ba:	61 f4       	brne	.+24     	; 0x28d4 <__mulsf3+0x1ce>
    28bc:	47 fd       	sbrc	r20, 7
    28be:	0a c0       	rjmp	.+20     	; 0x28d4 <__mulsf3+0x1ce>
    28c0:	e1 14       	cp	r14, r1
    28c2:	f1 04       	cpc	r15, r1
    28c4:	01 05       	cpc	r16, r1
    28c6:	11 05       	cpc	r17, r1
    28c8:	29 f0       	breq	.+10     	; 0x28d4 <__mulsf3+0x1ce>
    28ca:	40 5c       	subi	r20, 0xC0	; 192
    28cc:	5f 4f       	sbci	r21, 0xFF	; 255
    28ce:	6f 4f       	sbci	r22, 0xFF	; 255
    28d0:	7f 4f       	sbci	r23, 0xFF	; 255
    28d2:	40 78       	andi	r20, 0x80	; 128
    28d4:	1a 8e       	std	Y+26, r1	; 0x1a
    28d6:	fe 17       	cp	r31, r30
    28d8:	11 f0       	breq	.+4      	; 0x28de <__mulsf3+0x1d8>
    28da:	81 e0       	ldi	r24, 0x01	; 1
    28dc:	8a 8f       	std	Y+26, r24	; 0x1a
    28de:	4d 8f       	std	Y+29, r20	; 0x1d
    28e0:	5e 8f       	std	Y+30, r21	; 0x1e
    28e2:	6f 8f       	std	Y+31, r22	; 0x1f
    28e4:	78 a3       	std	Y+32, r23	; 0x20
    28e6:	83 e0       	ldi	r24, 0x03	; 3
    28e8:	89 8f       	std	Y+25, r24	; 0x19
    28ea:	ce 01       	movw	r24, r28
    28ec:	49 96       	adiw	r24, 0x19	; 25
    28ee:	0e 94 61 15 	call	0x2ac2	; 0x2ac2 <__pack_f>
    28f2:	a0 96       	adiw	r28, 0x20	; 32
    28f4:	e2 e1       	ldi	r30, 0x12	; 18
    28f6:	0c 94 23 17 	jmp	0x2e46	; 0x2e46 <__epilogue_restores__>

000028fa <__gtsf2>:
    28fa:	a8 e1       	ldi	r26, 0x18	; 24
    28fc:	b0 e0       	ldi	r27, 0x00	; 0
    28fe:	e3 e8       	ldi	r30, 0x83	; 131
    2900:	f4 e1       	ldi	r31, 0x14	; 20
    2902:	0c 94 13 17 	jmp	0x2e26	; 0x2e26 <__prologue_saves__+0x18>
    2906:	69 83       	std	Y+1, r22	; 0x01
    2908:	7a 83       	std	Y+2, r23	; 0x02
    290a:	8b 83       	std	Y+3, r24	; 0x03
    290c:	9c 83       	std	Y+4, r25	; 0x04
    290e:	2d 83       	std	Y+5, r18	; 0x05
    2910:	3e 83       	std	Y+6, r19	; 0x06
    2912:	4f 83       	std	Y+7, r20	; 0x07
    2914:	58 87       	std	Y+8, r21	; 0x08
    2916:	89 e0       	ldi	r24, 0x09	; 9
    2918:	e8 2e       	mov	r14, r24
    291a:	f1 2c       	mov	r15, r1
    291c:	ec 0e       	add	r14, r28
    291e:	fd 1e       	adc	r15, r29
    2920:	ce 01       	movw	r24, r28
    2922:	01 96       	adiw	r24, 0x01	; 1
    2924:	b7 01       	movw	r22, r14
    2926:	0e 94 36 16 	call	0x2c6c	; 0x2c6c <__unpack_f>
    292a:	8e 01       	movw	r16, r28
    292c:	0f 5e       	subi	r16, 0xEF	; 239
    292e:	1f 4f       	sbci	r17, 0xFF	; 255
    2930:	ce 01       	movw	r24, r28
    2932:	05 96       	adiw	r24, 0x05	; 5
    2934:	b8 01       	movw	r22, r16
    2936:	0e 94 36 16 	call	0x2c6c	; 0x2c6c <__unpack_f>
    293a:	89 85       	ldd	r24, Y+9	; 0x09
    293c:	82 30       	cpi	r24, 0x02	; 2
    293e:	40 f0       	brcs	.+16     	; 0x2950 <__gtsf2+0x56>
    2940:	89 89       	ldd	r24, Y+17	; 0x11
    2942:	82 30       	cpi	r24, 0x02	; 2
    2944:	28 f0       	brcs	.+10     	; 0x2950 <__gtsf2+0x56>
    2946:	c7 01       	movw	r24, r14
    2948:	b8 01       	movw	r22, r16
    294a:	0e 94 ae 16 	call	0x2d5c	; 0x2d5c <__fpcmp_parts_f>
    294e:	01 c0       	rjmp	.+2      	; 0x2952 <__gtsf2+0x58>
    2950:	8f ef       	ldi	r24, 0xFF	; 255
    2952:	68 96       	adiw	r28, 0x18	; 24
    2954:	e6 e0       	ldi	r30, 0x06	; 6
    2956:	0c 94 2f 17 	jmp	0x2e5e	; 0x2e5e <__epilogue_restores__+0x18>

0000295a <__gesf2>:
    295a:	a8 e1       	ldi	r26, 0x18	; 24
    295c:	b0 e0       	ldi	r27, 0x00	; 0
    295e:	e3 eb       	ldi	r30, 0xB3	; 179
    2960:	f4 e1       	ldi	r31, 0x14	; 20
    2962:	0c 94 13 17 	jmp	0x2e26	; 0x2e26 <__prologue_saves__+0x18>
    2966:	69 83       	std	Y+1, r22	; 0x01
    2968:	7a 83       	std	Y+2, r23	; 0x02
    296a:	8b 83       	std	Y+3, r24	; 0x03
    296c:	9c 83       	std	Y+4, r25	; 0x04
    296e:	2d 83       	std	Y+5, r18	; 0x05
    2970:	3e 83       	std	Y+6, r19	; 0x06
    2972:	4f 83       	std	Y+7, r20	; 0x07
    2974:	58 87       	std	Y+8, r21	; 0x08
    2976:	89 e0       	ldi	r24, 0x09	; 9
    2978:	e8 2e       	mov	r14, r24
    297a:	f1 2c       	mov	r15, r1
    297c:	ec 0e       	add	r14, r28
    297e:	fd 1e       	adc	r15, r29
    2980:	ce 01       	movw	r24, r28
    2982:	01 96       	adiw	r24, 0x01	; 1
    2984:	b7 01       	movw	r22, r14
    2986:	0e 94 36 16 	call	0x2c6c	; 0x2c6c <__unpack_f>
    298a:	8e 01       	movw	r16, r28
    298c:	0f 5e       	subi	r16, 0xEF	; 239
    298e:	1f 4f       	sbci	r17, 0xFF	; 255
    2990:	ce 01       	movw	r24, r28
    2992:	05 96       	adiw	r24, 0x05	; 5
    2994:	b8 01       	movw	r22, r16
    2996:	0e 94 36 16 	call	0x2c6c	; 0x2c6c <__unpack_f>
    299a:	89 85       	ldd	r24, Y+9	; 0x09
    299c:	82 30       	cpi	r24, 0x02	; 2
    299e:	40 f0       	brcs	.+16     	; 0x29b0 <__gesf2+0x56>
    29a0:	89 89       	ldd	r24, Y+17	; 0x11
    29a2:	82 30       	cpi	r24, 0x02	; 2
    29a4:	28 f0       	brcs	.+10     	; 0x29b0 <__gesf2+0x56>
    29a6:	c7 01       	movw	r24, r14
    29a8:	b8 01       	movw	r22, r16
    29aa:	0e 94 ae 16 	call	0x2d5c	; 0x2d5c <__fpcmp_parts_f>
    29ae:	01 c0       	rjmp	.+2      	; 0x29b2 <__gesf2+0x58>
    29b0:	8f ef       	ldi	r24, 0xFF	; 255
    29b2:	68 96       	adiw	r28, 0x18	; 24
    29b4:	e6 e0       	ldi	r30, 0x06	; 6
    29b6:	0c 94 2f 17 	jmp	0x2e5e	; 0x2e5e <__epilogue_restores__+0x18>

000029ba <__ltsf2>:
    29ba:	a8 e1       	ldi	r26, 0x18	; 24
    29bc:	b0 e0       	ldi	r27, 0x00	; 0
    29be:	e3 ee       	ldi	r30, 0xE3	; 227
    29c0:	f4 e1       	ldi	r31, 0x14	; 20
    29c2:	0c 94 13 17 	jmp	0x2e26	; 0x2e26 <__prologue_saves__+0x18>
    29c6:	69 83       	std	Y+1, r22	; 0x01
    29c8:	7a 83       	std	Y+2, r23	; 0x02
    29ca:	8b 83       	std	Y+3, r24	; 0x03
    29cc:	9c 83       	std	Y+4, r25	; 0x04
    29ce:	2d 83       	std	Y+5, r18	; 0x05
    29d0:	3e 83       	std	Y+6, r19	; 0x06
    29d2:	4f 83       	std	Y+7, r20	; 0x07
    29d4:	58 87       	std	Y+8, r21	; 0x08
    29d6:	89 e0       	ldi	r24, 0x09	; 9
    29d8:	e8 2e       	mov	r14, r24
    29da:	f1 2c       	mov	r15, r1
    29dc:	ec 0e       	add	r14, r28
    29de:	fd 1e       	adc	r15, r29
    29e0:	ce 01       	movw	r24, r28
    29e2:	01 96       	adiw	r24, 0x01	; 1
    29e4:	b7 01       	movw	r22, r14
    29e6:	0e 94 36 16 	call	0x2c6c	; 0x2c6c <__unpack_f>
    29ea:	8e 01       	movw	r16, r28
    29ec:	0f 5e       	subi	r16, 0xEF	; 239
    29ee:	1f 4f       	sbci	r17, 0xFF	; 255
    29f0:	ce 01       	movw	r24, r28
    29f2:	05 96       	adiw	r24, 0x05	; 5
    29f4:	b8 01       	movw	r22, r16
    29f6:	0e 94 36 16 	call	0x2c6c	; 0x2c6c <__unpack_f>
    29fa:	89 85       	ldd	r24, Y+9	; 0x09
    29fc:	82 30       	cpi	r24, 0x02	; 2
    29fe:	40 f0       	brcs	.+16     	; 0x2a10 <__ltsf2+0x56>
    2a00:	89 89       	ldd	r24, Y+17	; 0x11
    2a02:	82 30       	cpi	r24, 0x02	; 2
    2a04:	28 f0       	brcs	.+10     	; 0x2a10 <__ltsf2+0x56>
    2a06:	c7 01       	movw	r24, r14
    2a08:	b8 01       	movw	r22, r16
    2a0a:	0e 94 ae 16 	call	0x2d5c	; 0x2d5c <__fpcmp_parts_f>
    2a0e:	01 c0       	rjmp	.+2      	; 0x2a12 <__ltsf2+0x58>
    2a10:	81 e0       	ldi	r24, 0x01	; 1
    2a12:	68 96       	adiw	r28, 0x18	; 24
    2a14:	e6 e0       	ldi	r30, 0x06	; 6
    2a16:	0c 94 2f 17 	jmp	0x2e5e	; 0x2e5e <__epilogue_restores__+0x18>

00002a1a <__fixsfsi>:
    2a1a:	ac e0       	ldi	r26, 0x0C	; 12
    2a1c:	b0 e0       	ldi	r27, 0x00	; 0
    2a1e:	e3 e1       	ldi	r30, 0x13	; 19
    2a20:	f5 e1       	ldi	r31, 0x15	; 21
    2a22:	0c 94 17 17 	jmp	0x2e2e	; 0x2e2e <__prologue_saves__+0x20>
    2a26:	69 83       	std	Y+1, r22	; 0x01
    2a28:	7a 83       	std	Y+2, r23	; 0x02
    2a2a:	8b 83       	std	Y+3, r24	; 0x03
    2a2c:	9c 83       	std	Y+4, r25	; 0x04
    2a2e:	ce 01       	movw	r24, r28
    2a30:	01 96       	adiw	r24, 0x01	; 1
    2a32:	be 01       	movw	r22, r28
    2a34:	6b 5f       	subi	r22, 0xFB	; 251
    2a36:	7f 4f       	sbci	r23, 0xFF	; 255
    2a38:	0e 94 36 16 	call	0x2c6c	; 0x2c6c <__unpack_f>
    2a3c:	8d 81       	ldd	r24, Y+5	; 0x05
    2a3e:	82 30       	cpi	r24, 0x02	; 2
    2a40:	61 f1       	breq	.+88     	; 0x2a9a <__fixsfsi+0x80>
    2a42:	82 30       	cpi	r24, 0x02	; 2
    2a44:	50 f1       	brcs	.+84     	; 0x2a9a <__fixsfsi+0x80>
    2a46:	84 30       	cpi	r24, 0x04	; 4
    2a48:	21 f4       	brne	.+8      	; 0x2a52 <__fixsfsi+0x38>
    2a4a:	8e 81       	ldd	r24, Y+6	; 0x06
    2a4c:	88 23       	and	r24, r24
    2a4e:	51 f1       	breq	.+84     	; 0x2aa4 <__fixsfsi+0x8a>
    2a50:	2e c0       	rjmp	.+92     	; 0x2aae <__fixsfsi+0x94>
    2a52:	2f 81       	ldd	r18, Y+7	; 0x07
    2a54:	38 85       	ldd	r19, Y+8	; 0x08
    2a56:	37 fd       	sbrc	r19, 7
    2a58:	20 c0       	rjmp	.+64     	; 0x2a9a <__fixsfsi+0x80>
    2a5a:	6e 81       	ldd	r22, Y+6	; 0x06
    2a5c:	2f 31       	cpi	r18, 0x1F	; 31
    2a5e:	31 05       	cpc	r19, r1
    2a60:	1c f0       	brlt	.+6      	; 0x2a68 <__fixsfsi+0x4e>
    2a62:	66 23       	and	r22, r22
    2a64:	f9 f0       	breq	.+62     	; 0x2aa4 <__fixsfsi+0x8a>
    2a66:	23 c0       	rjmp	.+70     	; 0x2aae <__fixsfsi+0x94>
    2a68:	8e e1       	ldi	r24, 0x1E	; 30
    2a6a:	90 e0       	ldi	r25, 0x00	; 0
    2a6c:	82 1b       	sub	r24, r18
    2a6e:	93 0b       	sbc	r25, r19
    2a70:	29 85       	ldd	r18, Y+9	; 0x09
    2a72:	3a 85       	ldd	r19, Y+10	; 0x0a
    2a74:	4b 85       	ldd	r20, Y+11	; 0x0b
    2a76:	5c 85       	ldd	r21, Y+12	; 0x0c
    2a78:	04 c0       	rjmp	.+8      	; 0x2a82 <__fixsfsi+0x68>
    2a7a:	56 95       	lsr	r21
    2a7c:	47 95       	ror	r20
    2a7e:	37 95       	ror	r19
    2a80:	27 95       	ror	r18
    2a82:	8a 95       	dec	r24
    2a84:	d2 f7       	brpl	.-12     	; 0x2a7a <__fixsfsi+0x60>
    2a86:	66 23       	and	r22, r22
    2a88:	b1 f0       	breq	.+44     	; 0x2ab6 <__fixsfsi+0x9c>
    2a8a:	50 95       	com	r21
    2a8c:	40 95       	com	r20
    2a8e:	30 95       	com	r19
    2a90:	21 95       	neg	r18
    2a92:	3f 4f       	sbci	r19, 0xFF	; 255
    2a94:	4f 4f       	sbci	r20, 0xFF	; 255
    2a96:	5f 4f       	sbci	r21, 0xFF	; 255
    2a98:	0e c0       	rjmp	.+28     	; 0x2ab6 <__fixsfsi+0x9c>
    2a9a:	20 e0       	ldi	r18, 0x00	; 0
    2a9c:	30 e0       	ldi	r19, 0x00	; 0
    2a9e:	40 e0       	ldi	r20, 0x00	; 0
    2aa0:	50 e0       	ldi	r21, 0x00	; 0
    2aa2:	09 c0       	rjmp	.+18     	; 0x2ab6 <__fixsfsi+0x9c>
    2aa4:	2f ef       	ldi	r18, 0xFF	; 255
    2aa6:	3f ef       	ldi	r19, 0xFF	; 255
    2aa8:	4f ef       	ldi	r20, 0xFF	; 255
    2aaa:	5f e7       	ldi	r21, 0x7F	; 127
    2aac:	04 c0       	rjmp	.+8      	; 0x2ab6 <__fixsfsi+0x9c>
    2aae:	20 e0       	ldi	r18, 0x00	; 0
    2ab0:	30 e0       	ldi	r19, 0x00	; 0
    2ab2:	40 e0       	ldi	r20, 0x00	; 0
    2ab4:	50 e8       	ldi	r21, 0x80	; 128
    2ab6:	b9 01       	movw	r22, r18
    2ab8:	ca 01       	movw	r24, r20
    2aba:	2c 96       	adiw	r28, 0x0c	; 12
    2abc:	e2 e0       	ldi	r30, 0x02	; 2
    2abe:	0c 94 33 17 	jmp	0x2e66	; 0x2e66 <__epilogue_restores__+0x20>

00002ac2 <__pack_f>:
    2ac2:	df 92       	push	r13
    2ac4:	ef 92       	push	r14
    2ac6:	ff 92       	push	r15
    2ac8:	0f 93       	push	r16
    2aca:	1f 93       	push	r17
    2acc:	fc 01       	movw	r30, r24
    2ace:	e4 80       	ldd	r14, Z+4	; 0x04
    2ad0:	f5 80       	ldd	r15, Z+5	; 0x05
    2ad2:	06 81       	ldd	r16, Z+6	; 0x06
    2ad4:	17 81       	ldd	r17, Z+7	; 0x07
    2ad6:	d1 80       	ldd	r13, Z+1	; 0x01
    2ad8:	80 81       	ld	r24, Z
    2ada:	82 30       	cpi	r24, 0x02	; 2
    2adc:	48 f4       	brcc	.+18     	; 0x2af0 <__pack_f+0x2e>
    2ade:	80 e0       	ldi	r24, 0x00	; 0
    2ae0:	90 e0       	ldi	r25, 0x00	; 0
    2ae2:	a0 e1       	ldi	r26, 0x10	; 16
    2ae4:	b0 e0       	ldi	r27, 0x00	; 0
    2ae6:	e8 2a       	or	r14, r24
    2ae8:	f9 2a       	or	r15, r25
    2aea:	0a 2b       	or	r16, r26
    2aec:	1b 2b       	or	r17, r27
    2aee:	a5 c0       	rjmp	.+330    	; 0x2c3a <__pack_f+0x178>
    2af0:	84 30       	cpi	r24, 0x04	; 4
    2af2:	09 f4       	brne	.+2      	; 0x2af6 <__pack_f+0x34>
    2af4:	9f c0       	rjmp	.+318    	; 0x2c34 <__pack_f+0x172>
    2af6:	82 30       	cpi	r24, 0x02	; 2
    2af8:	21 f4       	brne	.+8      	; 0x2b02 <__pack_f+0x40>
    2afa:	ee 24       	eor	r14, r14
    2afc:	ff 24       	eor	r15, r15
    2afe:	87 01       	movw	r16, r14
    2b00:	05 c0       	rjmp	.+10     	; 0x2b0c <__pack_f+0x4a>
    2b02:	e1 14       	cp	r14, r1
    2b04:	f1 04       	cpc	r15, r1
    2b06:	01 05       	cpc	r16, r1
    2b08:	11 05       	cpc	r17, r1
    2b0a:	19 f4       	brne	.+6      	; 0x2b12 <__pack_f+0x50>
    2b0c:	e0 e0       	ldi	r30, 0x00	; 0
    2b0e:	f0 e0       	ldi	r31, 0x00	; 0
    2b10:	96 c0       	rjmp	.+300    	; 0x2c3e <__pack_f+0x17c>
    2b12:	62 81       	ldd	r22, Z+2	; 0x02
    2b14:	73 81       	ldd	r23, Z+3	; 0x03
    2b16:	9f ef       	ldi	r25, 0xFF	; 255
    2b18:	62 38       	cpi	r22, 0x82	; 130
    2b1a:	79 07       	cpc	r23, r25
    2b1c:	0c f0       	brlt	.+2      	; 0x2b20 <__pack_f+0x5e>
    2b1e:	5b c0       	rjmp	.+182    	; 0x2bd6 <__pack_f+0x114>
    2b20:	22 e8       	ldi	r18, 0x82	; 130
    2b22:	3f ef       	ldi	r19, 0xFF	; 255
    2b24:	26 1b       	sub	r18, r22
    2b26:	37 0b       	sbc	r19, r23
    2b28:	2a 31       	cpi	r18, 0x1A	; 26
    2b2a:	31 05       	cpc	r19, r1
    2b2c:	2c f0       	brlt	.+10     	; 0x2b38 <__pack_f+0x76>
    2b2e:	20 e0       	ldi	r18, 0x00	; 0
    2b30:	30 e0       	ldi	r19, 0x00	; 0
    2b32:	40 e0       	ldi	r20, 0x00	; 0
    2b34:	50 e0       	ldi	r21, 0x00	; 0
    2b36:	2a c0       	rjmp	.+84     	; 0x2b8c <__pack_f+0xca>
    2b38:	b8 01       	movw	r22, r16
    2b3a:	a7 01       	movw	r20, r14
    2b3c:	02 2e       	mov	r0, r18
    2b3e:	04 c0       	rjmp	.+8      	; 0x2b48 <__pack_f+0x86>
    2b40:	76 95       	lsr	r23
    2b42:	67 95       	ror	r22
    2b44:	57 95       	ror	r21
    2b46:	47 95       	ror	r20
    2b48:	0a 94       	dec	r0
    2b4a:	d2 f7       	brpl	.-12     	; 0x2b40 <__pack_f+0x7e>
    2b4c:	81 e0       	ldi	r24, 0x01	; 1
    2b4e:	90 e0       	ldi	r25, 0x00	; 0
    2b50:	a0 e0       	ldi	r26, 0x00	; 0
    2b52:	b0 e0       	ldi	r27, 0x00	; 0
    2b54:	04 c0       	rjmp	.+8      	; 0x2b5e <__pack_f+0x9c>
    2b56:	88 0f       	add	r24, r24
    2b58:	99 1f       	adc	r25, r25
    2b5a:	aa 1f       	adc	r26, r26
    2b5c:	bb 1f       	adc	r27, r27
    2b5e:	2a 95       	dec	r18
    2b60:	d2 f7       	brpl	.-12     	; 0x2b56 <__pack_f+0x94>
    2b62:	01 97       	sbiw	r24, 0x01	; 1
    2b64:	a1 09       	sbc	r26, r1
    2b66:	b1 09       	sbc	r27, r1
    2b68:	8e 21       	and	r24, r14
    2b6a:	9f 21       	and	r25, r15
    2b6c:	a0 23       	and	r26, r16
    2b6e:	b1 23       	and	r27, r17
    2b70:	00 97       	sbiw	r24, 0x00	; 0
    2b72:	a1 05       	cpc	r26, r1
    2b74:	b1 05       	cpc	r27, r1
    2b76:	21 f0       	breq	.+8      	; 0x2b80 <__pack_f+0xbe>
    2b78:	81 e0       	ldi	r24, 0x01	; 1
    2b7a:	90 e0       	ldi	r25, 0x00	; 0
    2b7c:	a0 e0       	ldi	r26, 0x00	; 0
    2b7e:	b0 e0       	ldi	r27, 0x00	; 0
    2b80:	9a 01       	movw	r18, r20
    2b82:	ab 01       	movw	r20, r22
    2b84:	28 2b       	or	r18, r24
    2b86:	39 2b       	or	r19, r25
    2b88:	4a 2b       	or	r20, r26
    2b8a:	5b 2b       	or	r21, r27
    2b8c:	da 01       	movw	r26, r20
    2b8e:	c9 01       	movw	r24, r18
    2b90:	8f 77       	andi	r24, 0x7F	; 127
    2b92:	90 70       	andi	r25, 0x00	; 0
    2b94:	a0 70       	andi	r26, 0x00	; 0
    2b96:	b0 70       	andi	r27, 0x00	; 0
    2b98:	80 34       	cpi	r24, 0x40	; 64
    2b9a:	91 05       	cpc	r25, r1
    2b9c:	a1 05       	cpc	r26, r1
    2b9e:	b1 05       	cpc	r27, r1
    2ba0:	39 f4       	brne	.+14     	; 0x2bb0 <__pack_f+0xee>
    2ba2:	27 ff       	sbrs	r18, 7
    2ba4:	09 c0       	rjmp	.+18     	; 0x2bb8 <__pack_f+0xf6>
    2ba6:	20 5c       	subi	r18, 0xC0	; 192
    2ba8:	3f 4f       	sbci	r19, 0xFF	; 255
    2baa:	4f 4f       	sbci	r20, 0xFF	; 255
    2bac:	5f 4f       	sbci	r21, 0xFF	; 255
    2bae:	04 c0       	rjmp	.+8      	; 0x2bb8 <__pack_f+0xf6>
    2bb0:	21 5c       	subi	r18, 0xC1	; 193
    2bb2:	3f 4f       	sbci	r19, 0xFF	; 255
    2bb4:	4f 4f       	sbci	r20, 0xFF	; 255
    2bb6:	5f 4f       	sbci	r21, 0xFF	; 255
    2bb8:	e0 e0       	ldi	r30, 0x00	; 0
    2bba:	f0 e0       	ldi	r31, 0x00	; 0
    2bbc:	20 30       	cpi	r18, 0x00	; 0
    2bbe:	a0 e0       	ldi	r26, 0x00	; 0
    2bc0:	3a 07       	cpc	r19, r26
    2bc2:	a0 e0       	ldi	r26, 0x00	; 0
    2bc4:	4a 07       	cpc	r20, r26
    2bc6:	a0 e4       	ldi	r26, 0x40	; 64
    2bc8:	5a 07       	cpc	r21, r26
    2bca:	10 f0       	brcs	.+4      	; 0x2bd0 <__pack_f+0x10e>
    2bcc:	e1 e0       	ldi	r30, 0x01	; 1
    2bce:	f0 e0       	ldi	r31, 0x00	; 0
    2bd0:	79 01       	movw	r14, r18
    2bd2:	8a 01       	movw	r16, r20
    2bd4:	27 c0       	rjmp	.+78     	; 0x2c24 <__pack_f+0x162>
    2bd6:	60 38       	cpi	r22, 0x80	; 128
    2bd8:	71 05       	cpc	r23, r1
    2bda:	64 f5       	brge	.+88     	; 0x2c34 <__pack_f+0x172>
    2bdc:	fb 01       	movw	r30, r22
    2bde:	e1 58       	subi	r30, 0x81	; 129
    2be0:	ff 4f       	sbci	r31, 0xFF	; 255
    2be2:	d8 01       	movw	r26, r16
    2be4:	c7 01       	movw	r24, r14
    2be6:	8f 77       	andi	r24, 0x7F	; 127
    2be8:	90 70       	andi	r25, 0x00	; 0
    2bea:	a0 70       	andi	r26, 0x00	; 0
    2bec:	b0 70       	andi	r27, 0x00	; 0
    2bee:	80 34       	cpi	r24, 0x40	; 64
    2bf0:	91 05       	cpc	r25, r1
    2bf2:	a1 05       	cpc	r26, r1
    2bf4:	b1 05       	cpc	r27, r1
    2bf6:	39 f4       	brne	.+14     	; 0x2c06 <__pack_f+0x144>
    2bf8:	e7 fe       	sbrs	r14, 7
    2bfa:	0d c0       	rjmp	.+26     	; 0x2c16 <__pack_f+0x154>
    2bfc:	80 e4       	ldi	r24, 0x40	; 64
    2bfe:	90 e0       	ldi	r25, 0x00	; 0
    2c00:	a0 e0       	ldi	r26, 0x00	; 0
    2c02:	b0 e0       	ldi	r27, 0x00	; 0
    2c04:	04 c0       	rjmp	.+8      	; 0x2c0e <__pack_f+0x14c>
    2c06:	8f e3       	ldi	r24, 0x3F	; 63
    2c08:	90 e0       	ldi	r25, 0x00	; 0
    2c0a:	a0 e0       	ldi	r26, 0x00	; 0
    2c0c:	b0 e0       	ldi	r27, 0x00	; 0
    2c0e:	e8 0e       	add	r14, r24
    2c10:	f9 1e       	adc	r15, r25
    2c12:	0a 1f       	adc	r16, r26
    2c14:	1b 1f       	adc	r17, r27
    2c16:	17 ff       	sbrs	r17, 7
    2c18:	05 c0       	rjmp	.+10     	; 0x2c24 <__pack_f+0x162>
    2c1a:	16 95       	lsr	r17
    2c1c:	07 95       	ror	r16
    2c1e:	f7 94       	ror	r15
    2c20:	e7 94       	ror	r14
    2c22:	31 96       	adiw	r30, 0x01	; 1
    2c24:	87 e0       	ldi	r24, 0x07	; 7
    2c26:	16 95       	lsr	r17
    2c28:	07 95       	ror	r16
    2c2a:	f7 94       	ror	r15
    2c2c:	e7 94       	ror	r14
    2c2e:	8a 95       	dec	r24
    2c30:	d1 f7       	brne	.-12     	; 0x2c26 <__pack_f+0x164>
    2c32:	05 c0       	rjmp	.+10     	; 0x2c3e <__pack_f+0x17c>
    2c34:	ee 24       	eor	r14, r14
    2c36:	ff 24       	eor	r15, r15
    2c38:	87 01       	movw	r16, r14
    2c3a:	ef ef       	ldi	r30, 0xFF	; 255
    2c3c:	f0 e0       	ldi	r31, 0x00	; 0
    2c3e:	6e 2f       	mov	r22, r30
    2c40:	67 95       	ror	r22
    2c42:	66 27       	eor	r22, r22
    2c44:	67 95       	ror	r22
    2c46:	90 2f       	mov	r25, r16
    2c48:	9f 77       	andi	r25, 0x7F	; 127
    2c4a:	d7 94       	ror	r13
    2c4c:	dd 24       	eor	r13, r13
    2c4e:	d7 94       	ror	r13
    2c50:	8e 2f       	mov	r24, r30
    2c52:	86 95       	lsr	r24
    2c54:	49 2f       	mov	r20, r25
    2c56:	46 2b       	or	r20, r22
    2c58:	58 2f       	mov	r21, r24
    2c5a:	5d 29       	or	r21, r13
    2c5c:	b7 01       	movw	r22, r14
    2c5e:	ca 01       	movw	r24, r20
    2c60:	1f 91       	pop	r17
    2c62:	0f 91       	pop	r16
    2c64:	ff 90       	pop	r15
    2c66:	ef 90       	pop	r14
    2c68:	df 90       	pop	r13
    2c6a:	08 95       	ret

00002c6c <__unpack_f>:
    2c6c:	fc 01       	movw	r30, r24
    2c6e:	db 01       	movw	r26, r22
    2c70:	40 81       	ld	r20, Z
    2c72:	51 81       	ldd	r21, Z+1	; 0x01
    2c74:	22 81       	ldd	r18, Z+2	; 0x02
    2c76:	62 2f       	mov	r22, r18
    2c78:	6f 77       	andi	r22, 0x7F	; 127
    2c7a:	70 e0       	ldi	r23, 0x00	; 0
    2c7c:	22 1f       	adc	r18, r18
    2c7e:	22 27       	eor	r18, r18
    2c80:	22 1f       	adc	r18, r18
    2c82:	93 81       	ldd	r25, Z+3	; 0x03
    2c84:	89 2f       	mov	r24, r25
    2c86:	88 0f       	add	r24, r24
    2c88:	82 2b       	or	r24, r18
    2c8a:	28 2f       	mov	r18, r24
    2c8c:	30 e0       	ldi	r19, 0x00	; 0
    2c8e:	99 1f       	adc	r25, r25
    2c90:	99 27       	eor	r25, r25
    2c92:	99 1f       	adc	r25, r25
    2c94:	11 96       	adiw	r26, 0x01	; 1
    2c96:	9c 93       	st	X, r25
    2c98:	11 97       	sbiw	r26, 0x01	; 1
    2c9a:	21 15       	cp	r18, r1
    2c9c:	31 05       	cpc	r19, r1
    2c9e:	a9 f5       	brne	.+106    	; 0x2d0a <__unpack_f+0x9e>
    2ca0:	41 15       	cp	r20, r1
    2ca2:	51 05       	cpc	r21, r1
    2ca4:	61 05       	cpc	r22, r1
    2ca6:	71 05       	cpc	r23, r1
    2ca8:	11 f4       	brne	.+4      	; 0x2cae <__unpack_f+0x42>
    2caa:	82 e0       	ldi	r24, 0x02	; 2
    2cac:	37 c0       	rjmp	.+110    	; 0x2d1c <__unpack_f+0xb0>
    2cae:	82 e8       	ldi	r24, 0x82	; 130
    2cb0:	9f ef       	ldi	r25, 0xFF	; 255
    2cb2:	13 96       	adiw	r26, 0x03	; 3
    2cb4:	9c 93       	st	X, r25
    2cb6:	8e 93       	st	-X, r24
    2cb8:	12 97       	sbiw	r26, 0x02	; 2
    2cba:	9a 01       	movw	r18, r20
    2cbc:	ab 01       	movw	r20, r22
    2cbe:	67 e0       	ldi	r22, 0x07	; 7
    2cc0:	22 0f       	add	r18, r18
    2cc2:	33 1f       	adc	r19, r19
    2cc4:	44 1f       	adc	r20, r20
    2cc6:	55 1f       	adc	r21, r21
    2cc8:	6a 95       	dec	r22
    2cca:	d1 f7       	brne	.-12     	; 0x2cc0 <__unpack_f+0x54>
    2ccc:	83 e0       	ldi	r24, 0x03	; 3
    2cce:	8c 93       	st	X, r24
    2cd0:	0d c0       	rjmp	.+26     	; 0x2cec <__unpack_f+0x80>
    2cd2:	22 0f       	add	r18, r18
    2cd4:	33 1f       	adc	r19, r19
    2cd6:	44 1f       	adc	r20, r20
    2cd8:	55 1f       	adc	r21, r21
    2cda:	12 96       	adiw	r26, 0x02	; 2
    2cdc:	8d 91       	ld	r24, X+
    2cde:	9c 91       	ld	r25, X
    2ce0:	13 97       	sbiw	r26, 0x03	; 3
    2ce2:	01 97       	sbiw	r24, 0x01	; 1
    2ce4:	13 96       	adiw	r26, 0x03	; 3
    2ce6:	9c 93       	st	X, r25
    2ce8:	8e 93       	st	-X, r24
    2cea:	12 97       	sbiw	r26, 0x02	; 2
    2cec:	20 30       	cpi	r18, 0x00	; 0
    2cee:	80 e0       	ldi	r24, 0x00	; 0
    2cf0:	38 07       	cpc	r19, r24
    2cf2:	80 e0       	ldi	r24, 0x00	; 0
    2cf4:	48 07       	cpc	r20, r24
    2cf6:	80 e4       	ldi	r24, 0x40	; 64
    2cf8:	58 07       	cpc	r21, r24
    2cfa:	58 f3       	brcs	.-42     	; 0x2cd2 <__unpack_f+0x66>
    2cfc:	14 96       	adiw	r26, 0x04	; 4
    2cfe:	2d 93       	st	X+, r18
    2d00:	3d 93       	st	X+, r19
    2d02:	4d 93       	st	X+, r20
    2d04:	5c 93       	st	X, r21
    2d06:	17 97       	sbiw	r26, 0x07	; 7
    2d08:	08 95       	ret
    2d0a:	2f 3f       	cpi	r18, 0xFF	; 255
    2d0c:	31 05       	cpc	r19, r1
    2d0e:	79 f4       	brne	.+30     	; 0x2d2e <__unpack_f+0xc2>
    2d10:	41 15       	cp	r20, r1
    2d12:	51 05       	cpc	r21, r1
    2d14:	61 05       	cpc	r22, r1
    2d16:	71 05       	cpc	r23, r1
    2d18:	19 f4       	brne	.+6      	; 0x2d20 <__unpack_f+0xb4>
    2d1a:	84 e0       	ldi	r24, 0x04	; 4
    2d1c:	8c 93       	st	X, r24
    2d1e:	08 95       	ret
    2d20:	64 ff       	sbrs	r22, 4
    2d22:	03 c0       	rjmp	.+6      	; 0x2d2a <__unpack_f+0xbe>
    2d24:	81 e0       	ldi	r24, 0x01	; 1
    2d26:	8c 93       	st	X, r24
    2d28:	12 c0       	rjmp	.+36     	; 0x2d4e <__unpack_f+0xe2>
    2d2a:	1c 92       	st	X, r1
    2d2c:	10 c0       	rjmp	.+32     	; 0x2d4e <__unpack_f+0xe2>
    2d2e:	2f 57       	subi	r18, 0x7F	; 127
    2d30:	30 40       	sbci	r19, 0x00	; 0
    2d32:	13 96       	adiw	r26, 0x03	; 3
    2d34:	3c 93       	st	X, r19
    2d36:	2e 93       	st	-X, r18
    2d38:	12 97       	sbiw	r26, 0x02	; 2
    2d3a:	83 e0       	ldi	r24, 0x03	; 3
    2d3c:	8c 93       	st	X, r24
    2d3e:	87 e0       	ldi	r24, 0x07	; 7
    2d40:	44 0f       	add	r20, r20
    2d42:	55 1f       	adc	r21, r21
    2d44:	66 1f       	adc	r22, r22
    2d46:	77 1f       	adc	r23, r23
    2d48:	8a 95       	dec	r24
    2d4a:	d1 f7       	brne	.-12     	; 0x2d40 <__unpack_f+0xd4>
    2d4c:	70 64       	ori	r23, 0x40	; 64
    2d4e:	14 96       	adiw	r26, 0x04	; 4
    2d50:	4d 93       	st	X+, r20
    2d52:	5d 93       	st	X+, r21
    2d54:	6d 93       	st	X+, r22
    2d56:	7c 93       	st	X, r23
    2d58:	17 97       	sbiw	r26, 0x07	; 7
    2d5a:	08 95       	ret

00002d5c <__fpcmp_parts_f>:
    2d5c:	1f 93       	push	r17
    2d5e:	dc 01       	movw	r26, r24
    2d60:	fb 01       	movw	r30, r22
    2d62:	9c 91       	ld	r25, X
    2d64:	92 30       	cpi	r25, 0x02	; 2
    2d66:	08 f4       	brcc	.+2      	; 0x2d6a <__fpcmp_parts_f+0xe>
    2d68:	47 c0       	rjmp	.+142    	; 0x2df8 <__fpcmp_parts_f+0x9c>
    2d6a:	80 81       	ld	r24, Z
    2d6c:	82 30       	cpi	r24, 0x02	; 2
    2d6e:	08 f4       	brcc	.+2      	; 0x2d72 <__fpcmp_parts_f+0x16>
    2d70:	43 c0       	rjmp	.+134    	; 0x2df8 <__fpcmp_parts_f+0x9c>
    2d72:	94 30       	cpi	r25, 0x04	; 4
    2d74:	51 f4       	brne	.+20     	; 0x2d8a <__fpcmp_parts_f+0x2e>
    2d76:	11 96       	adiw	r26, 0x01	; 1
    2d78:	1c 91       	ld	r17, X
    2d7a:	84 30       	cpi	r24, 0x04	; 4
    2d7c:	99 f5       	brne	.+102    	; 0x2de4 <__fpcmp_parts_f+0x88>
    2d7e:	81 81       	ldd	r24, Z+1	; 0x01
    2d80:	68 2f       	mov	r22, r24
    2d82:	70 e0       	ldi	r23, 0x00	; 0
    2d84:	61 1b       	sub	r22, r17
    2d86:	71 09       	sbc	r23, r1
    2d88:	3f c0       	rjmp	.+126    	; 0x2e08 <__fpcmp_parts_f+0xac>
    2d8a:	84 30       	cpi	r24, 0x04	; 4
    2d8c:	21 f0       	breq	.+8      	; 0x2d96 <__fpcmp_parts_f+0x3a>
    2d8e:	92 30       	cpi	r25, 0x02	; 2
    2d90:	31 f4       	brne	.+12     	; 0x2d9e <__fpcmp_parts_f+0x42>
    2d92:	82 30       	cpi	r24, 0x02	; 2
    2d94:	b9 f1       	breq	.+110    	; 0x2e04 <__fpcmp_parts_f+0xa8>
    2d96:	81 81       	ldd	r24, Z+1	; 0x01
    2d98:	88 23       	and	r24, r24
    2d9a:	89 f1       	breq	.+98     	; 0x2dfe <__fpcmp_parts_f+0xa2>
    2d9c:	2d c0       	rjmp	.+90     	; 0x2df8 <__fpcmp_parts_f+0x9c>
    2d9e:	11 96       	adiw	r26, 0x01	; 1
    2da0:	1c 91       	ld	r17, X
    2da2:	11 97       	sbiw	r26, 0x01	; 1
    2da4:	82 30       	cpi	r24, 0x02	; 2
    2da6:	f1 f0       	breq	.+60     	; 0x2de4 <__fpcmp_parts_f+0x88>
    2da8:	81 81       	ldd	r24, Z+1	; 0x01
    2daa:	18 17       	cp	r17, r24
    2dac:	d9 f4       	brne	.+54     	; 0x2de4 <__fpcmp_parts_f+0x88>
    2dae:	12 96       	adiw	r26, 0x02	; 2
    2db0:	2d 91       	ld	r18, X+
    2db2:	3c 91       	ld	r19, X
    2db4:	13 97       	sbiw	r26, 0x03	; 3
    2db6:	82 81       	ldd	r24, Z+2	; 0x02
    2db8:	93 81       	ldd	r25, Z+3	; 0x03
    2dba:	82 17       	cp	r24, r18
    2dbc:	93 07       	cpc	r25, r19
    2dbe:	94 f0       	brlt	.+36     	; 0x2de4 <__fpcmp_parts_f+0x88>
    2dc0:	28 17       	cp	r18, r24
    2dc2:	39 07       	cpc	r19, r25
    2dc4:	bc f0       	brlt	.+46     	; 0x2df4 <__fpcmp_parts_f+0x98>
    2dc6:	14 96       	adiw	r26, 0x04	; 4
    2dc8:	8d 91       	ld	r24, X+
    2dca:	9d 91       	ld	r25, X+
    2dcc:	0d 90       	ld	r0, X+
    2dce:	bc 91       	ld	r27, X
    2dd0:	a0 2d       	mov	r26, r0
    2dd2:	24 81       	ldd	r18, Z+4	; 0x04
    2dd4:	35 81       	ldd	r19, Z+5	; 0x05
    2dd6:	46 81       	ldd	r20, Z+6	; 0x06
    2dd8:	57 81       	ldd	r21, Z+7	; 0x07
    2dda:	28 17       	cp	r18, r24
    2ddc:	39 07       	cpc	r19, r25
    2dde:	4a 07       	cpc	r20, r26
    2de0:	5b 07       	cpc	r21, r27
    2de2:	18 f4       	brcc	.+6      	; 0x2dea <__fpcmp_parts_f+0x8e>
    2de4:	11 23       	and	r17, r17
    2de6:	41 f0       	breq	.+16     	; 0x2df8 <__fpcmp_parts_f+0x9c>
    2de8:	0a c0       	rjmp	.+20     	; 0x2dfe <__fpcmp_parts_f+0xa2>
    2dea:	82 17       	cp	r24, r18
    2dec:	93 07       	cpc	r25, r19
    2dee:	a4 07       	cpc	r26, r20
    2df0:	b5 07       	cpc	r27, r21
    2df2:	40 f4       	brcc	.+16     	; 0x2e04 <__fpcmp_parts_f+0xa8>
    2df4:	11 23       	and	r17, r17
    2df6:	19 f0       	breq	.+6      	; 0x2dfe <__fpcmp_parts_f+0xa2>
    2df8:	61 e0       	ldi	r22, 0x01	; 1
    2dfa:	70 e0       	ldi	r23, 0x00	; 0
    2dfc:	05 c0       	rjmp	.+10     	; 0x2e08 <__fpcmp_parts_f+0xac>
    2dfe:	6f ef       	ldi	r22, 0xFF	; 255
    2e00:	7f ef       	ldi	r23, 0xFF	; 255
    2e02:	02 c0       	rjmp	.+4      	; 0x2e08 <__fpcmp_parts_f+0xac>
    2e04:	60 e0       	ldi	r22, 0x00	; 0
    2e06:	70 e0       	ldi	r23, 0x00	; 0
    2e08:	cb 01       	movw	r24, r22
    2e0a:	1f 91       	pop	r17
    2e0c:	08 95       	ret

00002e0e <__prologue_saves__>:
    2e0e:	2f 92       	push	r2
    2e10:	3f 92       	push	r3
    2e12:	4f 92       	push	r4
    2e14:	5f 92       	push	r5
    2e16:	6f 92       	push	r6
    2e18:	7f 92       	push	r7
    2e1a:	8f 92       	push	r8
    2e1c:	9f 92       	push	r9
    2e1e:	af 92       	push	r10
    2e20:	bf 92       	push	r11
    2e22:	cf 92       	push	r12
    2e24:	df 92       	push	r13
    2e26:	ef 92       	push	r14
    2e28:	ff 92       	push	r15
    2e2a:	0f 93       	push	r16
    2e2c:	1f 93       	push	r17
    2e2e:	cf 93       	push	r28
    2e30:	df 93       	push	r29
    2e32:	cd b7       	in	r28, 0x3d	; 61
    2e34:	de b7       	in	r29, 0x3e	; 62
    2e36:	ca 1b       	sub	r28, r26
    2e38:	db 0b       	sbc	r29, r27
    2e3a:	0f b6       	in	r0, 0x3f	; 63
    2e3c:	f8 94       	cli
    2e3e:	de bf       	out	0x3e, r29	; 62
    2e40:	0f be       	out	0x3f, r0	; 63
    2e42:	cd bf       	out	0x3d, r28	; 61
    2e44:	09 94       	ijmp

00002e46 <__epilogue_restores__>:
    2e46:	2a 88       	ldd	r2, Y+18	; 0x12
    2e48:	39 88       	ldd	r3, Y+17	; 0x11
    2e4a:	48 88       	ldd	r4, Y+16	; 0x10
    2e4c:	5f 84       	ldd	r5, Y+15	; 0x0f
    2e4e:	6e 84       	ldd	r6, Y+14	; 0x0e
    2e50:	7d 84       	ldd	r7, Y+13	; 0x0d
    2e52:	8c 84       	ldd	r8, Y+12	; 0x0c
    2e54:	9b 84       	ldd	r9, Y+11	; 0x0b
    2e56:	aa 84       	ldd	r10, Y+10	; 0x0a
    2e58:	b9 84       	ldd	r11, Y+9	; 0x09
    2e5a:	c8 84       	ldd	r12, Y+8	; 0x08
    2e5c:	df 80       	ldd	r13, Y+7	; 0x07
    2e5e:	ee 80       	ldd	r14, Y+6	; 0x06
    2e60:	fd 80       	ldd	r15, Y+5	; 0x05
    2e62:	0c 81       	ldd	r16, Y+4	; 0x04
    2e64:	1b 81       	ldd	r17, Y+3	; 0x03
    2e66:	aa 81       	ldd	r26, Y+2	; 0x02
    2e68:	b9 81       	ldd	r27, Y+1	; 0x01
    2e6a:	ce 0f       	add	r28, r30
    2e6c:	d1 1d       	adc	r29, r1
    2e6e:	0f b6       	in	r0, 0x3f	; 63
    2e70:	f8 94       	cli
    2e72:	de bf       	out	0x3e, r29	; 62
    2e74:	0f be       	out	0x3f, r0	; 63
    2e76:	cd bf       	out	0x3d, r28	; 61
    2e78:	ed 01       	movw	r28, r26
    2e7a:	08 95       	ret

00002e7c <_exit>:
    2e7c:	f8 94       	cli

00002e7e <__stop_program>:
    2e7e:	ff cf       	rjmp	.-2      	; 0x2e7e <__stop_program>
